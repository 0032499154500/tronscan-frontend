"use strict";var precacheConfig=[["https://tronscan.github.io/tronscan-frontend/d59729439a203fc474f5677b8d18d8bb.css","d59729439a203fc474f5677b8d18d8bb"],["https://tronscan.github.io/tronscan-frontend/df7f2ae527d40907753c23c534b4d428.svg","df7f2ae527d40907753c23c534b4d428"],["https://tronscan.github.io/tronscan-frontend/index.html","939f91c3ac1360e09585895c9f255af6"],["https://tronscan.github.io/tronscan-frontend/static/css/main.29c1e850.css","dd3bb9b4005c6331b378d208415ced4d"],["https://tronscan.github.io/tronscan-frontend/static/js/Account.feeda082.chunk.js","b97d7b0b9ee7fd2ceb872ff0cf182be1"],["https://tronscan.github.io/tronscan-frontend/static/js/Accounts.73546701.chunk.js","3bfc11211189f092c037f1dcea408452"],["https://tronscan.github.io/tronscan-frontend/static/js/AddSignatureModal.302cff51.chunk.js","3568a4c468f0777c0ace546adcd2e0a4"],["https://tronscan.github.io/tronscan-frontend/static/js/CopyrightAsync.35fd67c1.chunk.js","847f4eb7b48fbacb553226b6fda93018"],["https://tronscan.github.io/tronscan-frontend/static/js/DemoAsync.c98a78c7.chunk.js","37aeb926f377e7ee8ed3ee1a58c9161c"],["https://tronscan.github.io/tronscan-frontend/static/js/FaqAsync.b19bc521.chunk.js","3a1b51c5c405d87ca550e012e7455249"],["https://tronscan.github.io/tronscan-frontend/static/js/Foundation.6ff9e00a.chunk.js","da9b1939333c6263293ed35524e9f300"],["https://tronscan.github.io/tronscan-frontend/static/js/LedgerHelp.57856a52.chunk.js","3f78b12e167c5825da1818508d787b8e"],["https://tronscan.github.io/tronscan-frontend/static/js/Live.2f6fa0df.chunk.js","ceaddce3b8121c1b9034c094ea2e74ac"],["https://tronscan.github.io/tronscan-frontend/static/js/Markets.e9b45ad2.chunk.js","aeffa4a098b33efee5d8bccf370191a2"],["https://tronscan.github.io/tronscan-frontend/static/js/NodeMap.b8ad8b7a.chunk.js","10b9320f30a7c55452304c1c57f64492"],["https://tronscan.github.io/tronscan-frontend/static/js/NodeTester.63c6a034.chunk.js","e17e1b8166bfecc4198b754468c00197"],["https://tronscan.github.io/tronscan-frontend/static/js/Nodes.e49876d8.chunk.js","5fb23386c5007125d4a8ee1fe17a02ae"],["https://tronscan.github.io/tronscan-frontend/static/js/Recaptcha.ec1f2441.chunk.js","8efc04e246ee57220944e6f2aef17faf"],["https://tronscan.github.io/tronscan-frontend/static/js/Representatives.73d3a908.chunk.js","c0ccdc95c79438cc0f1bddd9c6f8de7b"],["https://tronscan.github.io/tronscan-frontend/static/js/SingleStats.d2c1a1d4.chunk.js","6d5aef3c14eddff2d9c1b98a61b2d57a"],["https://tronscan.github.io/tronscan-frontend/static/js/Stats.aec566fd.chunk.js","823bc52dddee639aa56862ba96612292"],["https://tronscan.github.io/tronscan-frontend/static/js/System.8157f165.chunk.js","79bc85c927d97ad6d6cb3ee0d21e05f6"],["https://tronscan.github.io/tronscan-frontend/static/js/TokenDetail.1ebd36e1.chunk.js","465adb8e17c8d74dc5dd6565fc5bd831"],["https://tronscan.github.io/tronscan-frontend/static/js/TokenList.ad242d50.chunk.js","17a917b448525deebbf8d68e4abf1555"],["https://tronscan.github.io/tronscan-frontend/static/js/TokenOverview.19fd81dd.chunk.js","98cbf1a4e1349c84b08077e34b7ea0ad"],["https://tronscan.github.io/tronscan-frontend/static/js/TokensCreate.334a3c18.chunk.js","624ef61de18e8d57abaa80e8278313e0"],["https://tronscan.github.io/tronscan-frontend/static/js/TransactionViewer.3bba716e.chunk.js","4dfae82610db6cdecc1fd46d419389f6"],["https://tronscan.github.io/tronscan-frontend/static/js/VoteLive.8435ff4d.chunk.js","13127930ed26113bf74fa1841c6e11dc"],["https://tronscan.github.io/tronscan-frontend/static/js/VoteOverview.1766b0a9.chunk.js","3a3aed666dac6b5737310716a8a366f1"],["https://tronscan.github.io/tronscan-frontend/static/js/WalletWizard.1cb7e5f4.chunk.js","81862b79dc1bc10896afd448a41f17fb"],["https://tronscan.github.io/tronscan-frontend/static/js/languages.4aa38bfd.chunk.js","e010e99755ee10e660348a909aec9e72"],["https://tronscan.github.io/tronscan-frontend/static/js/main.19e1bcf2.js","0d489917203f1fde8578e1d5c12668ab"],["https://tronscan.github.io/tronscan-frontend/static/media/body_backgound_dark_theme_transparent.4aca17ac.png","4aca17ac334423634d645e1cfd0cbf8b"],["https://tronscan.github.io/tronscan-frontend/static/media/body_backgound_transparent.8d0012fe.png","8d0012fe4f8173d9411ae10cb5da705a"],["https://tronscan.github.io/tronscan-frontend/static/media/body_backgound_tronblue_transparent.8ca26328.png","8ca263287efd76a4ff3ec6091266215b"],["https://tronscan.github.io/tronscan-frontend/static/media/token-card-bg-hover.1ee72438.png","1ee724387aea5d4a6887f486eac6b41a"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-banner-1.e40b3379.png","e40b3379629262491cfa1724efcb0083"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-banner-inverted.8621e167.png","8621e16760c7afdd7592a4c891129311"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-banner-tronblue.2ca3b12a.png","2ca3b12a36e68bcb9e07e7cea0ac502a"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-logo-inverted-testnet.e492a037.png","e492a0376c4a249edb99dcd29e2f44dd"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-logo-testnet.66063d4d.png","66063d4df80a2fcd0985c140b0a8222e"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-logo.f142f640.jpg","f142f64042ad58a9059189c6d5e87ac4"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(t,n){var e=new URL(t);return"/"===e.pathname.slice(-1)&&(e.pathname+=n),e.toString()},cleanResponse=function(n){return n.redirected?("body"in n?Promise.resolve(n.body):n.blob()).then(function(t){return new Response(t,{headers:n.headers,status:n.status,statusText:n.statusText})}):Promise.resolve(n)},createCacheKey=function(t,n,e,a){var c=new URL(t);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(e)),c.toString()},isPathWhitelisted=function(t,n){if(0===t.length)return!0;var e=new URL(n).pathname;return t.some(function(t){return e.match(t)})},stripIgnoredUrlParameters=function(t,e){var n=new URL(t);return n.hash="",n.search=n.search.slice(1).split("&").map(function(t){return t.split("=")}).filter(function(n){return e.every(function(t){return!t.test(n[0])})}).map(function(t){return t.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(t){var n=t[0],e=t[1],a=new URL(n,self.location),c=createCacheKey(a,hashParamName,e,/\.\w{8}\./);return[a.toString(),c]}));function setOfCachedUrls(t){return t.keys().then(function(t){return t.map(function(t){return t.url})}).then(function(t){return new Set(t)})}self.addEventListener("install",function(t){t.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(e){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!e.has(n)){var t=new Request(n,{credentials:"same-origin"});return fetch(t).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return a.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(t){var e=new Set(urlsToCacheKeys.values());t.waitUntil(caches.open(cacheName).then(function(n){return n.keys().then(function(t){return Promise.all(t.map(function(t){if(!e.has(t.url))return n.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(n){if("GET"===n.request.method){var t,e=stripIgnoredUrlParameters(n.request.url,ignoreUrlParametersMatching),a="index.html";(t=urlsToCacheKeys.has(e))||(e=addDirectoryIndex(e,a),t=urlsToCacheKeys.has(e));var c="https://tronscan.github.io/tronscan-frontend/index.html";!t&&"navigate"===n.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],n.request.url)&&(e=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(e)),t&&n.respondWith(caches.open(cacheName).then(function(t){return t.match(urlsToCacheKeys.get(e)).then(function(t){if(t)return t;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',n.request.url,t),fetch(n.request)}))}});