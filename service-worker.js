"use strict";var precacheConfig=[["https://tronscan.github.io/tronscan-frontend/d59729439a203fc474f5677b8d18d8bb.css","d59729439a203fc474f5677b8d18d8bb"],["https://tronscan.github.io/tronscan-frontend/df7f2ae527d40907753c23c534b4d428.svg","df7f2ae527d40907753c23c534b4d428"],["https://tronscan.github.io/tronscan-frontend/index.html","25b21ea558b6d937bdaaffac07cad831"],["https://tronscan.github.io/tronscan-frontend/static/css/main.29c1e850.css","dd3bb9b4005c6331b378d208415ced4d"],["https://tronscan.github.io/tronscan-frontend/static/js/Account.e663f84a.chunk.js","c10742711bd03136789745e5a6fcc9f9"],["https://tronscan.github.io/tronscan-frontend/static/js/Accounts.1f14fb10.chunk.js","0958438dc52e9c35b55541ac7dc73cdc"],["https://tronscan.github.io/tronscan-frontend/static/js/AddSignatureModal.1fa2ddfa.chunk.js","1e2eedf6f65fc09311e1ecbe86700fb9"],["https://tronscan.github.io/tronscan-frontend/static/js/CopyrightAsync.2a41974a.chunk.js","85596c7f10d5911f508e7d4a6611cc1b"],["https://tronscan.github.io/tronscan-frontend/static/js/DemoAsync.74d43486.chunk.js","039a4667cf2ce7439a1e7c6ce49a646a"],["https://tronscan.github.io/tronscan-frontend/static/js/FaqAsync.0348a965.chunk.js","eb372894e1da42c6190ddfbf83d407ee"],["https://tronscan.github.io/tronscan-frontend/static/js/Foundation.454d9528.chunk.js","fac832a682ede87ee7bd3192d80ac44a"],["https://tronscan.github.io/tronscan-frontend/static/js/LedgerHelp.907ce7cd.chunk.js","aa75fdc04ab69bf60071763cfdea5bff"],["https://tronscan.github.io/tronscan-frontend/static/js/Live.1c67bd7e.chunk.js","ba65c8aa5495174419dc4b63e2c3669b"],["https://tronscan.github.io/tronscan-frontend/static/js/Markets.ea5e622c.chunk.js","1d0c2dd5560b7ee32f71aa90bad03be6"],["https://tronscan.github.io/tronscan-frontend/static/js/NodeMap.89aa7645.chunk.js","54de3c5026c36467989f7f6d2ea93fe5"],["https://tronscan.github.io/tronscan-frontend/static/js/NodeTester.ad20b2e7.chunk.js","61860436aa2e5c901fc8123f46054d78"],["https://tronscan.github.io/tronscan-frontend/static/js/Nodes.538baf89.chunk.js","f6a90dc825a0f1af3ca40fdb51fff74e"],["https://tronscan.github.io/tronscan-frontend/static/js/Recaptcha.82ff6225.chunk.js","9b301e8e183c9da1dc50806c51d038ac"],["https://tronscan.github.io/tronscan-frontend/static/js/Representatives.e1e8bc04.chunk.js","f0478b80a1b6bc1d0c9de6261d65ebcd"],["https://tronscan.github.io/tronscan-frontend/static/js/SingleStats.229861c0.chunk.js","fabdecd6aac5420df66c10ec0867550a"],["https://tronscan.github.io/tronscan-frontend/static/js/Stats.cbc9fc9d.chunk.js","5e4a68763ec8b6d18860ad150fe480db"],["https://tronscan.github.io/tronscan-frontend/static/js/System.55a5b247.chunk.js","4992d38cc7fcfc7410e64dd730c079c9"],["https://tronscan.github.io/tronscan-frontend/static/js/TokenDetail.e253f5bd.chunk.js","71cd22d333a50ee53260f43d5b6bd574"],["https://tronscan.github.io/tronscan-frontend/static/js/TokenList.0b9752ff.chunk.js","8865177e96f637ae9339df746f012898"],["https://tronscan.github.io/tronscan-frontend/static/js/TokenOverview.3d617b52.chunk.js","87f009d3fe1a67adc31ffa1bde51b6e7"],["https://tronscan.github.io/tronscan-frontend/static/js/TokensCreate.58476113.chunk.js","6db63778d453b6a2aa2d7b168eacb777"],["https://tronscan.github.io/tronscan-frontend/static/js/TransactionViewer.6568d6de.chunk.js","897eec92a2ef43979cedf4758845587c"],["https://tronscan.github.io/tronscan-frontend/static/js/TronConvertTool.864d50d5.chunk.js","b494e4d0403224317b85ade0e0be3dc9"],["https://tronscan.github.io/tronscan-frontend/static/js/VoteLive.a90b918c.chunk.js","f9aa52806d94aa360bb093e4cde4ea46"],["https://tronscan.github.io/tronscan-frontend/static/js/VoteOverview.d3402d0f.chunk.js","dd170cf02938753c34e2bb9ae704bf5a"],["https://tronscan.github.io/tronscan-frontend/static/js/WalletWizard.74e93869.chunk.js","35f50381f04ed1d8e2bd6ddf632a30df"],["https://tronscan.github.io/tronscan-frontend/static/js/languages.1df5c8fa.chunk.js","8a7585d58ce22cdef99de266024435e7"],["https://tronscan.github.io/tronscan-frontend/static/js/main.02a7ab67.js","ab22226ca4716a5eedc89becdbda1d8f"],["https://tronscan.github.io/tronscan-frontend/static/media/Block-Producer-Chart.142b885d.png","142b885d723fe2cb8bf4972533fbcf73"],["https://tronscan.github.io/tronscan-frontend/static/media/body_backgound_dark_theme_transparent.4aca17ac.png","4aca17ac334423634d645e1cfd0cbf8b"],["https://tronscan.github.io/tronscan-frontend/static/media/body_backgound_transparent.8d0012fe.png","8d0012fe4f8173d9411ae10cb5da705a"],["https://tronscan.github.io/tronscan-frontend/static/media/body_backgound_tronblue_transparent.8ca26328.png","8ca263287efd76a4ff3ec6091266215b"],["https://tronscan.github.io/tronscan-frontend/static/media/token-card-bg-hover.1ee72438.png","1ee724387aea5d4a6887f486eac6b41a"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-banner-1.e40b3379.png","e40b3379629262491cfa1724efcb0083"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-banner-inverted.8621e167.png","8621e16760c7afdd7592a4c891129311"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-banner-tronblue.2ca3b12a.png","2ca3b12a36e68bcb9e07e7cea0ac502a"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-logo-inverted-testnet.e492a037.png","e492a0376c4a249edb99dcd29e2f44dd"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-logo-testnet.66063d4d.png","66063d4df80a2fcd0985c140b0a8222e"],["https://tronscan.github.io/tronscan-frontend/static/media/tron-logo.f142f640.jpg","f142f64042ad58a9059189c6d5e87ac4"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(t,n){var e=new URL(t);return"/"===e.pathname.slice(-1)&&(e.pathname+=n),e.toString()},cleanResponse=function(n){return n.redirected?("body"in n?Promise.resolve(n.body):n.blob()).then(function(t){return new Response(t,{headers:n.headers,status:n.status,statusText:n.statusText})}):Promise.resolve(n)},createCacheKey=function(t,n,e,a){var c=new URL(t);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(e)),c.toString()},isPathWhitelisted=function(t,n){if(0===t.length)return!0;var e=new URL(n).pathname;return t.some(function(t){return e.match(t)})},stripIgnoredUrlParameters=function(t,e){var n=new URL(t);return n.hash="",n.search=n.search.slice(1).split("&").map(function(t){return t.split("=")}).filter(function(n){return e.every(function(t){return!t.test(n[0])})}).map(function(t){return t.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(t){var n=t[0],e=t[1],a=new URL(n,self.location),c=createCacheKey(a,hashParamName,e,/\.\w{8}\./);return[a.toString(),c]}));function setOfCachedUrls(t){return t.keys().then(function(t){return t.map(function(t){return t.url})}).then(function(t){return new Set(t)})}self.addEventListener("install",function(t){t.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(e){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!e.has(n)){var t=new Request(n,{credentials:"same-origin"});return fetch(t).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return a.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(t){var e=new Set(urlsToCacheKeys.values());t.waitUntil(caches.open(cacheName).then(function(n){return n.keys().then(function(t){return Promise.all(t.map(function(t){if(!e.has(t.url))return n.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(n){if("GET"===n.request.method){var t,e=stripIgnoredUrlParameters(n.request.url,ignoreUrlParametersMatching),a="index.html";(t=urlsToCacheKeys.has(e))||(e=addDirectoryIndex(e,a),t=urlsToCacheKeys.has(e));var c="https://tronscan.github.io/tronscan-frontend/index.html";!t&&"navigate"===n.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],n.request.url)&&(e=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(e)),t&&n.respondWith(caches.open(cacheName).then(function(t){return t.match(urlsToCacheKeys.get(e)).then(function(t){if(t)return t;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',n.request.url,t),fetch(n.request)}))}});