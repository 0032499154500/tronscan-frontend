{"version":3,"sources":["../static/js/VoteLive.f2867d88.chunk.js","components/voting/VoteLive.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/config.js","../node_modules/echarts/lib/util/number.js","../node_modules/zrender/lib/core/vector.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/echarts/lib/util/format.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/echarts/lib/model/Component.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/data/helper/dataProvider.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/zrender/lib/core/event.js","../node_modules/echarts/lib/data/Source.js","../node_modules/echarts/lib/data/helper/dataStackHelper.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/data/helper/sourceType.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/data/helper/sourceHelper.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/echarts/lib/stream/task.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/data/helper/dimensionHelper.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/data/helper/createDimensions.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/helper/fixShadow.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/echarts/lib/model/Global.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/model/referHelper.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/Series.js","../node_modules/echarts/lib/chart/helper/createRenderPlanner.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/data/OrdinalMeta.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/echarts/lib/chart/line/helper.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","components/common/chart.config.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/zrender/lib/graphic/IncrementalDisplayable.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/processor/dataStack.js","../node_modules/echarts/lib/model/mixin/dataFormat.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/visual/aria.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/stream/Scheduler.js","../node_modules/echarts/lib/theme/light.js","../node_modules/echarts/lib/theme/dark.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/layout/barGrid.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/google-palette/palette.js","../node_modules/react-flip-move/dist/react-flip-move.es.js","components/common/MultiLineChart.js"],"names":["webpackJsonp","1007","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_regenerator","_regenerator2","_extends","assign","target","i","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_reactIntl","_lodash","_timing","_reactFlipMove","_reactFlipMove2","_Avatar","_Avatar2","_api","_Links","_googlePalette","_googlePalette2","_i18n","_MultiLineChart","_MultiLineChart2","_loaders","VoteLive","_React$Component","_this2","_this","getPrototypeOf","loadCandidates","mark","_callee","_ref2","witnesses","wrap","_context","prev","next","Client","getWitnesses","sent","setState","candidates","map","c","votes","stop","loadVotes","_callee2","_context2","getLiveVotes","loadData","_callee3","data","_context3","getVoteStats","state","colors","_this3","setInterval","_state","address","newCandidates","sortBy","index","rank","createElement","className","tu","TronLoader","style","height","width","duration","easing","enterAnimation","staggerDurationBy","staggerDelayBy","candidate","color","size","avatar","row","AddressLink","name","url","FormattedNumber","Component","fontSize","lineHeight","borderRadius","withTimers","1008","$override","_ctx","methods","clone","result","typeStr","objToString","isPrimitive","len","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isDom","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","createCanvas","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prop","mixin","isArrayLike","each","cb","context","forEach","nativeForEach","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","concat","curry","isFunction","isString","type","isTypedArray","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","primitiveKey","HashMap","visit","isArr","thisMap","set","createHashMap","concatArray","a","b","newArray","offset","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","get","removeKey","1010","normalizeToArray","defaultEmphasis","opt","subOpts","emphasis","subOptName","getDataItemValue","dataItem","Date","isDataItemOption","mappingToExists","exists","newCptOptions","zrUtil","exist","cptOption","option","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","DUMMY_COMPONENT_NAME_PREFIX","idNum","isNameSpecified","componentModel","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","dataIndex","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","makeInner","innerUniqueIndex","Math","random","toFixed","hostObj","parseFinder","ecModel","finder","defaultMainType","has","parsedKey","match","mainType","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","setAttribute","dom","getAttribute","TEXT_STYLE_OPTIONS","1011","extendShape","opts","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","ZImage","image","x","y","onload","img","setStyle","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","max","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","animatableModel","isAnimationEnabled","postfix","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","parent","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","Image","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","min","mergePath","1012","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","theme","prioritySortFunc","__prio","themeStorage","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","api","createExtensionAPI","timsort","visualFuncs","dataProcessorFuncs","_scheduler","Scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","_onframe","bindRenderedEvent","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","prepare","ecIns","scheduler","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","updateStreamModes","chartsMap","eachSeries","seriesModel","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","isFinished","unfinished","doPrepare","viewId","viewMap","classType","isComponent","ComponentView","getClass","ChartView","viewList","add","__id","__ecComponentInfo","componentIndex","componentType","renderTask","dispose","remove","splice","clearColorPalette","render","renderComponents","chart","renderSeries","dirtyList","componentView","updateZ","dirtyMap","chartView","updatePayload","uid","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","aria","performPostUpdateFuncs","postUpdateFuncs","storage","elCount","env","node","blendMode","blend","eachPendingDisplayable","displayable","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","connect","groupId","groupIdBase","disConnect","isDisposed","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processor","normalizeRegister","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","PRIORITY_VISUAL_LAYOUT","registerVisual","visualTask","PRIORITY_VISUAL_CHART","targetList","defaultPriority","visualType","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","GlobalModel","OptionManager","dataStack","graphic","_throttle","seriesColor","loadingDefault","lightTheme","darkTheme","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","_disposed","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","setTheme","console","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataUrl","svgSupported","list","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","component","ignore","getType","toDataURL","getConnectedDataURL","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","getData","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","setBackgroundColor","colorArr","stringify","updateTransform","componentDirtyList","seriesDirtyMap","setDirty","updateView","markUpdateMethod","updateVisual","updateLayout","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","eveName","dataModel","getDataParams","dataType","eventData","clear","series","disconnect","dataTool","version","___ec_export","1013","global","dev","1014","_trim","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","NaN","precision","returnStr","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","floor","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","MAX_SAFE_INTEGER","1015","out","ArrayCtor","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","1016","wx","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","userAgent","_default","1017","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","1018","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","1021","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","getTooltipMarker","extraCssText","pad","substr","formatTime","isUTC","date","numberUtil","utc","M","h","S","capitalFirst","textContain","varName","truncateText","getTextRect","1024","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","formatUtil","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","mergeLayoutParam","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","getLayoutParams","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","1027","Model","doGet","pathArr","getParent","getParentMethod","inner","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","1029","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","Clz","classAttr","classBase","isInstance","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","Clazz","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","1031","getDependencies","deps","unshift","componentUtil","boxLayoutMixin","defaultOption","dependentModels","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","1033","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","1038","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","1039","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","1040","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","eachSeriesByType","getBaseAxis","axis","adjustedScale","adjustScaleForOverflow","axisExtent","axisLength","barWidthAndOffset","calBarWidthAndOffset","baseAxisKey","dim","barsOnCurrentAxis","undefined","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","createScaleByModel","axisType","OrdinalScale","getOrdinalMeta","IntervalScale","Scale","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","_barGrid","1042","DefaultDataProvider","dimSize","Source","seriesDataToSource","_source","_data","sourceFormat","SOURCE_FORMAT_TYPED_ARRAY","_offset","_dimSize","providerMethods","SOURCE_FORMAT_ARRAY_ROWS","seriesLayoutBy","countSimply","getItemSimply","appendDataSimply","newData","getRawValueSimply","dimIndex","dimName","getDimValueSimply","converDataValue","_dimensionInfos","dimInfo","dimType","ordinalMeta","parseAndCollect","retrieveRawValue","getRawDataItem","getProvider","getSource","getDimensionInfo","rawValueGetters","retrieveRawAttr","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_OBJECT_ROWS","_sourceType","providerProto","pure","persistent","arrayRows_column","startIndex","getItem","arrayRows_row","objectRows","keyedColumns","dimensionsDefine","col","dims","newCol","oldCol","original","typedArray","clean","arrayRows","defaultDimValueGetters","_rawData","hasItemOption","1044","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","1045","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1046","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","preventDefault","stopPropagation","cancelBubble","returnValue","1047","fromDataset","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SERIES_LAYOUT_BY_COLUMN","encodeDefine","dimensionsDetectCount","1048","enableDataStack","dimensionInfoList","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","dimensionInfo","isExtraCoord","coordDim","createInvertedIndices","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","coordDimIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","stackedDim","stackedByDim","getCalculationInfo","1053","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","1054","debugMode","1055","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","progressive","incremental","inplace","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","1056","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","1057","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","stack","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1058","SERIES_LAYOUT_BY_ROW","1059","setting","_setting","_extent","_interval","clazzUtil","getSetting","unionExtent","unionExtentFromData","getApproximateExtent","start","end","thisExtent","isBlank","_isBlank","1060","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","getAxisPointerModel","1061","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","1071","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","1072","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","1073","excludes","includes","propName","1074","Gradient","addColorStop","1075","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","sourceHeader","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","potentialNameDimIndex","nameMap","displayName","maxLoop","firstIndex","coordSysDefine","getCoordSysDefineBySeries","encodeItemName","encodeSeriesName","seriesType","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","datasetIndex","guessOrdinal","detectValue","sample","_referHelper","1076","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","1077","createTask","define","Task","_reset","reset","_plan","_count","_onDirty","onDirty","_dirty","taskIns","skip","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","progress","forceFirstProgress","_progress","downstream","_downstream","taskProto","performArgs","upTask","_upstream","outputData","__pipeline","currentTask","planResult","outputDueEnd","pipe","downTask","getUpstream","getDownstream","setOutputEnd","1078","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1079","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","dimItem","coordDimArr","mayLabelDimType","OTHER_DIMENSIONS","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","defaultedTooltip","encodeTooltip","tooltip","getDimensionTypeByAxis","1080","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","1085","Chart","renderTaskPlan","renderTaskReset","elSetState","toggleHighlight","dataIdx","getItemGraphicEl","eachItemGraphicEl","renderPlanner","canProgressiveRender","pipelineContext","progressMethodMap","_task","createRenderPlanner","highlight","downplay","incrementalPrepareRender","incrementalRender","chartProto","1086","getIndicesCtor","_rawCount","CtorUint32Array","CtorUint16Array","cloneChunk","originalChunk","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","prepareInvertedIndex","invertedIndicesMap","_invertedIndicesMap","invertedIndices","categories","getRawIndexWithoutIndices","getRawIndexWithIndices","_indices","getId","rawIndex","_idList","_getIdFromStore","ID_PREFIX","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","rawExtent","_rawExtent","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","DataDiffer","_dataProvider","_dimensionHelper","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","Uint32Array","Uint16Array","dimensionInfos","dimensionNames","dimensionName","_nameList","_optionModels","_visual","_layout","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_approximateExtent","_dimensionsSummary","_calculationInfo","listProto","getDimension","getDimensionsOnCoord","mapDimension","dimensionsSummary","initData","nameList","dimValueGetter","_nameRepeatCount","defaultDimValueGetter","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","chunkSize","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","_idDimIdx","DataCtor","resizeChunkArray","newStore","chunkIndex","chunkOffset","dimStorage","_getNameFromStore","chunk","idDimIdx","getIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","setCalculationInfo","getSum","rawIndexOf","getName","indices","rawDataIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","contextCompat","filterSelf","newIndices","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","cloneShallow","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","1087","completeDimensions","coordDimensions","dimsDef","encodeDef","dimCount","dimensionsCount","generateCoord","generateCoordCount","1103","ZRender","guid","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","1104","idStart","1105","Animatable","clipPath","drift","decomposeTransform","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","1106","mIdentity","origin","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","1107","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","1108","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1109","1110","createLinearGradient","createRadialGradient","fixShadow","STYLE_COMMON_PROPS","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","textRect","transformText","textOrigin","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","1111","SHADOW_PROPS","1112","repeat","createPattern","1113","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1114","_image","sWidth","sHeight","drawImage","1115","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","1116","r1","r2","r3","r4","total","1117","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","_seriesIndicesMap","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMixin","_sourceHelper","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","componentTypes","1118","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","PI2","extremity","1119","normalizeRadian","1120","windingLine","dir","1121","orignalBrush","modified","clipPaths","shadowTemp","1122","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1123","getNearestColorPalette","requestColorNum","paletteNum","colorIdx","colorNameMap","getColorFromPalette","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","1124","coordSysName","axisMap","fetch","fetchers","isCategory","cartesian2d","xAxisModel","yAxisModel","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","parallelModel","parallelAxisIndex","axisIndex","axisDim","1125","chartInstance","echartsAPIList","1126","autoSeriesName","getSeriesAutoName","getRawData","dataDims","nameArr","dataTaskCount","dataTaskReset","dataTaskProgress","wrapData","onDataSelfChange","task","getCurrentTask","pipeline","getPipeline","agentStubMap","_format","dataFormatMixin","legendDataProvider","visualColorAccessPath","dataTask","getInitialData","dataBeforeProcessed","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","isOverallFilter","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","tooltipDimLen","getRawValue","isValueArr","formattedValue","setEachItem","dimHead","valStr","vertially","colorEl","animationEnabled","coordDimToDataDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","1127","originalLarge","large","originalProgressive","1128","createListFromArray","coordSysDimDefs","registeredCoordSys","hasNameEncode","dimInfoList","createDimensions","categoryAxisModel","stackCalculationInfo","isNeedCompleteOrdinalData","itemOpt","sampleItem","firstDataNotNull","_dataStackHelper","1129","sysDims","applyDim","coordDimNameMap","dataDimNameMap","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","fromZero","extra","genName","optDimCount","1130","OrdinalMeta","_needCollect","needCollect","_deduplication","deduplication","getOrCreateMap","createByAxisModel","dedplication","getOrdinal","category","1131","fixExtent","1132","axisHelper","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","1133","fixExtentWithBands","nTick","normalizedExtent","Axis","inverse","onBand","_labelInterval","containData","dataToCoord","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","isHorizontal","getRotate","getLabelInterval","labelInterval","1134","dataToPoint","1135","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","1136","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","formatter","paddings","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowColor","viewWidth","viewHeight","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1137","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","_symbol","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","1138","gridModel","grid","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","1139","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","axisPointerClazz","registerAxisPointerClass","1140","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","_labelHelper","getDefaultLabel","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","useNameLabel","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","itemModel","getItemStyle","elStyle","symbolInnerColor","onEmphasis","ratio","onNormal","fadeOut","keepLabel","1141","prepareDataCoordInfo","valueOrigin","baseAxis","valueAxis","getOtherAxis","valueStart","getValueStart","baseAxisDim","valueAxisDim","valueDim","baseDim","baseDataOffset","stacked","dataDimsForPoint","getStackedOnPoint","dataCoordInfo","stackedData","1142","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","1151","_defineProperty","_selected","pieChart","title","lineChart","containLabel","xAxis","yAxis","ringPieChart","legend","selected","Bancor Network","Gatecoin","BitFlip","Braziliex","Cobinhood","CoinExchange","CoinFalcon","Cryptomate","selectedMode","normal","labelLine","multiLineChart","1152","subtext","subtarget","borderColor","borderWidth","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","getBoxLayoutParams","layoutRect","alignStyle","1153","1183","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","SILENT","util","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","setHandlerProxy","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1184","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1185","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1186","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1187","_life","_initialized","onrestart","_pausedTime","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","1188","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1189","parseInt10","isLayerValid","__builtin__","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","cssText","Layer","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_hoverlayer","_hoverElements","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_redrawId","_paintList","clearColor","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","save","originalEl","_doPaintEl","restore","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","clearRect","eachBuiltinLayer","virtual","layerList","zi","__startIndex","__drawIndex","useTimer","now","__endIndex","firstEl","notClear","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","__used","incrementalLayerCount","getElementCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","display","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","1190","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1191","textHelper","1192","_event","_clips","_running","_time","_pauseStart","clips","_update","deferredEvents","deferredClips","_startLoop","1193","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","GestureMgr","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","1194","pointPair","eventUtil","_track","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","pinchCenter","1195","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1196","1197","graphicUtil","PATH_COLOR","1198","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","1199","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1200","_l","_a","_b","1201","1202","_curve","1203","1204","nPoint","mathAtan2","1205","1206","1207","fixClipWithShadow","unitX","unitY","1208","1209","polyHelper","1210","interpolate","isLoop","v2Distance","segs","w2","w3","1211","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","cp0","v2Add","1212","1213","1214","pointAt","1215","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","tangentAt","1216","1217","paths","_updatePathDirty","1218","globalCoord","1219","1220","IncrementalDisplayble","Displayble","_displayables","_temporaryDisplayables","_cursor","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","1221","getBorderLineDash","1222","1223","platform","gradientColor","animationDuration","animationDurationUpdate","animationEasingUpdate","animationThreshold","progressiveThreshold","hoverLayerThreshold","useUTC","1224","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1225","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1226","compatEC2ItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","processSeries","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","toArr","toObj","axes","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","toolbox","toolboxOpt","feature","featureOpt","1227","stackInfoMap","stackInfoList","stackInfo","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","1228","DIMENSION_LABEL_REG","rawValue","componentSubType","marker","labelProp","1229","componentProto","1230","createOnAllSeries","performRawSeries","colorAccessPath","dataEach","1231","keyValues","getConfig","userConfig","ariaModel","lang","getSeriesTypeName","typeNames","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","1232","polygon","lineX","lineY","dataView","dataZoom","zoom","back","magicType","bar","tiled","saveAsImage","pie","scatter","effectScatter","tree","treemap","boxplot","candlestick","heatmap","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","allData","partialData","1233","maskColor","mask","labelRect","1234","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","createSeriesStageTask","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","getTargetSeries","pipelineMap","_pipelineMap","createOverallStageTask","createStub","stubReset","stubOnDirty","overallProgress","agent","__block","overallTaskReset","overallReset","upstreamContext","stubProgress","resetDefines","seriesTaskProgress","resetDefine","__idxInPipeline","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","_component","pCtx","progressiveEnabled","bockIndex","dataLen","threshold","stageTaskMap","cond","1235","colorAll","1236","axisCommon","axisTick","axisLabel","splitLine","splitArea","areaStyle","iconStyle","controlStyle","timeAxis","logAxis","categoryAxis","color0","borderColor0","1237","format","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","1238","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","_createDimensions","1239","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","1240","scaleProto","_ordinalMeta","1241","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","bandWidth","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","barSeries","cartesian","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","isValueAxisH","valueAxisStart","getGlobalExtent","baseValue","sign","baseCoord","1242","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","1243","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","1244","decode","json","UTF8Encoding","encodeScale","UTF8Scale","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","geometries","exterior","interiors","region","Region","cp","1245","polygonContain","MAX_NUMBER","loopGeo","transformTo","1246","1247","axisTrigger","1248","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","payloadInfo","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","tooltipOption","lastHighlights","newHighlights","toHighlight","toDownplay","1249","AxisPointerModel","triggerOn","shadowStyle","handle","icon","1250","globalListener","AxisPointerView","1251","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","pixelValue","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","targetShape","shadow","1252","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","doClear","buildLabel","1253","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","1254","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","tooltipModel","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","setContent","getSize","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","1255","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1256","visualSymbol","layoutPoints","dataSample","1257","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","1258","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","SymbolDraw","lineAnimationDiff","_poly","_helper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","oldData","__temp","_step","_newPolygon","coordSysClipShape","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSeries","stackedOnSmooth","_valueOrigin","getAxesByScale","isLabelIgnored","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","1259","symbolCtor","_symbolCtor","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","1260","labelDims","vals","1261","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","1262","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","isMono","drawMono","drawNonMono","last","lastDiff","prevIdx","prevP","ctrlLen","v2Copy","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","1263","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","hasCallback","1264","segCount","isLargeRender","dimLen","tmpIn","tmpOut","1265","sampler","samplers","indexSampler","average","nearest","1266","1267","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","canNotOnZeroToAxis","updateAxisTransform","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","axesModels","grids","1268","Cartesian","axisX","axisY","reserved","clampData","xAxisExtent","yAxisExtent","1269","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","1270","coordExtent","1271","1272","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","__ordinalMeta","axisDefault","1273","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","logBase","1274","1275","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","1276","LegendModel","_updateData","legendData","hasSelected","isSelected","select","potentialData","availableNames","isPotential","_availableNames","unSelect","toggleSelected","itemWidth","itemHeight","inactiveColor","1277","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","makeBackground","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","viewportSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","legendSymbolType","itemGroup","_createItem","itemIcon","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","1350","legendFilter","1351","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1352","boxLayoutParams","layoutBox","1353","legendModels","1354","mergeAndNormalizeLayoutParams","raw","getOrient","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","1355","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","onclick","me","_pageGo","controllerGroup","pageTextStyleModel","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","legendId","canJump","pageText","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","1356","1430","palette","opt_begin","opt_end","scheme","opt_index","varargs","listSchemes","Scheme","opt_groups","palettes","palettes_max","palettes_min","makeGenerator","color_func","shrinking_takes_head","generate","color_func_cyclic","scheme_name","groups","cbf_max","addPalette","opt_is_cbf","addPalettes","opt_max","opt_cbf_max","shrinkByTakingHead","enabled","opt_idx","setColorFunction","opt_cyclic","fromPalettes","withColorFunction","registered_schemes","opt_number","cbf","schemes","opt_start","rgbColor","linearRgbColor","hsvColor","opt_s","opt_v","ColorFunction","Palette","PalettesList","SchemeType","rgb","poly","erf","tolSequentialColor","tolDivergingColor","tolRainbowColor","YlGn","3","4","5","6","7","8","9","YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr","10","11","BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired","12","Pastel1","Pastel2","Set1","Set2","Set3","2181","__webpack_exports__","warnOnce","msg","hasWarned","warn","omit","attrs","keys","arraysEqual","notBothArrays","_isArray","differentLengths","every","applyStylesToDOMNode","_ref","domNode","styles","setProperty","hyphenate","getKey","childData","getElementChildren","__WEBPACK_IMPORTED_MODULE_0_react__","toArray","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","parentNodePositionStatic","childIsDisabled","enterPresets","elevator","fade","accordionVertical","transformOrigin","accordionHorizontal","none","leavePresets","appearPresets","defaultPreset","disablePreset","predicate","cache","_typeof","Symbol","iterator","classCallCheck","possibleConstructorReturn","getRelativeBoundingBox","childDomNode","parentDomNode","getPosition","parentBox","_getPosition","getPositionDelta","_ref3","childBoundingBox","parentBoundingBox","defaultBox","oldRelativeBox","newAbsoluteBox","newRelativeBox","removeNodeFromDOMFlow","verticalAlignment","computed","marginAttrs","margins","_babelHelpers$extends","propertyVal","getPropertyValue","updateHeightPlaceholder","_ref4","parentData","originalParentHeight","collapsedParentHeight","reductionInHeight","getNativeNode","HTMLElement","foundNode","Node","TEXT_NODE","createTransitionString","transitionEnd","transitions","transition","-o-transition","-moz-transition","-webkit-transition","noBrowserSupport","FlipMove$1","_Component","FlipMove","_temp","_ret","_key","appearing","childrenData","heightPlaceholderData","remainingAnimations","childrenToAnimate","findDOMContainer","findDOMNode","runAnimation","dynamicChildren","doesChildNeedToBeAnimated","childrenInitialStyles","computeInitialStyles","animateChild","onStartAll","callChildrenHook","getChildData","_this$props","appearAnimation","leaveAnimation","isAppearingWithAnimation","isEnteringWithAnimation","entering","isLeavingWithAnimation","leaving","_getPositionDelta","dX","dY","componentDidMount","typeName","isAnimationDisabled","prepForAnimation","componentWillReceiveProps","nextProps","updateBoundingBoxCaches","nextChildren","calculateNextSetOfChildren","componentDidUpdate","previousProps","updatedChildren","findChildByKey","isEntering","numOfChildrenLeaving","nextChildIndex","_props","maintainContainerHeight","leavingChild","disabled","_getChildData","childInitialStyles","_this4","_getChildData2","onStart","bindTransitionEndHandler","_this5","_getChildData3","transitionEndHandler","ev","triggerFinishHooks","removeChildData","_this6","onFinish","onFinishAll","hook","_this7","elements","domNodes","childKey","hasChildData","_this8","childrenBoundingBoxes","setChildData","_getPositionDelta2","disableAllAnimations","prevState","createHeightPlaceholder","_this9","isContainerAList","placeholderType","ref","visibility","childrenWithRefs","_this10","_this11","_props2","delegated","enhancedFlipMove","ComposedComponent","_class","FlipMovePropConverter","checkChildren","convertProps","workingProps","convertTimingProp","convertAnimationProp","primaryPropKeys","delegatedProps","defaultValue","defaultProps","presets","presetKeys","2182","mapStateToProps","MultiLineReact","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","_chartConfig","_chartConfig2","_echarts","_echarts2","_reactRedux","_lodash2","lineId","nextState","isEqual","intl","myChart","getElementById","stats","addresses","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","timestamp","return","latestTimestamp","highestAddresses","keyBy","rowStats","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","entries","datetime","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","flag","candy","temp","stat","ss","newYAxis","initLine","mapDispatchToProps","injectIntl"],"mappings":"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","file":"static/js/VoteLive.f2867d88.chunk.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 1007:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(3);var _regenerator2=_interopRequireDefault(_regenerator);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactIntl=__webpack_require__(7);var _lodash=__webpack_require__(10);var _timing=__webpack_require__(84);var _reactFlipMove=__webpack_require__(2181);var _reactFlipMove2=_interopRequireDefault(_reactFlipMove);var _Avatar=__webpack_require__(118);var _Avatar2=_interopRequireDefault(_Avatar);var _api=__webpack_require__(5);var _Links=__webpack_require__(9);var _googlePalette=__webpack_require__(1430);var _googlePalette2=_interopRequireDefault(_googlePalette);var _i18n=__webpack_require__(4);var _MultiLineChart=__webpack_require__(2182);var _MultiLineChart2=_interopRequireDefault(_MultiLineChart);var _loaders=__webpack_require__(17);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var VoteLive=function(_React$Component){_inherits(VoteLive,_React$Component);function VoteLive(){var _this2=this;_classCallCheck(this,VoteLive);var _this=_possibleConstructorReturn(this,(VoteLive.__proto__||Object.getPrototypeOf(VoteLive)).call(this));_this.loadCandidates=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var _ref2,witnesses;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getWitnesses();case 2:_ref2=_context.sent;witnesses=_ref2.witnesses;_this.setState({candidates:witnesses.map(function(c){return _extends({},c,{votes:0});})});case 5:case\"end\":return _context.stop();}}},_callee,_this2);}));_this.loadVotes=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var votes;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _api.Client.getLiveVotes();case 2:votes=_context2.sent;_this.setState({votes:votes});case 4:case\"end\":return _context2.stop();}}},_callee2,_this2);}));_this.loadData=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var data;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _api.Client.getVoteStats();case 2:data=_context3.sent;_this.setState({data:data});case 4:case\"end\":return _context3.stop();}}},_callee3,_this2);}));_this.state={candidates:[],data:null,votes:{},colors:(0,_googlePalette2.default)('mpn65',20)};return _this;}_createClass(VoteLive,[{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;this.loadCandidates().then(function(){return _this3.loadVotes();});this.props.setInterval(function(){_this3.loadVotes();_this3.loadCandidates();},15000);this.loadData();}},{key:\"render\",value:function render(){var _state=this.state,candidates=_state.candidates,colors=_state.colors,votes=_state.votes,data=_state.data;candidates=candidates.map(function(c){return _extends({},c,{votes:votes[c.address]?votes[c.address].votes:0});});var newCandidates=(0,_lodash.sortBy)(candidates,function(c){return c.votes*-1;}).map(function(c,index){return _extends({},c,{rank:index+1});});return _react2.default.createElement(\"main\",{className:\"container header-overlap pb-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-header text-center\"},(0,_i18n.tu)(\"3_day_ranking\")),data===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_MultiLineChart2.default,{style:{height:400},newCandidates:newCandidates,data:data})),_react2.default.createElement(\"div\",{className:\"card mt-3\"},_react2.default.createElement(\"div\",{className:\"card-header text-center\"},(0,_i18n.tu)(\"live_ranking\"),_react2.default.createElement(\"div\",{className:\"small text-center text-muted p-2\"},(0,_i18n.tu)(\"live_ranking_msg\"))),_react2.default.createElement(\"div\",{className:\"media m-3 mb-0\"},_react2.default.createElement(\"div\",{className:\"font-weight-bold text-center border-1 border-secondary\",style:{width:25}},\"\\xA0\"),_react2.default.createElement(\"div\",{className:\"mx-2\",style:{width:25}},\"\\xA0\"),_react2.default.createElement(\"div\",{className:\"media-body font-weight-bold\"},(0,_i18n.tu)(\"candidate\")),_react2.default.createElement(\"div\",{className:\"ml-3 text-center font-weight-bold\"},(0,_i18n.tu)(\"current_votes\"))),_react2.default.createElement(_reactFlipMove2.default,{duration:700,easing:\"ease\",enterAnimation:\"elevator\",staggerDurationBy:15,staggerDelayBy:20},newCandidates.map(function(candidate,index){return _react2.default.createElement(\"div\",{key:candidate.address,className:\"media mx-3 mb-3\"},_react2.default.createElement(\"div\",{className:\"font-weight-bold text-center border-1 border-secondary\",style:_extends({color:index<15?'#'+colors[index]:null},style.rank)},candidate.rank),_react2.default.createElement(\"div\",{className:\"mx-2\"},_react2.default.createElement(_Avatar2.default,{value:candidate.address,size:style.avatar.height})),_react2.default.createElement(\"div\",{className:\"media-body\"},_react2.default.createElement(\"span\",{className:\"mt-0\",style:style.row},_react2.default.createElement(_Links.AddressLink,{address:candidate.address},candidate.name||candidate.url))),_react2.default.createElement(\"div\",{className:\"ml-3 text-center\"},_react2.default.createElement(\"div\",{style:style.votes},_react2.default.createElement(\"code\",{style:{color:'#3E3F3A'}},_react2.default.createElement(_reactIntl.FormattedNumber,{value:candidate.votes})))));}))));}}]);return VoteLive;}(_react2.default.Component);var height=25;var style={rank:{fontSize:18,lineHeight:height+\"px\",borderRadius:'6px',width:'45px'},votes:{fontSize:18,lineHeight:height+\"px\"},row:{lineHeight:height+\"px\",fontSize:18},avatar:{height:height}};exports.default=(0,_timing.withTimers)(VoteLive);\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar pathTool = __webpack_require__(1198);\n\nvar colorTool = __webpack_require__(1045);\n\nvar matrix = __webpack_require__(1038);\n\nvar vector = __webpack_require__(1015);\n\nvar Path = __webpack_require__(1017);\n\nvar Transformable = __webpack_require__(1106);\n\nvar ZImage = __webpack_require__(1114);\n\nexports.Image = ZImage;\n\nvar Group = __webpack_require__(1053);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1205);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1206);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1207);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1208);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1209);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1212);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1213);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1214);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1215);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1216);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1217);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1218);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1219);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(1018);\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = __webpack_require__(1220);\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1103);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar colorTool = __webpack_require__(1045);\n\nvar env = __webpack_require__(1016);\n\nvar timsort = __webpack_require__(1071);\n\nvar Eventful = __webpack_require__(1044);\n\nvar GlobalModel = __webpack_require__(1117);\n\nvar ExtensionAPI = __webpack_require__(1125);\n\nvar CoordinateSystemManager = __webpack_require__(1076);\n\nvar OptionManager = __webpack_require__(1224);\n\nvar backwardCompat = __webpack_require__(1225);\n\nvar dataStack = __webpack_require__(1227);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar SeriesModel = __webpack_require__(1126);\n\nvar ComponentView = __webpack_require__(1229);\n\nvar ChartView = __webpack_require__(1085);\n\nvar graphic = __webpack_require__(1011);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _throttle = __webpack_require__(1078);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1230);\n\nvar aria = __webpack_require__(1231);\n\nvar loadingDefault = __webpack_require__(1233);\n\nvar Scheduler = __webpack_require__(1234);\n\nvar lightTheme = __webpack_require__(1235);\n\nvar darkTheme = __webpack_require__(1236);\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.4';\nvar dependencies = {\n  zrender: '4.0.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // stackSeriesData(ecModel);\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1237);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1055);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar PathProxy = __webpack_require__(1056);\n\nvar pathContain = __webpack_require__(1199);\n\nvar Pattern = __webpack_require__(1112);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1015);\n\nvar matrix = __webpack_require__(1038);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar textContain = __webpack_require__(1033);\n\nvar numberUtil = __webpack_require__(1014);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(1021);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = __webpack_require__(1029);\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = __webpack_require__(1195);\n\nvar areaStyleMixin = __webpack_require__(1196);\n\nvar textStyleMixin = __webpack_require__(1197);\n\nvar itemStyleMixin = __webpack_require__(1221);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar componentUtil = __webpack_require__(1057);\n\nvar _clazz = __webpack_require__(1029);\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\nvar layout = __webpack_require__(1024);\n\nvar boxLayoutMixin = __webpack_require__(1222);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar imageHelper = __webpack_require__(1072);\n\nvar _util = __webpack_require__(1008);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1015);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar textContain = __webpack_require__(1033);\n\nvar OrdinalScale = __webpack_require__(1240);\n\nvar IntervalScale = __webpack_require__(1080);\n\nvar Scale = __webpack_require__(1059);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar _barGrid = __webpack_require__(1241);\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\n__webpack_require__(1242);\n\n__webpack_require__(1243);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `calBarWidthAndOffset` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = [];\n    var isBaseAxisAndHasBarSeries;\n    ecModel.eachSeriesByType('bar', function (seriesModel) {\n      if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n        barSeriesModels.push(seriesModel);\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      }\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barSeriesModels);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barSeriesModels) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(barSeriesModels); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1008);\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = __webpack_require__(1010);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = __webpack_require__(1014);\n\nvar parseDate = _number.parseDate;\n\nvar Source = __webpack_require__(1047);\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1108);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1044);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(1016);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = __webpack_require__(1029);\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  }); // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n  if (stackedDimInfo && (byIndex || stackedByDimInfo)) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n */\n\n\nfunction isDimensionStacked(data, stackedDim, stackedByDim) {\n  return stackedDim && stackedDim === data.getCalculationInfo('stackedDimension') && (stackedByDim != null ? stackedByDim === data.getCalculationInfo('stackedByDimension') : data.getCalculationInfo('isStackedByIndex'));\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Element = __webpack_require__(1105);\n\nvar BoundingRect = __webpack_require__(1018);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Style = __webpack_require__(1110);\n\nvar Element = __webpack_require__(1105);\n\nvar RectText = __webpack_require__(1191);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1039);\n\nvar vec2 = __webpack_require__(1015);\n\nvar bbox = __webpack_require__(1118);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar _config = __webpack_require__(1054);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _clazz = __webpack_require__(1029);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports) {\n\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(1029);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar BoundingRect = __webpack_require__(1018);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1108);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = __webpack_require__(1124);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = __webpack_require__(1047);\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1077:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && (forceFirstProgress || start < end) && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    }\n  }\n\n  taskIns._progress = progress;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1014);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar Scale = __webpack_require__(1059);\n\nvar helper = __webpack_require__(1131);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\n\nvar Group = __webpack_require__(1053);\n\nvar componentUtil = __webpack_require__(1057);\n\nvar clazzUtil = __webpack_require__(1029);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _task = __webpack_require__(1077);\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = __webpack_require__(1127);\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var canProgressiveRender = seriesModel.pipelineContext.canProgressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = canProgressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar DataDiffer = __webpack_require__(1239);\n\nvar Source = __webpack_require__(1047);\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = __webpack_require__(1079);\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\nvar CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_calculationInfo', '_invertedIndicesMap', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n} // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range\n/*, stack */\n) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  } // stack = stack || false;\n\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices\n  /* && !stack */\n  ) {\n      // Extreme optimization for common case. About 2x faster in chrome.\n      var idx = 0;\n\n      if (dimSize === 1) {\n        var dimStorage = this._storage[dimensions[0]];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n\n            if (val >= min && val <= max) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      } else if (dimSize === 2) {\n        var dimStorage = this._storage[dim0];\n        var dimStorage2 = this._storage[dimensions[1]];\n        var min2 = range[dimensions[1]][0];\n        var max2 = range[dimensions[1]][1];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var chunkStorage2 = dimStorage2[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n            var val2 = chunkStorage2[i];\n\n            if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      }\n    }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      // stack = stack || !!this.getCalculationInfo(dim0);\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i); // var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        var val = this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k]; // var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          var val = this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage;\n  var rawExtent = zrUtil.extend({}, original._rawExtent); // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        rawExtent[dim] = getInitialExtent();\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar completeDimensions = __webpack_require__(1129);\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1104);\n\nvar env = __webpack_require__(1016);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Handler = __webpack_require__(1183);\n\nvar Storage = __webpack_require__(1185);\n\nvar Painter = __webpack_require__(1189);\n\nvar Animation = __webpack_require__(1192);\n\nvar HandlerProxy = __webpack_require__(1193);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.3';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1104);\n\nvar Eventful = __webpack_require__(1044);\n\nvar Transformable = __webpack_require__(1106);\n\nvar Animatable = __webpack_require__(1186);\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(1038);\n\nvar vector = __webpack_require__(1015);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1187);\n\nvar color = __webpack_require__(1045);\n\nvar _util = __webpack_require__(1008);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1054);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar fixShadow = __webpack_require__(1111);\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports) {\n\nvar SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1055);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar imageHelper = __webpack_require__(1072);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(1033);\n\nvar roundRectHelper = __webpack_require__(1116);\n\nvar imageHelper = __webpack_require__(1072);\n\nvar fixShadow = __webpack_require__(1111);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = __webpack_require__(1010);\n\nvar Model = __webpack_require__(1027);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar globalDefault = __webpack_require__(1223);\n\nvar colorPaletteMixin = __webpack_require__(1123);\n\nvar _sourceHelper = __webpack_require__(1075);\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1015);\n\nvar curve = __webpack_require__(1039);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(1016);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1210);\n\nvar smoothBezier = __webpack_require__(1211);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar _format = __webpack_require__(1021);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = __webpack_require__(1010);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar colorPaletteMixin = __webpack_require__(1123);\n\nvar dataFormatMixin = __webpack_require__(1228);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = __webpack_require__(1077);\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = __webpack_require__(1075);\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.canProgressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.canProgressiveRender = pipelineContext.canProgressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar List = __webpack_require__(1086);\n\nvar createDimensions = __webpack_require__(1087);\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = __webpack_require__(1079);\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = __webpack_require__(1010);\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = __webpack_require__(1076);\n\nvar _referHelper = __webpack_require__(1124);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = __webpack_require__(1047);\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = __webpack_require__(1010);\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = __webpack_require__(1075);\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = __webpack_require__(1047);\n\nvar _dimensionHelper = __webpack_require__(1079);\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1014);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar textContain = __webpack_require__(1033);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar matrix = __webpack_require__(1038);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar AxisBuilder = __webpack_require__(1137);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(1021);\n\nvar graphic = __webpack_require__(1011);\n\nvar Model = __webpack_require__(1027);\n\nvar _number = __webpack_require__(1014);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1061);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(1038);\n\nvar _vector = __webpack_require__(1015);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1012);\n\nvar axisPointerModelHelper = __webpack_require__(1060);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _symbol = __webpack_require__(1061);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1011);\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(1260);\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = __webpack_require__(1008);\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar axisModelCreator = __webpack_require__(1272);\n\nvar axisModelCommonMixin = __webpack_require__(1132);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _selected;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}module.exports={pieChart:{title:{text:'',x:'center'},tooltip:{trigger:'item',formatter:\"{b}<br> {c} ({d}%)\"},series:[{name:'',type:'pie',radius:'55%',center:['50%','55%'],data:[],itemStyle:{emphasis:{shadowBlur:10,shadowOffsetX:0,shadowColor:'rgba(0, 0, 0, 0.5)'}}}]},lineChart:{title:{text:'',x:'center'},grid:{left:'3%',right:'3%',bottom:'5%',containLabel:true},tooltip:{trigger:'axis'},xAxis:{type:'category',data:[]},yAxis:{type:'value'},series:[{data:[],type:'line',smooth:true}]},ringPieChart:{title:{text:'',x:'center'},legend:{type:'scroll',orient:'vertical',x:'right',selected:(_selected={'Bancor Network':false,'Gatecoin':false,'BitFlip':false,'Braziliex':false,'Cobinhood':false,'CoinExchange':false,'CoinFalcon':false,'Cryptomate':false},_defineProperty(_selected,'Gatecoin',false),_defineProperty(_selected,'IDEX',false),_defineProperty(_selected,'LiteBit.eu',false),_defineProperty(_selected,'Stocks.Exchange',false),_defineProperty(_selected,'Tidex',false),_selected)},tooltip:{trigger:'item',formatter:\"{b}: {c} ({d}%)\"},series:[{name:'',type:'pie',selectedMode:'single',radius:[0,'30%'],center:['50%','50%'],label:{normal:{position:'inner'}},labelLine:{normal:{show:false}},data:[]},{name:'',type:'pie',radius:['40%','55%'],center:['50%','50%'],data:[]}]},multiLineChart:{title:{text:'',x:'center'},legend:{type:'scroll',data:[]},grid:{left:'3%',right:'3%',bottom:'5%',containLabel:true},tooltip:{trigger:'axis'// position:function(p){   //其中p为当前鼠标的位置\n//   return [p[0] + 10, p[1] - 10];\n//  }\n},xAxis:{type:'category',boundaryGap:false,data:[]},yAxis:{type:'value'},series:[]}};\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar graphic = __webpack_require__(1011);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n__webpack_require__(1247);\n\n__webpack_require__(1253);\n\n__webpack_require__(1254);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar vec2 = __webpack_require__(1015);\n\nvar Draggable = __webpack_require__(1184);\n\nvar Eventful = __webpack_require__(1044);\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar Group = __webpack_require__(1053);\n\nvar timsort = __webpack_require__(1071);\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1186:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1107);\n\nvar log = __webpack_require__(1109);\n\nvar _util = __webpack_require__(1008);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1187:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1188);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1054);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(1008);\n\nvar log = __webpack_require__(1109);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar timsort = __webpack_require__(1071);\n\nvar Layer = __webpack_require__(1190);\n\nvar requestAnimationFrame = __webpack_require__(1113);\n\nvar Image = __webpack_require__(1114);\n\nvar env = __webpack_require__(1016);\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar _config = __webpack_require__(1054);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1110);\n\nvar Pattern = __webpack_require__(1112);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1115);\n\nvar BoundingRect = __webpack_require__(1018);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar _event = __webpack_require__(1046);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1113);\n\nvar Animator = __webpack_require__(1107);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1193:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(1046);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Eventful = __webpack_require__(1044);\n\nvar env = __webpack_require__(1016);\n\nvar GestureMgr = __webpack_require__(1194);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1194:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(1046);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1195:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1073);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1196:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1073);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1033);\n\nvar graphicUtil = __webpack_require__(1011);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar PathProxy = __webpack_require__(1056);\n\nvar transformPath = __webpack_require__(1204);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1199:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1056);\n\nvar line = __webpack_require__(1200);\n\nvar cubic = __webpack_require__(1201);\n\nvar quadratic = __webpack_require__(1202);\n\nvar arc = __webpack_require__(1203);\n\nvar _util = __webpack_require__(1119);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(1039);\n\nvar windingLine = __webpack_require__(1120);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1200:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1201:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1039);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1202:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(1039);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1119);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1204:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1056);\n\nvar _vector = __webpack_require__(1015);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1055);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar textContain = __webpack_require__(1033);\n\nvar textHelper = __webpack_require__(1115);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1206:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1207:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar fixClipWithShadow = __webpack_require__(1121);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1208:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1209:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar polyHelper = __webpack_require__(1122);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1210:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1015);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1211:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1015);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1212:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar polyHelper = __webpack_require__(1122);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1213:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar roundRectHelper = __webpack_require__(1116);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1214:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1215:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar vec2 = __webpack_require__(1015);\n\nvar _curve = __webpack_require__(1039);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1216:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1217:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1218:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Gradient = __webpack_require__(1074);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1219:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Gradient = __webpack_require__(1074);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1220:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar inherits = _util.inherits;\n\nvar Displayble = __webpack_require__(1055);\n\nvar BoundingRect = __webpack_require__(1018);\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1221:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1073);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1222:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1223:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1224:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar ComponentModel = __webpack_require__(1031);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1225:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1226);\n\nvar _model = __webpack_require__(1010);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1226:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1227:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1228:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = __webpack_require__(1021);\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1229:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1053);\n\nvar componentUtil = __webpack_require__(1057);\n\nvar clazzUtil = __webpack_require__(1029);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1230:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1074);\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1231:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar lang = __webpack_require__(1232);\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1232:\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1233:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1234:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = __webpack_require__(1077);\n\nvar createTask = _task.createTask;\n\nvar _component = __webpack_require__(1057);\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = __webpack_require__(1117);\n\nvar ExtensionAPI = __webpack_require__(1125);\n\nvar _model = __webpack_require__(1010);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  this._visualHandlers = visualHandlers.slice();\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.canProgressiveRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `canProgressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var canProgressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    canProgressiveRender: canProgressiveRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each([this._dataProcessorHandlers, this._visualHandlers], function (stageHandlers) {\n    each(stageHandlers, function (handler) {\n      var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n      handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n      handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n    }, this);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1235:\n/***/ (function(module, exports) {\n\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1236:\n/***/ (function(module, exports) {\n\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1237:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1103);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(1038);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(1015);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar colorTool = __webpack_require__(1045);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(1011);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(1014);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(1021);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1078);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1238);\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = __webpack_require__(1244);\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = __webpack_require__(1086);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(1027);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1133);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(1016);\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1238:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar createListFromArray = __webpack_require__(1128);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar axisModelCommonMixin = __webpack_require__(1132);\n\nvar Model = __webpack_require__(1027);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _completeDimensions = __webpack_require__(1129);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = __webpack_require__(1087);\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = __webpack_require__(1061);\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1239:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1240:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Scale = __webpack_require__(1059);\n\nvar OrdinalMeta = __webpack_require__(1130);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1241:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n      seriesModels.push(seriesModel);\n    }\n  });\n  var barWidthAndOffset = calBarWidthAndOffset(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = baseAxis.onZero || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1242:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar scaleHelper = __webpack_require__(1131);\n\nvar IntervalScale = __webpack_require__(1080);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1243:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Scale = __webpack_require__(1059);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar IntervalScale = __webpack_require__(1080);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1244:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Region = __webpack_require__(1245);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1245:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar bbox = __webpack_require__(1118);\n\nvar vec2 = __webpack_require__(1015);\n\nvar polygonContain = __webpack_require__(1246);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1246:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1120);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1247:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar axisPointerModelHelper = __webpack_require__(1060);\n\nvar axisTrigger = __webpack_require__(1248);\n\n__webpack_require__(1249);\n\n__webpack_require__(1250);\n\n__webpack_require__(1251);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1248:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(1060);\n\nvar findPointFromSeries = __webpack_require__(1134);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1249:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1250:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar globalListener = __webpack_require__(1135);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1251:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1011);\n\nvar BaseAxisPointer = __webpack_require__(1252);\n\nvar viewHelper = __webpack_require__(1136);\n\nvar cartesianAxisHelper = __webpack_require__(1138);\n\nvar AxisView = __webpack_require__(1139);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1252:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar clazzUtil = __webpack_require__(1029);\n\nvar graphic = __webpack_require__(1011);\n\nvar axisPointerModelHelper = __webpack_require__(1060);\n\nvar eventTool = __webpack_require__(1046);\n\nvar throttleUtil = __webpack_require__(1078);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1253:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1254:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar TooltipContent = __webpack_require__(1255);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar graphic = __webpack_require__(1011);\n\nvar findPointFromSeries = __webpack_require__(1134);\n\nvar layoutUtil = __webpack_require__(1024);\n\nvar Model = __webpack_require__(1027);\n\nvar globalListener = __webpack_require__(1135);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar axisPointerViewHelper = __webpack_require__(1136);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1255:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar zrColor = __webpack_require__(1045);\n\nvar eventUtil = __webpack_require__(1046);\n\nvar env = __webpack_require__(1016);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1256:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n__webpack_require__(1257);\n\n__webpack_require__(1258);\n\nvar visualSymbol = __webpack_require__(1263);\n\nvar layoutPoints = __webpack_require__(1264);\n\nvar dataSample = __webpack_require__(1265);\n\n__webpack_require__(1266);\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n/***/ }),\n\n/***/ 1257:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(1128);\n\nvar SeriesModel = __webpack_require__(1126);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1258:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar SymbolDraw = __webpack_require__(1259);\n\nvar SymbolClz = __webpack_require__(1140);\n\nvar lineAnimationDiff = __webpack_require__(1261);\n\nvar graphic = __webpack_require__(1011);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _poly = __webpack_require__(1262);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(1085);\n\nvar _helper = __webpack_require__(1141);\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1259:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1011);\n\nvar SymbolClz = __webpack_require__(1140);\n\nvar _util = __webpack_require__(1008);\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1260:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n\n/***/ 1261:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _helper = __webpack_require__(1141);\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1262:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar vec2 = __webpack_require__(1015);\n\nvar fixClipWithShadow = __webpack_require__(1121);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ 1263:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1264:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar map = _util.map;\n\nvar createRenderPlanner = __webpack_require__(1127);\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1265:\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1266:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\n__webpack_require__(1267);\n\n__webpack_require__(1274);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 1267:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(1040);\n\nvar Cartesian2D = __webpack_require__(1268);\n\nvar Axis2D = __webpack_require__(1270);\n\nvar CoordinateSystem = __webpack_require__(1076);\n\n__webpack_require__(1271);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1268:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Cartesian = __webpack_require__(1269);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1269:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1270:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Axis = __webpack_require__(1133);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1271:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1142);\n\nvar ComponentModel = __webpack_require__(1031);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1272:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar axisDefault = __webpack_require__(1273);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = __webpack_require__(1130);\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1273:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1274:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1142);\n\n__webpack_require__(1275);\n\n/***/ }),\n\n/***/ 1275:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar AxisBuilder = __webpack_require__(1137);\n\nvar AxisView = __webpack_require__(1139);\n\nvar cartesianAxisHelper = __webpack_require__(1138);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 1276:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar _model = __webpack_require__(1010);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1277:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _symbol = __webpack_require__(1061);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1011);\n\nvar _listComponent = __webpack_require__(1352);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(1024);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1350:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n__webpack_require__(1276);\n\n__webpack_require__(1351);\n\n__webpack_require__(1277);\n\nvar legendFilter = __webpack_require__(1353);\n\nvar Component = __webpack_require__(1031);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1351:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1352:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(1021);\n\nvar graphic = __webpack_require__(1011);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1353:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1354:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1276);\n\nvar _layout = __webpack_require__(1024);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1355:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar layoutUtil = __webpack_require__(1024);\n\nvar LegendView = __webpack_require__(1277);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1356:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1430:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license\n *\n *     Colour Palette Generator script.\n *     Copyright (c) 2014 Google Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n *     not use this file except in compliance with the License.  You may\n *     obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *     implied.  See the License for the specific language governing\n *     permissions and limitations under the License.\n *\n * Furthermore, ColorBrewer colour schemes are covered by the following:\n *\n *     Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and\n *                        The Pennsylvania State University.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n *     not use this file except in compliance with the License. You may obtain\n *     a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *     implied. See the License for the specific language governing\n *     permissions and limitations under the License.\n *\n *     Redistribution and use in source and binary forms, with or without\n *     modification, are permitted provided that the following conditions are\n *     met:\n *\n *     1. Redistributions as source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *     2. The end-user documentation included with the redistribution, if any,\n *     must include the following acknowledgment: \"This product includes color\n *     specifications and designs developed by Cynthia Brewer\n *     (http://colorbrewer.org/).\" Alternately, this acknowledgment may appear\n *     in the software itself, if and wherever such third-party\n *     acknowledgments normally appear.\n *\n *     4. The name \"ColorBrewer\" must not be used to endorse or promote products\n *     derived from this software without prior written permission. For written\n *     permission, please contact Cynthia Brewer at cbrewer@psu.edu.\n *\n *     5. Products derived from this software may not be called \"ColorBrewer\",\n *     nor may \"ColorBrewer\" appear in their name, without prior written\n *     permission of Cynthia Brewer.\n *\n * Furthermore, Solarized colour schemes are covered by the following:\n *\n *     Copyright (c) 2011 Ethan Schoonover\n *\n *     Permission is hereby granted, free of charge, to any person obtaining\n *     a copy of this software and associated documentation files (the\n *     \"Software\"), to deal in the Software without restriction, including\n *     without limitation the rights to use, copy, modify, merge, publish,\n *     distribute, sublicense, and/or sell copies of the Software, and to\n *     permit persons to whom the Software is furnished to do so, subject to\n *     the following conditions:\n *\n *     The above copyright notice and this permission notice shall be included\n *     in all copies or substantial portions of the Software.\n *\n *     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n *     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n *     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n *     LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n *     OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n *     WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\n\nvar palette = (function() {\n\n  var proto = Array.prototype;\n  var slice = function(arr, opt_begin, opt_end) {\n    return proto.slice.apply(arr, proto.slice.call(arguments, 1));\n  };\n\n  var extend = function(arr, arr2) {\n    return proto.push.apply(arr, arr2);\n  };\n\n  var function_type = typeof function() {};\n\n  var INF = 1000000000;  // As far as we're concerned, that's infinity. ;)\n\n\n  /**\n   * Generate a colour palette from given scheme.\n   *\n   * If scheme argument is not a function it is passed to palettes.listSchemes\n   * function (along with the number argument).  This may result in an array\n   * of more than one available scheme.  If that is the case, scheme at\n   * opt_index position is taken.\n   *\n   * This allows using different palettes for different data without having to\n   * name the schemes specifically, for example:\n   *\n   *     palette_for_foo = palette('sequential', 10, 0);\n   *     palette_for_bar = palette('sequential', 10, 1);\n   *     palette_for_baz = palette('sequential', 10, 2);\n   *\n   * @param {!palette.SchemeType|string|palette.Palette} scheme Scheme to\n   *     generate palette for.  Either a function constructed with\n   *     palette.Scheme object, or anything that palette.listSchemes accepts\n   *     as name argument.\n   * @param {number} number Number of colours to return.  If negative, absolute\n   *     value is taken and colours will be returned in reverse order.\n   * @param {number=} opt_index If scheme is a name of a group or an array and\n   *     results in more than one scheme, index of the scheme to use.  The\n   *     index wraps around.\n   * @param {...*} varargs Additional arguments to pass to palette or colour\n   *     generator (if the chosen scheme uses those).\n   * @return {Array<string>} Array of abs(number) 'RRGGBB' strings or null if\n   *     no matching scheme was found.\n   */\n  var palette = function(scheme, number, opt_index, varargs) {\n    number |= 0;\n    if (number == 0) {\n      return [];\n    }\n\n    if (typeof scheme !== function_type) {\n      var arr = palette.listSchemes(\n          /** @type {string|palette.Palette} */ (scheme), number);\n      if (!arr.length) {\n        return null;\n      }\n      scheme = arr[(opt_index || 0) % arr.length];\n    }\n\n    var args = slice(arguments, 2);\n    args[0] = number;\n    return scheme.apply(scheme, args);\n  };\n\n\n  /**\n   * Returns a callable colour scheme object.\n   *\n   * Just after being created, the scheme has no colour palettes and no way of\n   * generating any, thus generate method will return null.  To turn scheme\n   * into a useful object, addPalette, addPalettes or setColorFunction methods\n   * need to be used.\n   *\n   * To generate a colour palette with given number colours using function\n   * returned by this method, just call it with desired number of colours.\n   *\n   * Since this function *returns* a callable object, it must *not* be used\n   * with the new operator.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>=} opt_groups A group name or list of\n   *     groups the scheme should be categorised under.  Three typical groups\n   *     to use are 'qualitative', 'sequential' and 'diverging', but any\n   *     groups may be created.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme = function(name, opt_groups) {\n    /**\n     * A map from a number to a colour palettes with given number of colours.\n     * @type {!Object<number, palette.Palette>}\n     */\n    var palettes = {};\n\n    /**\n     * The biggest palette in palettes map.\n     * @type {number}\n     */\n    var palettes_max = 0;\n\n    /**\n     * The smallest palette in palettes map.\n     * @type {number}\n     */\n    var palettes_min = INF;\n\n    var makeGenerator = function() {\n      if (arguments.length <= 1) {\n        return self.color_func.bind(self);\n      } else {\n        var args = slice(arguments);\n        return function(x) {\n          args[0] = x;\n          return self.color_func.apply(self, args);\n        };\n      }\n    };\n\n    /**\n     * Generate a colour palette from the scheme.\n     *\n     * If there was a palette added with addPalette (or addPalettes) with\n     * enough colours, that palette will be used.  Otherwise, if colour\n     * function has been set using setColorFunction method, that function will\n     * be used to generate the palette.  Otherwise null is returned.\n     *\n     * @param {number} number Number of colours to return.  If negative,\n     *     absolute value is taken and colours will be returned in reverse\n     *     order.\n     * @param {...*} varargs Additional arguments to pass to palette or colour\n     *     generator (if the chosen scheme uses those).\n     */\n    var self = function(number, varargs) {\n      number |= 0;\n      if (!number) {\n        return [];\n      }\n\n      var _number = number;\n      number = Math.abs(number);\n\n      if (number <= palettes_max) {\n        for (var i = Math.max(number, palettes_min); !(i in palettes); ++i) {\n          /* nop */\n        }\n        var colors = palettes[i];\n        if (i > number) {\n          var take_head =\n              'shrinking_takes_head' in colors ?\n              colors.shrinking_takes_head : self.shrinking_takes_head;\n          if (take_head) {\n            colors = colors.slice(0, number);\n            i = number;\n          } else {\n            return palette.generate(\n                function(x) { return colors[Math.round(x)]; },\n                _number, 0, colors.length - 1);\n          }\n        }\n        colors = colors.slice();\n        if (_number < 0) {\n          colors.reverse();\n        }\n        return colors;\n\n      } else if (self.color_func) {\n        return palette.generate(makeGenerator.apply(self, arguments),\n                                _number, 0, 1, self.color_func_cyclic);\n\n      } else {\n        return null;\n      }\n    };\n\n    /**\n     * The name of the palette.\n     * @type {string}\n     */\n    self.scheme_name = name;\n\n    /**\n     * A list of groups the palette belongs to.\n     * @type {!Array<string>}\n     */\n    self.groups = opt_groups ?\n      typeof opt_groups === 'string' ? [opt_groups] : opt_groups : [];\n\n    /**\n     * The biggest palette this scheme can generate.\n     * @type {number}\n     */\n    self.max = 0;\n\n    /**\n     * The biggest palette this scheme can generate that is colour-blind\n     * friendly.\n     * @type {number}\n     */\n    self.cbf_max = INF;\n\n\n    /**\n     * Adds a colour palette to the colour scheme.\n     *\n     * @param {palette.Palette} palette An array of 'RRGGBB' strings\n     *     representing the palette to add.\n     * @param {boolean=} opt_is_cbf Whether the palette is colourblind friendly.\n     */\n    self.addPalette = function(palette, opt_is_cbf) {\n      var len = palette.length;\n      if (len) {\n        palettes[len] = palette;\n        palettes_min = Math.min(palettes_min, len);\n        palettes_max = Math.max(palettes_max, len);\n        self.max = Math.max(self.max, len);\n        if (!opt_is_cbf && len != 1) {\n          self.cbf_max = Math.min(self.cbf_max, len - 1);\n        }\n      }\n    };\n\n    /**\n     * Adds number of colour palettes to the colour scheme.\n     *\n     * @param {palette.PalettesList} palettes A map or an array of colour\n     *     palettes to add.  If map, i.e.  object, is used, properties should\n     *     use integer property names.\n     * @param {number=} opt_max Size of the biggest palette in palettes set.\n     *     If not set, palettes must have a length property which will be used.\n     * @param {number=} opt_cbf_max Size of the biggest palette which is still\n     *     colourblind friendly.  1 by default.\n     */\n    self.addPalettes = function(palettes, opt_max, opt_cbf_max) {\n      opt_max = opt_max || palettes.length;\n      for (var i = 0; i < opt_max; ++i) {\n        if (i in palettes) {\n          self.addPalette(palettes[i], true);\n        }\n      }\n      self.cbf_max = Math.min(self.cbf_max, opt_cbf_max || 1);\n    };\n\n    /**\n     * Enable shrinking palettes taking head of the list of colours.\n     *\n     * When user requests n-colour palette but the smallest palette added with\n     * addPalette (or addPalettes) is m-colour one (where n < m), n colours\n     * across the palette will be returned.  For example:\n     *     var ex = palette.Scheme('ex');\n     *     ex.addPalette(['000000', 'bcbcbc', 'ffffff']);\n     *     var pal = ex(2);\n     *     // pal == ['000000', 'ffffff']\n     *\n     * This works for palettes where the distance between colours is\n     * correlated to distance in the palette array, which is true in gradients\n     * such as the one above.\n     *\n     * To turn this feature off shrinkByTakingHead can be set to true either\n     * for all palettes in the scheme (if opt_idx is not given) or for palette\n     * with given number of colours only.  In general, setting the option for\n     * given palette overwrites whatever has been set for the scheme.  The\n     * default, as described above, is false.\n     *\n     * Alternatively, the feature can be enabled by setting shrinking_takes_head\n     * property for the palette Array or the scheme object.\n     *\n     * For example, all of the below give equivalent results:\n     *     var pal = ['ff0000', '00ff00', '0000ff'];\n     *\n     *     var ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     ex.shrinkByTakingHead(true);      // ex(2) == ['ff0000', '00ff00']\n     *\n     *     ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     ex.shrinkByTakingHead(true, 3);   // ex(2) == ['ff0000', '00ff00']\n     *\n     *     ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     pal.shrinking_takes_head = true;  // ex(2) == ['ff0000', '00ff00']\n     *\n     * @param {boolean} enabled Whether to enable or disable the “shrinking\n     *     takes head” feature.  It is disabled by default.\n     * @param {number=} opt_idx If given, the “shrinking takes head” option\n     *     for palette with given number of colours is set.  If such palette\n     *     does not exist, nothing happens.\n     */\n    self.shrinkByTakingHead = function(enabled, opt_idx) {\n      if (opt_idx !== void(0)) {\n        if (opt_idx in palettes) {\n          palettes[opt_idx].shrinking_takes_head = !!enabled;\n        }\n      } else {\n        self.shrinking_takes_head = !!enabled;\n      }\n    };\n\n    /**\n     * Sets a colour generation function of the colour scheme.\n     *\n     * The function must accept a singe number argument whose value can be from\n     * 0.0 to 1.0, and return a colour as an 'RRGGBB' string.  This function\n     * will be used when generating palettes, i.e. if 11-colour palette is\n     * requested, this function will be called with arguments 0.0, 0.1, …, 1.0.\n     *\n     * If the palette generated by the function is colourblind friendly,\n     * opt_is_cbf should be set to true.\n     *\n     * In some cases, it is not desirable to reach 1.0 when generating\n     * a palette.  This happens for hue-rainbows where the 0–1 range corresponds\n     * to a 0°–360° range in hues, and since hue at 0° is the same as at 360°,\n     * it's desired to stop short the end of the range when generating\n     * a palette.  To accomplish this, opt_cyclic should be set to true.\n     *\n     * @param {palette.ColorFunction} func A colour generator function.\n     * @param {boolean=} opt_is_cbf Whether palette generate with the function\n     *     is colour-blind friendly.\n     * @param {boolean=} opt_cyclic Whether colour at 0.0 is the same as the\n     *     one at 1.0.\n     */\n    self.setColorFunction = function(func, opt_is_cbf, opt_cyclic) {\n      self.color_func = func;\n      self.color_func_cyclic = !!opt_cyclic;\n      self.max = INF;\n      if (!opt_is_cbf && self.cbf_max === INF) {\n        self.cbf_max = 1;\n      }\n    };\n\n    self.color = function(x, varargs) {\n      if (self.color_func) {\n        return self.color_func.apply(this, arguments);\n      } else {\n        return null;\n      }\n    };\n\n    return self;\n  };\n\n\n  /**\n   * Creates a new palette.Scheme and initialises it by calling addPalettes\n   * method with the rest of the arguments.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>} groups A group name or list of group\n   *     names the scheme belongs to.\n   * @param {!Object<number, palette.Palette>|!Array<palette.Palette>}\n   *     palettes A map or an array of colour palettes to add.  If map, i.e.\n   *     object, is used, properties should use integer property names.\n   * @param {number=} opt_max Size of the biggest palette in palettes set.\n   *     If not set, palettes must have a length property which will be used.\n   * @param {number=} opt_cbf_max Size of the biggest palette which is still\n   *     colourblind friendly.  1 by default.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme.fromPalettes = function(name, groups,\n                                         palettes, opt_max, opt_cbf_max) {\n    var scheme = palette.Scheme(name, groups);\n    scheme.addPalettes.apply(scheme, slice(arguments, 2));\n    return scheme;\n  };\n\n\n  /**\n   * Creates a new palette.Scheme and initialises it by calling\n   * setColorFunction method with the rest of the arguments.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>} groups A group name or list of group\n   *     names the scheme belongs to.\n   * @param {palette.ColorFunction} func A colour generator function.\n   * @param {boolean=} opt_is_cbf Whether palette generate with the function\n   *     is colour-blind friendly.\n   * @param {boolean=} opt_cyclic Whether colour at 0.0 is the same as the\n   *     one at 1.0.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme.withColorFunction = function(name, groups,\n                                              func, opt_is_cbf, opt_cyclic) {\n    var scheme = palette.Scheme(name, groups);\n    scheme.setColorFunction.apply(scheme, slice(arguments, 2));\n    return scheme;\n  };\n\n\n  /**\n   * A map of registered schemes.  Maps a scheme or group name to a list of\n   * scheme objects.  Property name is either 'n-<name>' for single scheme\n   * names or 'g-<name>' for scheme group names.\n   *\n   * @type {!Object<string, !Array<!Object>>}\n   */\n  var registered_schemes = {};\n\n\n  /**\n   * Registers a new colour scheme.\n   *\n   * @param {!palette.SchemeType} scheme The scheme to add.\n   */\n  palette.register = function(scheme) {\n    registered_schemes['n-' + scheme.scheme_name] = [scheme];\n    scheme.groups.forEach(function(g) {\n      (registered_schemes['g-' + g] =\n       registered_schemes['g-' + g] || []).push(scheme);\n    });\n    (registered_schemes['g-all'] =\n       registered_schemes['g-all'] || []).push(scheme);\n  };\n\n\n  /**\n   * List all schemes that match given name and number of colours.\n   *\n   * name argument can be either a string or an array of strings.  In the\n   * former case, the function acts as if the argument was an array with name\n   * as a single argument (i.e. “palette.listSchemes('foo')” is exactly the same\n   * as “palette.listSchemes(['foo'])”).\n   *\n   * Each name can be either name of a palette (e.g. 'tol-sq' for Paul Tol's\n   * sequential palette), or a name of a group (e.g. 'sequential' for all\n   * sequential palettes).  Name can therefore map to a single scheme or\n   * several schemes.\n   *\n   * Furthermore, name can be suffixed with '-cbf' to indicate that only\n   * schemes that are colourblind friendly should be returned.  For example,\n   * 'rainbow' returns a HSV rainbow scheme, but because it is not colourblind\n   * friendly, 'rainbow-cbf' returns no schemes.\n   *\n   * Some schemes may produce colourblind friendly palettes for some number of\n   * colours.  For example ColorBrewer's Dark2 scheme is colourblind friendly\n   * if no more than 3 colours are generated.  If opt_number is not specified,\n   * 'qualitative-cbf' will include 'cb-Dark2' but if opt_number is given as,\n   * say, 5 it won't.\n   *\n   * Name can also be 'all' which will return all registered schemes.\n   * Naturally, 'all-cbf' will return all colourblind friendly schemes.\n   *\n   * Schemes are added to the library using palette.register.  Schemes are\n   * created using palette.Scheme function.  By default, the following schemes\n   * are available:\n   *\n   *     Name            Description\n   *     --------------  -----------------------------------------------------\n   *     tol             Paul Tol's qualitative scheme, cbf, max 12 colours.\n   *     tol-dv          Paul Tol's diverging scheme, cbf.\n   *     tol-sq          Paul Tol's sequential scheme, cbf.\n   *     tol-rainbow     Paul Tol's qualitative scheme, cbf.\n   *\n   *     rainbow         A rainbow palette.\n   *\n   *     cb-YlGn         ColorBrewer sequential schemes.\n   *     cb-YlGnBu\n   *     cb-GnBu\n   *     cb-BuGn\n   *     cb-PuBuGn\n   *     cb-PuBu\n   *     cb-BuPu\n   *     cb-RdPu\n   *     cb-PuRd\n   *     cb-OrRd\n   *     cb-YlOrRd\n   *     cb-YlOrBr\n   *     cb-Purples\n   *     cb-Blues\n   *     cb-Greens\n   *     cb-Oranges\n   *     cb-Reds\n   *     cb-Greys\n   *\n   *     cb-PuOr         ColorBrewer diverging schemes.\n   *     cb-BrBG\n   *     cb-PRGn\n   *     cb-PiYG\n   *     cb-RdBu\n   *     cb-RdGy\n   *     cb-RdYlBu\n   *     cb-Spectral\n   *     cb-RdYlGn\n   *\n   *     cb-Accent       ColorBrewer qualitative schemes.\n   *     cb-Dark2\n   *     cb-Paired\n   *     cb-Pastel1\n   *     cb-Pastel2\n   *     cb-Set1\n   *     cb-Set2\n   *     cb-Set3\n   *\n   *     sol-base        Solarized base colours.\n   *     sol-accent      Solarized accent colours.\n   *\n   * The following groups are also available by default:\n   *\n   *     Name            Description\n   *     --------------  -----------------------------------------------------\n   *     all             All registered schemes.\n   *     sequential      All sequential schemes.\n   *     diverging       All diverging schemes.\n   *     qualitative     All qualitative schemes.\n   *     cb-sequential   All ColorBrewer sequential schemes.\n   *     cb-diverging    All ColorBrewer diverging schemes.\n   *     cb-qualitative  All ColorBrewer qualitative schemes.\n   *\n   * You can read more about Paul Tol's palettes at http://www.sron.nl/~pault/.\n   * You can read more about ColorBrewer at http://colorbrewer2.org.\n   *\n   * @param {string|!Array<string>} name A name of a colour scheme, of\n   *     a group of colour schemes, or an array of any of those.\n   * @param {number=} opt_number When requesting only colourblind friendly\n   *     schemes, number of colours the scheme must provide generating such\n   *     that the palette is still colourblind friendly.  2 by default.\n   * @return {!Array<!palette.SchemeType>} An array of colour scheme objects\n   *     matching the criteria.  Sorted by scheme name.\n   */\n  palette.listSchemes = function(name, opt_number) {\n    if (!opt_number) {\n      opt_number = 2;\n    } else if (opt_number < 0) {\n      opt_number = -opt_number;\n    }\n\n    var ret = [];\n    (typeof name === 'string' ? [name] : name).forEach(function(n) {\n      var cbf = n.substring(n.length - 4) === '-cbf';\n      if (cbf) {\n        n = n.substring(0, n.length - 4);\n      }\n      var schemes =\n          registered_schemes['g-' + n] ||\n          registered_schemes['n-' + n] ||\n          [];\n      for (var i = 0, scheme; (scheme = schemes[i]); ++i) {\n        if ((cbf ? scheme.cbf : scheme.max) >= opt_number) {\n          ret.push(scheme);\n        }\n      }\n    });\n\n    ret.sort(function(a, b) {\n      return a.scheme_name >= b.scheme_name ?\n        a.scheme_name > b.scheme_name ? 1 : 0 : -1;\n    });\n    return ret;\n  };\n\n\n  /**\n   * Generates a palette using given colour generating function.\n   *\n   * The color_func callback must accept a singe number argument whose value\n   * can vary from 0.0 to 1.0 (or in general from opt_start to opt_end), and\n   * return a colour as an 'RRGGBB' string.  This function will be used when\n   * generating palettes, i.e. if 11-colour palette is requested, this\n   * function will be called with arguments 0.0, 0.1, …, 1.0.\n   *\n   * In some cases, it is not desirable to reach 1.0 when generating\n   * a palette.  This happens for hue-rainbows where the 0–1 range corresponds\n   * to a 0°–360° range in hues, and since hue at 0° is the same as at 360°,\n   * it's desired to stop short the end of the range when generating\n   * a palette.  To accomplish this, opt_cyclic should be set to true.\n   *\n   * opt_start and opt_end may be used to change the range the colour\n   * generation function is called with.  opt_end may be less than opt_start\n   * which will case to traverse the range in reverse.  Another way to reverse\n   * the palette is requesting negative number of colours.  The two methods do\n   * not always lead to the same results (especially if opt_cyclic is set).\n   *\n   * @param {palette.ColorFunction} color_func A colours generating callback\n   *     function.\n   * @param {number} number Number of colours to generate in the palette.  If\n   *     number is negative, colours in the palette will be reversed.  If only\n   *     one colour is requested, colour at opt_start will be returned.\n   * @param {number=} opt_start Optional starting point for the palette\n   *     generation function.  Zero by default.\n   * @param {number=} opt_end Optional ending point for the palette generation\n   *     function.  One by default.\n   * @param {boolean=} opt_cyclic If true, function will assume colour at\n   *     point opt_start is the same as one at opt_end.\n   * @return {palette.Palette} An array of 'RRGGBB' colours.\n   */\n  palette.generate = function(color_func, number, opt_start, opt_end,\n                              opt_cyclic) {\n    if (Math.abs(number) < 1) {\n      return [];\n    }\n\n    opt_start = opt_start === void(0) ? 0 : opt_start;\n    opt_end = opt_end === void(0) ? 1 : opt_end;\n\n    if (Math.abs(number) < 2) {\n      return [color_func(opt_start)];\n    }\n\n    var i = Math.abs(number);\n    var x = opt_start;\n    var ret = [];\n    var step = (opt_end - opt_start) / (opt_cyclic ? i : (i - 1));\n\n    for (; --i >= 0; x += step) {\n      ret.push(color_func(x));\n    }\n    if (number < 0) {\n      ret.reverse();\n    }\n    return ret;\n  };\n\n\n  /**\n   * Clamps value to [0, 1] range.\n   * @param {number} v Number to limit value of.\n   * @return {number} If v is inside of [0, 1] range returns v, otherwise\n   *     returns 0 or 1 depending which side of the range v is closer to.\n   */\n  var clamp = function(v) {\n    return v > 0 ? (v < 1 ? v : 1) : 0;\n  };\n\n  /**\n   * Converts r, g, b triple into RRGGBB hex representation.\n   * @param {number} r Red value of the colour in the range [0, 1].\n   * @param {number} g Green value of the colour in the range [0, 1].\n   * @param {number} b Blue value of the colour in the range [0, 1].\n   * @return {string} A lower-case RRGGBB representation of the colour.\n   */\n  palette.rgbColor = function(r, g, b) {\n    return [r, g, b].map(function(v) {\n      v = Number(Math.round(clamp(v) * 255)).toString(16);\n      return v.length == 1 ? '0' + v : v;\n    }).join('');\n  };\n\n  /**\n   * Converts a linear r, g, b triple into RRGGBB hex representation.\n   * @param {number} r Linear red value of the colour in the range [0, 1].\n   * @param {number} g Linear green value of the colour in the range [0, 1].\n   * @param {number} b Linear blue value of the colour in the range [0, 1].\n   * @return {string} A lower-case RRGGBB representation of the colour.\n   */\n  palette.linearRgbColor = function(r, g, b) {\n    // http://www.brucelindbloom.com/index.html?Eqn_XYZ_to_RGB.html\n    return [r, g, b].map(function(v) {\n      v = clamp(v);\n      if (v <= 0.0031308) {\n        v = 12.92 * v;\n      } else {\n        v = 1.055 * Math.pow(v, 1 / 2.4) - 0.055;\n      }\n      v = Number(Math.round(v * 255)).toString(16);\n      return v.length == 1 ? '0' + v : v;\n    }).join('');\n  };\n\n  /**\n   * Converts an HSV colours to RRGGBB hex representation.\n   * @param {number} h Hue in the range [0, 1].\n   * @param {number=} opt_s Saturation in the range [0, 1].  One by default.\n   * @param {number=} opt_v Value in the range [0, 1].  One by default.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.hsvColor = function(h, opt_s, opt_v) {\n    h *= 6;\n    var s = opt_s === void(0) ? 1 : clamp(opt_s);\n    var v = opt_v === void(0) ? 1 : clamp(opt_v);\n    var x = v * (1 - s * Math.abs(h % 2 - 1));\n    var m = v * (1 - s);\n    switch (Math.floor(h) % 6) {\n    case 0: return palette.rgbColor(v, x, m);\n    case 1: return palette.rgbColor(x, v, m);\n    case 2: return palette.rgbColor(m, v, x);\n    case 3: return palette.rgbColor(m, x, v);\n    case 4: return palette.rgbColor(x, m, v);\n    default: return palette.rgbColor(v, m, x);\n    }\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'rainbow', 'qualitative', palette.hsvColor, false, true));\n\n  return palette;\n})();\n\n\n/** @typedef {function(number): string} */\npalette.ColorFunction;\n\n/** @typedef {!Array<string>} */\npalette.Palette;\n\n/** @typedef {!Object<number, palette.Palette>|!Array<palette.Palette>} */\npalette.PalettesList;\n\n/**\n * @typedef {\n *   function(number, ...?): Array<string>|\n *   {\n *     scheme_name: string,\n *     groups: !Array<string>,\n *     max: number,\n *     cbf_max: number,\n *     addPalette: function(!Array<string>, boolean=),\n *     addPalettes: function(palette.PalettesList, number=, number=),\n *     shrinkByTakingHead: function(boolean, number=),\n *     setColorFunction: function(palette.ColorFunction, boolean=, boolean=),\n *     color: function(number, ...?): ?string}}\n */\npalette.SchemeType;\n\n\n/* mpn65 palette start here. ************************************************/\n\n/* The ‘mpn65’ palette is designed for systems which show many graphs which\n   don’t have custom colour palettes chosen by humans or if number of necessary\n   colours isn’t know a priori. */\n\n(function() {\n  var scheme = palette.Scheme.fromPalettes('mpn65', 'qualitative', [[\n    'ff0029', '377eb8', '66a61e', '984ea3', '00d2d5', 'ff7f00', 'af8d00',\n    '7f80cd', 'b3e900', 'c42e60', 'a65628', 'f781bf', '8dd3c7', 'bebada',\n    'fb8072', '80b1d3', 'fdb462', 'fccde5', 'bc80bd', 'ffed6f', 'c4eaff',\n    'cf8c00', '1b9e77', 'd95f02', 'e7298a', 'e6ab02', 'a6761d', '0097ff',\n    '00d067', '000000', '252525', '525252', '737373', '969696', 'bdbdbd',\n    'f43600', '4ba93b', '5779bb', '927acc', '97ee3f', 'bf3947', '9f5b00',\n    'f48758', '8caed6', 'f2b94f', 'eff26e', 'e43872', 'd9b100', '9d7a00',\n    '698cff', 'd9d9d9', '00d27e', 'd06800', '009f82', 'c49200', 'cbe8ff',\n    'fecddf', 'c27eb6', '8cd2ce', 'c4b8d9', 'f883b0', 'a49100', 'f48800',\n    '27d0df', 'a04a9b'\n  ]]);\n  scheme.shrinkByTakingHead(true);\n  palette.register(scheme);\n})();\n\n/* Paul Tol's schemes start here. *******************************************/\n/* See http://www.sron.nl/~pault/ */\n\n(function() {\n  var rgb = palette.rgbColor;\n\n  /**\n   * Calculates value of a polynomial at given point.\n   * For example, poly(x, 1, 2, 3) calculates value of “1 + 2*x + 3*X²”.\n   * @param {number} x Value to calculate polynomial for.\n   * @param {...number} varargs Coefficients of the polynomial specified in\n   *     the order of rising powers of x including constant as the first\n   *     variable argument.\n   */\n  var poly = function(x, varargs) {\n    var i = arguments.length - 1, n = arguments[i];\n    while (i > 1) {\n      n = n * x + arguments[--i];\n    }\n    return n;\n  };\n\n  /**\n   * Calculate approximate value of error function with maximum error of 0.0005.\n   * See <https://en.wikipedia.org/wiki/Error_function>.\n   * @param {number} x Argument of the error function.\n   * @return {number} Value of error function for x.\n   */\n  var erf = function(x) {\n    // https://en.wikipedia.org/wiki/Error_function#Approximation_with_elementary_functions\n    // This produces a maximum error of 0.0005 which is more then we need.  In\n    // the worst case, that error is multiplied by four and then divided by two\n    // before being multiplied by 255, so in the end, the error is multiplied by\n    // 510 which produces 0.255 which is less than a single colour step.\n    var y = poly(Math.abs(x), 1, 0.278393, 0.230389, 0.000972, 0.078108);\n    y *= y; // y^2\n    y *= y; // y^4\n    y = 1 - 1 / y;\n    return x < 0 ? -y : y;\n  };\n\n  palette.register(palette.Scheme.fromPalettes('tol', 'qualitative', [\n    ['4477aa'],\n    ['4477aa', 'cc6677'],\n    ['4477aa', 'ddcc77', 'cc6677'],\n    ['4477aa', '117733', 'ddcc77', 'cc6677'],\n    ['332288', '88ccee', '117733', 'ddcc77', 'cc6677'],\n    ['332288', '88ccee', '117733', 'ddcc77', 'cc6677', 'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', 'ddcc77', 'cc6677', 'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', '999933', 'ddcc77', 'cc6677',\n     'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', '999933', 'ddcc77', 'cc6677',\n     '882255', 'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', '999933', 'ddcc77', '661100',\n     'cc6677', '882255', 'aa4499'],\n    ['332288', '6699cc', '88ccee', '44aa99', '117733', '999933', 'ddcc77',\n     '661100', 'cc6677', '882255', 'aa4499'],\n    ['332288', '6699cc', '88ccee', '44aa99', '117733', '999933', 'ddcc77',\n     '661100', 'cc6677', 'aa4466', '882255', 'aa4499']\n  ], 12, 12));\n\n  /**\n   * Calculates a colour along Paul Tol's sequential colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 7 and equation 1.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolSequentialColor = function(x) {\n    return rgb(1 - 0.392 * (1 + erf((x - 0.869) / 0.255)),\n               1.021 - 0.456 * (1 + erf((x - 0.527) / 0.376)),\n               1 - 0.493 * (1 + erf((x - 0.272) / 0.309)));\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'tol-sq', 'sequential', palette.tolSequentialColor, true));\n\n  /**\n   * Calculates a colour along Paul Tol's diverging colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 8 and equation 2.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolDivergingColor = function(x) {\n    var g = poly(x, 0.572, 1.524, -1.811) / poly(x, 1, -0.291, 0.1574);\n    return rgb(poly(x, 0.235, -2.13, 26.92, -65.5, 63.5, -22.36),\n               g * g,\n               1 / poly(x, 1.579, -4.03, 12.92, -31.4, 48.6, -23.36));\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'tol-dv', 'diverging', palette.tolDivergingColor, true));\n\n  /**\n   * Calculates a colour along Paul Tol's rainbow colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 13 and equation 3.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolRainbowColor = function(x) {\n    return rgb(poly(x, 0.472, -0.567, 4.05) / poly(x, 1, 8.72, -19.17, 14.1),\n               poly(x, 0.108932, -1.22635, 27.284, -98.577, 163.3, -131.395,\n                    40.634),\n               1 / poly(x, 1.97, 3.54, -68.5, 243, -297, 125));\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'tol-rainbow', 'qualitative', palette.tolRainbowColor, true));\n})();\n\n\n/* Solarized colour schemes start here. *************************************/\n/* See http://ethanschoonover.com/solarized */\n\n(function() {\n  /*\n   * Those are not really designed to be used in graphs, but we're keeping\n   * them here in case someone cares.\n   */\n  palette.register(palette.Scheme.fromPalettes('sol-base', 'sequential', [\n    ['002b36', '073642', '586e75', '657b83', '839496', '93a1a1', 'eee8d5',\n     'fdf6e3']\n  ], 1, 8));\n  palette.register(palette.Scheme.fromPalettes('sol-accent', 'qualitative', [\n    ['b58900', 'cb4b16', 'dc322f', 'd33682', '6c71c4', '268bd2', '2aa198',\n     '859900']\n  ]));\n})();\n\n\n/* ColorBrewer colour schemes start here. ***********************************/\n/* See http://colorbrewer2.org/ */\n\n(function() {\n  var schemes = {\n    YlGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['f7fcb9', 'addd8e', '31a354'],\n      4: ['ffffcc', 'c2e699', '78c679', '238443'],\n      5: ['ffffcc', 'c2e699', '78c679', '31a354', '006837'],\n      6: ['ffffcc', 'd9f0a3', 'addd8e', '78c679', '31a354', '006837'],\n      7: ['ffffcc', 'd9f0a3', 'addd8e', '78c679', '41ab5d', '238443',\n          '005a32'],\n      8: ['ffffe5', 'f7fcb9', 'd9f0a3', 'addd8e', '78c679', '41ab5d',\n          '238443', '005a32'],\n      9: ['ffffe5', 'f7fcb9', 'd9f0a3', 'addd8e', '78c679', '41ab5d',\n          '238443', '006837', '004529']\n    },\n    YlGnBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['edf8b1', '7fcdbb', '2c7fb8'],\n      4: ['ffffcc', 'a1dab4', '41b6c4', '225ea8'],\n      5: ['ffffcc', 'a1dab4', '41b6c4', '2c7fb8', '253494'],\n      6: ['ffffcc', 'c7e9b4', '7fcdbb', '41b6c4', '2c7fb8', '253494'],\n      7: ['ffffcc', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0', '225ea8',\n          '0c2c84'],\n      8: ['ffffd9', 'edf8b1', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0',\n          '225ea8', '0c2c84'],\n      9: ['ffffd9', 'edf8b1', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0',\n          '225ea8', '253494', '081d58']\n    },\n    GnBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e0f3db', 'a8ddb5', '43a2ca'],\n      4: ['f0f9e8', 'bae4bc', '7bccc4', '2b8cbe'],\n      5: ['f0f9e8', 'bae4bc', '7bccc4', '43a2ca', '0868ac'],\n      6: ['f0f9e8', 'ccebc5', 'a8ddb5', '7bccc4', '43a2ca', '0868ac'],\n      7: ['f0f9e8', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3', '2b8cbe',\n          '08589e'],\n      8: ['f7fcf0', 'e0f3db', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3',\n          '2b8cbe', '08589e'],\n      9: ['f7fcf0', 'e0f3db', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3',\n          '2b8cbe', '0868ac', '084081']\n    },\n    BuGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e5f5f9', '99d8c9', '2ca25f'],\n      4: ['edf8fb', 'b2e2e2', '66c2a4', '238b45'],\n      5: ['edf8fb', 'b2e2e2', '66c2a4', '2ca25f', '006d2c'],\n      6: ['edf8fb', 'ccece6', '99d8c9', '66c2a4', '2ca25f', '006d2c'],\n      7: ['edf8fb', 'ccece6', '99d8c9', '66c2a4', '41ae76', '238b45',\n          '005824'],\n      8: ['f7fcfd', 'e5f5f9', 'ccece6', '99d8c9', '66c2a4', '41ae76',\n          '238b45', '005824'],\n      9: ['f7fcfd', 'e5f5f9', 'ccece6', '99d8c9', '66c2a4', '41ae76',\n          '238b45', '006d2c', '00441b']\n    },\n    PuBuGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ece2f0', 'a6bddb', '1c9099'],\n      4: ['f6eff7', 'bdc9e1', '67a9cf', '02818a'],\n      5: ['f6eff7', 'bdc9e1', '67a9cf', '1c9099', '016c59'],\n      6: ['f6eff7', 'd0d1e6', 'a6bddb', '67a9cf', '1c9099', '016c59'],\n      7: ['f6eff7', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0', '02818a',\n          '016450'],\n      8: ['fff7fb', 'ece2f0', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0',\n          '02818a', '016450'],\n      9: ['fff7fb', 'ece2f0', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0',\n          '02818a', '016c59', '014636']\n    },\n    PuBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ece7f2', 'a6bddb', '2b8cbe'],\n      4: ['f1eef6', 'bdc9e1', '74a9cf', '0570b0'],\n      5: ['f1eef6', 'bdc9e1', '74a9cf', '2b8cbe', '045a8d'],\n      6: ['f1eef6', 'd0d1e6', 'a6bddb', '74a9cf', '2b8cbe', '045a8d'],\n      7: ['f1eef6', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0', '0570b0',\n          '034e7b'],\n      8: ['fff7fb', 'ece7f2', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0',\n          '0570b0', '034e7b'],\n      9: ['fff7fb', 'ece7f2', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0',\n          '0570b0', '045a8d', '023858']\n    },\n    BuPu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e0ecf4', '9ebcda', '8856a7'],\n      4: ['edf8fb', 'b3cde3', '8c96c6', '88419d'],\n      5: ['edf8fb', 'b3cde3', '8c96c6', '8856a7', '810f7c'],\n      6: ['edf8fb', 'bfd3e6', '9ebcda', '8c96c6', '8856a7', '810f7c'],\n      7: ['edf8fb', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1', '88419d',\n          '6e016b'],\n      8: ['f7fcfd', 'e0ecf4', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1',\n          '88419d', '6e016b'],\n      9: ['f7fcfd', 'e0ecf4', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1',\n          '88419d', '810f7c', '4d004b']\n    },\n    RdPu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fde0dd', 'fa9fb5', 'c51b8a'],\n      4: ['feebe2', 'fbb4b9', 'f768a1', 'ae017e'],\n      5: ['feebe2', 'fbb4b9', 'f768a1', 'c51b8a', '7a0177'],\n      6: ['feebe2', 'fcc5c0', 'fa9fb5', 'f768a1', 'c51b8a', '7a0177'],\n      7: ['feebe2', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497', 'ae017e',\n          '7a0177'],\n      8: ['fff7f3', 'fde0dd', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497',\n          'ae017e', '7a0177'],\n      9: ['fff7f3', 'fde0dd', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497',\n          'ae017e', '7a0177', '49006a']\n    },\n    PuRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e7e1ef', 'c994c7', 'dd1c77'],\n      4: ['f1eef6', 'd7b5d8', 'df65b0', 'ce1256'],\n      5: ['f1eef6', 'd7b5d8', 'df65b0', 'dd1c77', '980043'],\n      6: ['f1eef6', 'd4b9da', 'c994c7', 'df65b0', 'dd1c77', '980043'],\n      7: ['f1eef6', 'd4b9da', 'c994c7', 'df65b0', 'e7298a', 'ce1256',\n          '91003f'],\n      8: ['f7f4f9', 'e7e1ef', 'd4b9da', 'c994c7', 'df65b0', 'e7298a',\n          'ce1256', '91003f'],\n      9: ['f7f4f9', 'e7e1ef', 'd4b9da', 'c994c7', 'df65b0', 'e7298a',\n          'ce1256', '980043', '67001f']\n    },\n    OrRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee8c8', 'fdbb84', 'e34a33'],\n      4: ['fef0d9', 'fdcc8a', 'fc8d59', 'd7301f'],\n      5: ['fef0d9', 'fdcc8a', 'fc8d59', 'e34a33', 'b30000'],\n      6: ['fef0d9', 'fdd49e', 'fdbb84', 'fc8d59', 'e34a33', 'b30000'],\n      7: ['fef0d9', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548', 'd7301f',\n          '990000'],\n      8: ['fff7ec', 'fee8c8', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548',\n          'd7301f', '990000'],\n      9: ['fff7ec', 'fee8c8', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548',\n          'd7301f', 'b30000', '7f0000']\n    },\n    YlOrRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ffeda0', 'feb24c', 'f03b20'],\n      4: ['ffffb2', 'fecc5c', 'fd8d3c', 'e31a1c'],\n      5: ['ffffb2', 'fecc5c', 'fd8d3c', 'f03b20', 'bd0026'],\n      6: ['ffffb2', 'fed976', 'feb24c', 'fd8d3c', 'f03b20', 'bd0026'],\n      7: ['ffffb2', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a', 'e31a1c',\n          'b10026'],\n      8: ['ffffcc', 'ffeda0', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a',\n          'e31a1c', 'b10026'],\n      9: ['ffffcc', 'ffeda0', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a',\n          'e31a1c', 'bd0026', '800026']\n    },\n    YlOrBr: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fff7bc', 'fec44f', 'd95f0e'],\n      4: ['ffffd4', 'fed98e', 'fe9929', 'cc4c02'],\n      5: ['ffffd4', 'fed98e', 'fe9929', 'd95f0e', '993404'],\n      6: ['ffffd4', 'fee391', 'fec44f', 'fe9929', 'd95f0e', '993404'],\n      7: ['ffffd4', 'fee391', 'fec44f', 'fe9929', 'ec7014', 'cc4c02',\n          '8c2d04'],\n      8: ['ffffe5', 'fff7bc', 'fee391', 'fec44f', 'fe9929', 'ec7014',\n          'cc4c02', '8c2d04'],\n      9: ['ffffe5', 'fff7bc', 'fee391', 'fec44f', 'fe9929', 'ec7014',\n          'cc4c02', '993404', '662506']\n    },\n    Purples: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['efedf5', 'bcbddc', '756bb1'],\n      4: ['f2f0f7', 'cbc9e2', '9e9ac8', '6a51a3'],\n      5: ['f2f0f7', 'cbc9e2', '9e9ac8', '756bb1', '54278f'],\n      6: ['f2f0f7', 'dadaeb', 'bcbddc', '9e9ac8', '756bb1', '54278f'],\n      7: ['f2f0f7', 'dadaeb', 'bcbddc', '9e9ac8', '807dba', '6a51a3',\n          '4a1486'],\n      8: ['fcfbfd', 'efedf5', 'dadaeb', 'bcbddc', '9e9ac8', '807dba',\n          '6a51a3', '4a1486'],\n      9: ['fcfbfd', 'efedf5', 'dadaeb', 'bcbddc', '9e9ac8', '807dba',\n          '6a51a3', '54278f', '3f007d']\n    },\n    Blues: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['deebf7', '9ecae1', '3182bd'],\n      4: ['eff3ff', 'bdd7e7', '6baed6', '2171b5'],\n      5: ['eff3ff', 'bdd7e7', '6baed6', '3182bd', '08519c'],\n      6: ['eff3ff', 'c6dbef', '9ecae1', '6baed6', '3182bd', '08519c'],\n      7: ['eff3ff', 'c6dbef', '9ecae1', '6baed6', '4292c6', '2171b5',\n          '084594'],\n      8: ['f7fbff', 'deebf7', 'c6dbef', '9ecae1', '6baed6', '4292c6',\n          '2171b5', '084594'],\n      9: ['f7fbff', 'deebf7', 'c6dbef', '9ecae1', '6baed6', '4292c6',\n          '2171b5', '08519c', '08306b']\n    },\n    Greens: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e5f5e0', 'a1d99b', '31a354'],\n      4: ['edf8e9', 'bae4b3', '74c476', '238b45'],\n      5: ['edf8e9', 'bae4b3', '74c476', '31a354', '006d2c'],\n      6: ['edf8e9', 'c7e9c0', 'a1d99b', '74c476', '31a354', '006d2c'],\n      7: ['edf8e9', 'c7e9c0', 'a1d99b', '74c476', '41ab5d', '238b45',\n          '005a32'],\n      8: ['f7fcf5', 'e5f5e0', 'c7e9c0', 'a1d99b', '74c476', '41ab5d',\n          '238b45', '005a32'],\n      9: ['f7fcf5', 'e5f5e0', 'c7e9c0', 'a1d99b', '74c476', '41ab5d',\n          '238b45', '006d2c', '00441b']\n    },\n    Oranges: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee6ce', 'fdae6b', 'e6550d'],\n      4: ['feedde', 'fdbe85', 'fd8d3c', 'd94701'],\n      5: ['feedde', 'fdbe85', 'fd8d3c', 'e6550d', 'a63603'],\n      6: ['feedde', 'fdd0a2', 'fdae6b', 'fd8d3c', 'e6550d', 'a63603'],\n      7: ['feedde', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913', 'd94801',\n          '8c2d04'],\n      8: ['fff5eb', 'fee6ce', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913',\n          'd94801', '8c2d04'],\n      9: ['fff5eb', 'fee6ce', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913',\n          'd94801', 'a63603', '7f2704']\n    },\n    Reds: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee0d2', 'fc9272', 'de2d26'],\n      4: ['fee5d9', 'fcae91', 'fb6a4a', 'cb181d'],\n      5: ['fee5d9', 'fcae91', 'fb6a4a', 'de2d26', 'a50f15'],\n      6: ['fee5d9', 'fcbba1', 'fc9272', 'fb6a4a', 'de2d26', 'a50f15'],\n      7: ['fee5d9', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c', 'cb181d',\n          '99000d'],\n      8: ['fff5f0', 'fee0d2', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c',\n          'cb181d', '99000d'],\n      9: ['fff5f0', 'fee0d2', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c',\n          'cb181d', 'a50f15', '67000d']\n    },\n    Greys: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['f0f0f0', 'bdbdbd', '636363'],\n      4: ['f7f7f7', 'cccccc', '969696', '525252'],\n      5: ['f7f7f7', 'cccccc', '969696', '636363', '252525'],\n      6: ['f7f7f7', 'd9d9d9', 'bdbdbd', '969696', '636363', '252525'],\n      7: ['f7f7f7', 'd9d9d9', 'bdbdbd', '969696', '737373', '525252',\n          '252525'],\n      8: ['ffffff', 'f0f0f0', 'd9d9d9', 'bdbdbd', '969696', '737373',\n          '525252', '252525'],\n      9: ['ffffff', 'f0f0f0', 'd9d9d9', 'bdbdbd', '969696', '737373',\n          '525252', '252525', '000000']\n    },\n    PuOr: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['f1a340', 'f7f7f7', '998ec3'],\n      4: ['e66101', 'fdb863', 'b2abd2', '5e3c99'],\n      5: ['e66101', 'fdb863', 'f7f7f7', 'b2abd2', '5e3c99'],\n      6: ['b35806', 'f1a340', 'fee0b6', 'd8daeb', '998ec3', '542788'],\n      7: ['b35806', 'f1a340', 'fee0b6', 'f7f7f7', 'd8daeb', '998ec3',\n          '542788'],\n      8: ['b35806', 'e08214', 'fdb863', 'fee0b6', 'd8daeb', 'b2abd2',\n          '8073ac', '542788'],\n      9: ['b35806', 'e08214', 'fdb863', 'fee0b6', 'f7f7f7', 'd8daeb',\n          'b2abd2', '8073ac', '542788'],\n      10: ['7f3b08', 'b35806', 'e08214', 'fdb863', 'fee0b6', 'd8daeb',\n           'b2abd2', '8073ac', '542788', '2d004b'],\n      11: ['7f3b08', 'b35806', 'e08214', 'fdb863', 'fee0b6', 'f7f7f7',\n           'd8daeb', 'b2abd2', '8073ac', '542788', '2d004b']\n    },\n    BrBG: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['d8b365', 'f5f5f5', '5ab4ac'],\n      4: ['a6611a', 'dfc27d', '80cdc1', '018571'],\n      5: ['a6611a', 'dfc27d', 'f5f5f5', '80cdc1', '018571'],\n      6: ['8c510a', 'd8b365', 'f6e8c3', 'c7eae5', '5ab4ac', '01665e'],\n      7: ['8c510a', 'd8b365', 'f6e8c3', 'f5f5f5', 'c7eae5', '5ab4ac',\n          '01665e'],\n      8: ['8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'c7eae5', '80cdc1',\n          '35978f', '01665e'],\n      9: ['8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'f5f5f5', 'c7eae5',\n          '80cdc1', '35978f', '01665e'],\n      10: ['543005', '8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'c7eae5',\n           '80cdc1', '35978f', '01665e', '003c30'],\n      11: ['543005', '8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'f5f5f5',\n           'c7eae5', '80cdc1', '35978f', '01665e', '003c30']\n    },\n    PRGn: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['af8dc3', 'f7f7f7', '7fbf7b'],\n      4: ['7b3294', 'c2a5cf', 'a6dba0', '008837'],\n      5: ['7b3294', 'c2a5cf', 'f7f7f7', 'a6dba0', '008837'],\n      6: ['762a83', 'af8dc3', 'e7d4e8', 'd9f0d3', '7fbf7b', '1b7837'],\n      7: ['762a83', 'af8dc3', 'e7d4e8', 'f7f7f7', 'd9f0d3', '7fbf7b',\n          '1b7837'],\n      8: ['762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'd9f0d3', 'a6dba0',\n          '5aae61', '1b7837'],\n      9: ['762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'f7f7f7', 'd9f0d3',\n          'a6dba0', '5aae61', '1b7837'],\n      10: ['40004b', '762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'd9f0d3',\n           'a6dba0', '5aae61', '1b7837', '00441b'],\n      11: ['40004b', '762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'f7f7f7',\n           'd9f0d3', 'a6dba0', '5aae61', '1b7837', '00441b']\n    },\n    PiYG: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['e9a3c9', 'f7f7f7', 'a1d76a'],\n      4: ['d01c8b', 'f1b6da', 'b8e186', '4dac26'],\n      5: ['d01c8b', 'f1b6da', 'f7f7f7', 'b8e186', '4dac26'],\n      6: ['c51b7d', 'e9a3c9', 'fde0ef', 'e6f5d0', 'a1d76a', '4d9221'],\n      7: ['c51b7d', 'e9a3c9', 'fde0ef', 'f7f7f7', 'e6f5d0', 'a1d76a',\n          '4d9221'],\n      8: ['c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'e6f5d0', 'b8e186',\n          '7fbc41', '4d9221'],\n      9: ['c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'f7f7f7', 'e6f5d0',\n          'b8e186', '7fbc41', '4d9221'],\n      10: ['8e0152', 'c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'e6f5d0',\n           'b8e186', '7fbc41', '4d9221', '276419'],\n      11: ['8e0152', 'c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'f7f7f7',\n           'e6f5d0', 'b8e186', '7fbc41', '4d9221', '276419']\n    },\n    RdBu: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['ef8a62', 'f7f7f7', '67a9cf'],\n      4: ['ca0020', 'f4a582', '92c5de', '0571b0'],\n      5: ['ca0020', 'f4a582', 'f7f7f7', '92c5de', '0571b0'],\n      6: ['b2182b', 'ef8a62', 'fddbc7', 'd1e5f0', '67a9cf', '2166ac'],\n      7: ['b2182b', 'ef8a62', 'fddbc7', 'f7f7f7', 'd1e5f0', '67a9cf',\n          '2166ac'],\n      8: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'd1e5f0', '92c5de',\n          '4393c3', '2166ac'],\n      9: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'f7f7f7', 'd1e5f0',\n          '92c5de', '4393c3', '2166ac'],\n      10: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'd1e5f0',\n           '92c5de', '4393c3', '2166ac', '053061'],\n      11: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'f7f7f7',\n           'd1e5f0', '92c5de', '4393c3', '2166ac', '053061']\n    },\n    RdGy: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['ef8a62', 'ffffff', '999999'],\n      4: ['ca0020', 'f4a582', 'bababa', '404040'],\n      5: ['ca0020', 'f4a582', 'ffffff', 'bababa', '404040'],\n      6: ['b2182b', 'ef8a62', 'fddbc7', 'e0e0e0', '999999', '4d4d4d'],\n      7: ['b2182b', 'ef8a62', 'fddbc7', 'ffffff', 'e0e0e0', '999999',\n          '4d4d4d'],\n      8: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'e0e0e0', 'bababa',\n          '878787', '4d4d4d'],\n      9: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'ffffff', 'e0e0e0',\n          'bababa', '878787', '4d4d4d'],\n      10: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'e0e0e0',\n           'bababa', '878787', '4d4d4d', '1a1a1a'],\n      11: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'ffffff',\n           'e0e0e0', 'bababa', '878787', '4d4d4d', '1a1a1a']\n    },\n    RdYlBu: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['fc8d59', 'ffffbf', '91bfdb'],\n      4: ['d7191c', 'fdae61', 'abd9e9', '2c7bb6'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'abd9e9', '2c7bb6'],\n      6: ['d73027', 'fc8d59', 'fee090', 'e0f3f8', '91bfdb', '4575b4'],\n      7: ['d73027', 'fc8d59', 'fee090', 'ffffbf', 'e0f3f8', '91bfdb',\n          '4575b4'],\n      8: ['d73027', 'f46d43', 'fdae61', 'fee090', 'e0f3f8', 'abd9e9',\n          '74add1', '4575b4'],\n      9: ['d73027', 'f46d43', 'fdae61', 'fee090', 'ffffbf', 'e0f3f8',\n          'abd9e9', '74add1', '4575b4'],\n      10: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee090', 'e0f3f8',\n           'abd9e9', '74add1', '4575b4', '313695'],\n      11: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee090', 'ffffbf',\n           'e0f3f8', 'abd9e9', '74add1', '4575b4', '313695']\n    },\n    Spectral: {\n      type: 'diverging',\n      cbf: 0,\n      3: ['fc8d59', 'ffffbf', '99d594'],\n      4: ['d7191c', 'fdae61', 'abdda4', '2b83ba'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'abdda4', '2b83ba'],\n      6: ['d53e4f', 'fc8d59', 'fee08b', 'e6f598', '99d594', '3288bd'],\n      7: ['d53e4f', 'fc8d59', 'fee08b', 'ffffbf', 'e6f598', '99d594',\n          '3288bd'],\n      8: ['d53e4f', 'f46d43', 'fdae61', 'fee08b', 'e6f598', 'abdda4',\n          '66c2a5', '3288bd'],\n      9: ['d53e4f', 'f46d43', 'fdae61', 'fee08b', 'ffffbf', 'e6f598',\n          'abdda4', '66c2a5', '3288bd'],\n      10: ['9e0142', 'd53e4f', 'f46d43', 'fdae61', 'fee08b', 'e6f598',\n           'abdda4', '66c2a5', '3288bd', '5e4fa2'],\n      11: ['9e0142', 'd53e4f', 'f46d43', 'fdae61', 'fee08b', 'ffffbf',\n           'e6f598', 'abdda4', '66c2a5', '3288bd', '5e4fa2']\n    },\n    RdYlGn: {\n      type: 'diverging',\n      cbf: 0,\n      3: ['fc8d59', 'ffffbf', '91cf60'],\n      4: ['d7191c', 'fdae61', 'a6d96a', '1a9641'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'a6d96a', '1a9641'],\n      6: ['d73027', 'fc8d59', 'fee08b', 'd9ef8b', '91cf60', '1a9850'],\n      7: ['d73027', 'fc8d59', 'fee08b', 'ffffbf', 'd9ef8b', '91cf60',\n          '1a9850'],\n      8: ['d73027', 'f46d43', 'fdae61', 'fee08b', 'd9ef8b', 'a6d96a',\n          '66bd63', '1a9850'],\n      9: ['d73027', 'f46d43', 'fdae61', 'fee08b', 'ffffbf', 'd9ef8b',\n          'a6d96a', '66bd63', '1a9850'],\n      10: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee08b', 'd9ef8b',\n           'a6d96a', '66bd63', '1a9850', '006837'],\n      11: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee08b', 'ffffbf',\n           'd9ef8b', 'a6d96a', '66bd63', '1a9850', '006837']\n    },\n    Accent: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['7fc97f', 'beaed4', 'fdc086'],\n      4: ['7fc97f', 'beaed4', 'fdc086', 'ffff99'],\n      5: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0'],\n      6: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f'],\n      7: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f',\n          'bf5b17'],\n      8: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f',\n          'bf5b17', '666666']\n    },\n    Dark2: {\n      type: 'qualitative',\n      cbf: 3,\n      3: ['1b9e77', 'd95f02', '7570b3'],\n      4: ['1b9e77', 'd95f02', '7570b3', 'e7298a'],\n      5: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e'],\n      6: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02'],\n      7: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02',\n          'a6761d'],\n      8: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02',\n          'a6761d', '666666']\n    },\n    Paired: {\n      type: 'qualitative',\n      cbf: 4,\n      3: ['a6cee3', '1f78b4', 'b2df8a'],\n      4: ['a6cee3', '1f78b4', 'b2df8a', '33a02c'],\n      5: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99'],\n      6: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c'],\n      7: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n          'fdbf6f'],\n      8: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n          'fdbf6f', 'ff7f00'],\n      9: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n          'fdbf6f', 'ff7f00', 'cab2d6'],\n      10: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n           'fdbf6f', 'ff7f00', 'cab2d6', '6a3d9a'],\n      11: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n           'fdbf6f', 'ff7f00', 'cab2d6', '6a3d9a', 'ffff99'],\n      12: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n           'fdbf6f', 'ff7f00', 'cab2d6', '6a3d9a', 'ffff99', 'b15928']\n    },\n    Pastel1: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['fbb4ae', 'b3cde3', 'ccebc5'],\n      4: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4'],\n      5: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6'],\n      6: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc'],\n      7: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc',\n          'e5d8bd'],\n      8: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc',\n          'e5d8bd', 'fddaec'],\n      9: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc',\n          'e5d8bd', 'fddaec', 'f2f2f2']\n    },\n    Pastel2: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['b3e2cd', 'fdcdac', 'cbd5e8'],\n      4: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4'],\n      5: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9'],\n      6: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae'],\n      7: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae',\n          'f1e2cc'],\n      8: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae',\n          'f1e2cc', 'cccccc']\n    },\n    Set1: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['e41a1c', '377eb8', '4daf4a'],\n      4: ['e41a1c', '377eb8', '4daf4a', '984ea3'],\n      5: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00'],\n      6: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33'],\n      7: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33',\n          'a65628'],\n      8: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33',\n          'a65628', 'f781bf'],\n      9: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33',\n          'a65628', 'f781bf', '999999']\n    },\n    Set2: {\n      type: 'qualitative',\n      cbf: 3,\n      3: ['66c2a5', 'fc8d62', '8da0cb'],\n      4: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3'],\n      5: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854'],\n      6: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f'],\n      7: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f',\n          'e5c494'],\n      8: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f',\n          'e5c494', 'b3b3b3']\n    },\n    Set3: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['8dd3c7', 'ffffb3', 'bebada'],\n      4: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072'],\n      5: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3'],\n      6: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462'],\n      7: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n          'b3de69'],\n      8: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n          'b3de69', 'fccde5'],\n      9: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n          'b3de69', 'fccde5', 'd9d9d9'],\n      10: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n           'b3de69', 'fccde5', 'd9d9d9', 'bc80bd'],\n      11: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n           'b3de69', 'fccde5', 'd9d9d9', 'bc80bd', 'ccebc5'],\n      12: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n           'b3de69', 'fccde5', 'd9d9d9', 'bc80bd', 'ccebc5', 'ffed6f']\n    }\n  };\n\n  for (var name in schemes) {\n    var scheme = schemes[name];\n    scheme = palette.Scheme.fromPalettes(\n      'cb-' + name, [scheme.type, 'cb-' + scheme.type], scheme, 12, scheme.cbf);\n    palette.register(scheme);\n  }\n})();\n\nif(typeof module === \"object\" && module.exports) {\n  module.exports = palette\n}\n\n\n/***/ }),\n\n/***/ 2181:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n\n\n\nfunction warnOnce(msg) {\n  var hasWarned = false;\n  return function () {\n    if (!hasWarned) {\n      console.warn(msg);\n      hasWarned = true;\n    }\n  };\n}\n\n\nvar statelessFunctionalComponentSupplied = warnOnce('\\n>> Error, via react-flip-move <<\\n\\nYou provided a stateless functional component as a child to <FlipMove>. Unfortunately, SFCs aren\\'t supported, because Flip Move needs access to the backing instances via refs, and SFCs don\\'t have a public instance that holds that info.\\n\\nPlease wrap your components in a native element (eg. <div>), or a non-functional component.\\n');\n\nvar primitiveNodeSupplied = warnOnce('\\n>> Error, via react-flip-move <<\\n\\nYou provided a primitive (text or number) node as a child to <FlipMove>. Flip Move needs containers with unique keys to move children around.\\n\\nPlease wrap your value in a native element (eg. <span>), or a component.\\n');\n\nvar invalidTypeForTimingProp = function invalidTypeForTimingProp(args\n// prettier-ignore\n) {\n  return console.error('\\n>> Error, via react-flip-move <<\\n\\nThe prop you provided for \\'' + args.prop + '\\' is invalid. It needs to be a positive integer, or a string that can be resolved to a number. The value you provided is \\'' + args.value + '\\'.\\n\\nAs a result,  the default value for this parameter will be used, which is \\'' + args.defaultValue + '\\'.\\n');\n};\n\nvar invalidEnterLeavePreset = function invalidEnterLeavePreset(args\n// prettier-ignore\n) {\n  return console.error('\\n>> Error, via react-flip-move <<\\n\\nThe enter/leave preset you provided is invalid. We don\\'t currently have a \\'' + args.value + ' preset.\\'\\n\\nAcceptable values are ' + args.acceptableValues + '. The default value of \\'' + args.defaultValue + '\\' will be used.\\n');\n};\n\nvar parentNodePositionStatic = warnOnce('\\n>> Warning, via react-flip-move <<\\n\\nWhen using \"wrapperless\" mode (by supplying \\'typeName\\' of \\'null\\'), strange things happen when the direct parent has the default \"static\" position.\\n\\nFlipMove has added \\'position: relative\\' to this node, to ensure Flip Move animates correctly.\\n\\nTo avoid seeing this warning, simply apply a non-static position to that parent node.\\n');\n\nvar childIsDisabled = warnOnce('\\n>> Warning, via react-flip-move <<\\n\\nOne or more of Flip Move\\'s child elements have the html attribute \\'disabled\\' set to true.\\n\\nPlease note that this will cause animations to break in Internet Explorer 11 and below. Either remove the disabled attribute or set \\'animation\\' to false.\\n');\n\nvar enterPresets = {\n  elevator: {\n    from: { transform: 'scale(0)', opacity: '0' },\n    to: { transform: '', opacity: '' }\n  },\n  fade: {\n    from: { opacity: '0' },\n    to: { opacity: '' }\n  },\n  accordionVertical: {\n    from: { transform: 'scaleY(0)', transformOrigin: 'center top' },\n    to: { transform: '', transformOrigin: 'center top' }\n  },\n  accordionHorizontal: {\n    from: { transform: 'scaleX(0)', transformOrigin: 'left center' },\n    to: { transform: '', transformOrigin: 'left center' }\n  },\n  none: null\n};\n/**\n * React Flip Move | enterLeavePresets\n * (c) 2016-present Joshua Comeau\n *\n * This contains the master list of presets available for enter/leave animations,\n * along with the mapping between preset and styles.\n */\n\n\nvar leavePresets = {\n  elevator: {\n    from: { transform: 'scale(1)', opacity: '1' },\n    to: { transform: 'scale(0)', opacity: '0' }\n  },\n  fade: {\n    from: { opacity: '1' },\n    to: { opacity: '0' }\n  },\n  accordionVertical: {\n    from: { transform: 'scaleY(1)', transformOrigin: 'center top' },\n    to: { transform: 'scaleY(0)', transformOrigin: 'center top' }\n  },\n  accordionHorizontal: {\n    from: { transform: 'scaleX(1)', transformOrigin: 'left center' },\n    to: { transform: 'scaleX(0)', transformOrigin: 'left center' }\n  },\n  none: null\n};\n\n// For now, appearPresets will be identical to enterPresets.\n// Assigning a custom export in case we ever want to add appear-specific ones.\nvar appearPresets = enterPresets;\n\nvar defaultPreset = 'elevator';\nvar disablePreset = 'none';\n\nvar find = function find(predicate, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (predicate(arr[i], i, arr)) {\n      return arr[i];\n    }\n  }\n\n  return undefined;\n};\n\n\nvar every = function every(predicate, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (!predicate(arr[i], i, arr)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// eslint-disable-next-line import/no-mutable-exports\nvar _isArray = function isArray(arr) {\n  _isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n  return _isArray(arr);\n};\n\nvar isElementAnSFC = function isElementAnSFC(element) {\n  var isNativeDOMElement = typeof element.type === 'string';\n\n  if (isNativeDOMElement) {\n    return false;\n  }\n\n  return !element.type.prototype.isReactComponent;\n};\n\nfunction omit(obj) {\n  var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (attrs.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n\nfunction arraysEqual(a, b) {\n  var sameObject = a === b;\n  if (sameObject) {\n    return true;\n  }\n\n  var notBothArrays = !_isArray(a) || !_isArray(b);\n  var differentLengths = a.length !== b.length;\n\n  if (notBothArrays || differentLengths) {\n    return false;\n  }\n\n  return every(function (element, index) {\n    return element === b[index];\n  }, a);\n}\n\nfunction memoizeString(fn) {\n  var cache = {};\n\n  return function (str) {\n    if (!cache[str]) {\n      cache[str] = fn(str);\n    }\n    return cache[str];\n  };\n}\n\nvar hyphenate = memoizeString(function (str) {\n  return str.replace(/([A-Z])/g, '-$1').toLowerCase();\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * React Flip Move | propConverter\n * (c) 2016-present Joshua Comeau\n *\n * Abstracted away a bunch of the messy business with props.\n *   - props flow types and defaultProps\n *   - Type conversion (We accept 'string' and 'number' values for duration,\n *     delay, and other fields, but we actually need them to be ints.)\n *   - Children conversion (we need the children to be an array. May not always\n *     be, if a single child is passed in.)\n *   - Resolving animation presets into their base CSS styles\n */\n/* eslint-disable block-scoped-var */\n\n// eslint-disable-next-line no-duplicate-imports\n\n\nfunction propConverter(ComposedComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits(FlipMovePropConverter, _Component);\n\n    function FlipMovePropConverter() {\n      classCallCheck(this, FlipMovePropConverter);\n      return possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    FlipMovePropConverter.prototype.checkChildren = function checkChildren(children) {\n      // Skip all console warnings in production.\n      // Bail early, to avoid unnecessary work.\n      if (true) {\n        return;\n      }\n\n      // same as React.Node, but without fragments, see https://github.com/facebook/flow/issues/4781\n\n\n      // FlipMove does not support stateless functional components.\n      // Check to see if any supplied components won't work.\n      // If the child doesn't have a key, it means we aren't animating it.\n      // It's allowed to be an SFC, since we ignore it.\n      __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].forEach(children, function (child) {\n        // null, undefined, and booleans will be filtered out by Children.toArray\n        if (child == null || typeof child === 'boolean') {\n          return;\n        }\n\n        if ((typeof child === 'undefined' ? 'undefined' : _typeof(child)) !== 'object') {\n          primitiveNodeSupplied();\n          return;\n        }\n\n        if (isElementAnSFC(child) && child.key != null) {\n          statelessFunctionalComponentSupplied();\n        }\n      });\n    };\n\n    FlipMovePropConverter.prototype.convertProps = function convertProps(props) {\n      var workingProps = {\n        // explicitly bypass the props that don't need conversion\n        children: props.children,\n        easing: props.easing,\n        onStart: props.onStart,\n        onFinish: props.onFinish,\n        onStartAll: props.onStartAll,\n        onFinishAll: props.onFinishAll,\n        typeName: props.typeName,\n        disableAllAnimations: props.disableAllAnimations,\n        getPosition: props.getPosition,\n        maintainContainerHeight: props.maintainContainerHeight,\n        verticalAlignment: props.verticalAlignment,\n\n        // Do string-to-int conversion for all timing-related props\n        duration: this.convertTimingProp('duration'),\n        delay: this.convertTimingProp('delay'),\n        staggerDurationBy: this.convertTimingProp('staggerDurationBy'),\n        staggerDelayBy: this.convertTimingProp('staggerDelayBy'),\n\n        // Our enter/leave animations can be specified as boolean (default or\n        // disabled), string (preset name), or object (actual animation values).\n        // Let's standardize this so that they're always objects\n        appearAnimation: this.convertAnimationProp(props.appearAnimation, appearPresets),\n        enterAnimation: this.convertAnimationProp(props.enterAnimation, enterPresets),\n        leaveAnimation: this.convertAnimationProp(props.leaveAnimation, leavePresets),\n\n        delegated: {}\n      };\n\n      this.checkChildren(workingProps.children);\n\n      // Gather any additional props;\n      // they will be delegated to the ReactElement created.\n      var primaryPropKeys = Object.keys(workingProps);\n      var delegatedProps = omit(this.props, primaryPropKeys);\n\n      // The FlipMove container element needs to have a non-static position.\n      // We use `relative` by default, but it can be overridden by the user.\n      // Now that we're delegating props, we need to merge this in.\n      delegatedProps.style = _extends({\n        position: 'relative'\n      }, delegatedProps.style);\n\n      workingProps.delegated = delegatedProps;\n\n      return workingProps;\n    };\n\n    FlipMovePropConverter.prototype.convertTimingProp = function convertTimingProp(prop) {\n      var rawValue = this.props[prop];\n\n      var value = typeof rawValue === 'number' ? rawValue : parseInt(rawValue, 10);\n\n      if (isNaN(value)) {\n        var defaultValue = FlipMovePropConverter.defaultProps[prop];\n\n        if (false) {\n          invalidTypeForTimingProp({\n            prop: prop,\n            value: rawValue,\n            defaultValue: defaultValue\n          });\n        }\n\n        return defaultValue;\n      }\n\n      return value;\n    };\n\n    // eslint-disable-next-line class-methods-use-this\n\n\n    FlipMovePropConverter.prototype.convertAnimationProp = function convertAnimationProp(animation, presets) {\n      switch (typeof animation === 'undefined' ? 'undefined' : _typeof(animation)) {\n        case 'boolean':\n          {\n            // If it's true, we want to use the default preset.\n            // If it's false, we want to use the 'none' preset.\n            return presets[animation ? defaultPreset : disablePreset];\n          }\n\n        case 'string':\n          {\n            var presetKeys = Object.keys(presets);\n\n            if (presetKeys.indexOf(animation) === -1) {\n              if (false) {\n                invalidEnterLeavePreset({\n                  value: animation,\n                  acceptableValues: presetKeys.join(', '),\n                  defaultValue: defaultPreset\n                });\n              }\n\n              return presets[defaultPreset];\n            }\n\n            return presets[animation];\n          }\n\n        default:\n          {\n            return animation;\n          }\n      }\n    };\n\n    FlipMovePropConverter.prototype.render = function render() {\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ComposedComponent, this.convertProps(this.props));\n    };\n\n    return FlipMovePropConverter;\n  }(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]), _class.defaultProps = {\n    easing: 'ease-in-out',\n    duration: 350,\n    delay: 0,\n    staggerDurationBy: 0,\n    staggerDelayBy: 0,\n    typeName: 'div',\n    enterAnimation: defaultPreset,\n    leaveAnimation: defaultPreset,\n    disableAllAnimations: false,\n    getPosition: function getPosition(node) {\n      return node.getBoundingClientRect();\n    },\n    maintainContainerHeight: false,\n    verticalAlignment: 'top'\n  }, _temp;\n}\n\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n *\n * These methods read from and write to the DOM.\n * They almost always have side effects, and will hopefully become the\n * only spot in the codebase with impure functions.\n */\nfunction applyStylesToDOMNode(_ref) {\n  var domNode = _ref.domNode,\n      styles = _ref.styles;\n\n  // Can't just do an object merge because domNode.styles is no regular object.\n  // Need to do it this way for the engine to fire its `set` listeners.\n  Object.keys(styles).forEach(function (key) {\n    domNode.style.setProperty(hyphenate(key), styles[key]);\n  });\n}\n\n// Modified from Modernizr\nfunction whichTransitionEvent() {\n  var transitions = {\n    transition: 'transitionend',\n    '-o-transition': 'oTransitionEnd',\n    '-moz-transition': 'transitionend',\n    '-webkit-transition': 'webkitTransitionEnd'\n  };\n\n  // If we're running in a browserless environment (eg. SSR), it doesn't apply.\n  // Return a placeholder string, for consistent type return.\n  if (typeof document === 'undefined') return '';\n\n  var el = document.createElement('fakeelement');\n\n  var match = find(function (t) {\n    return el.style.getPropertyValue(t) !== undefined;\n  }, Object.keys(transitions));\n\n  // If no `transition` is found, we must be running in a browser so ancient,\n  // React itself won't run. Return an empty string, for consistent type return\n  return match ? transitions[match] : '';\n}\n\nvar getRelativeBoundingBox = function getRelativeBoundingBox(_ref2) {\n  var childDomNode = _ref2.childDomNode,\n      parentDomNode = _ref2.parentDomNode,\n      getPosition = _ref2.getPosition;\n\n  var parentBox = getPosition(parentDomNode);\n\n  var _getPosition = getPosition(childDomNode),\n      top = _getPosition.top,\n      left = _getPosition.left,\n      right = _getPosition.right,\n      bottom = _getPosition.bottom,\n      width = _getPosition.width,\n      height = _getPosition.height;\n\n  return {\n    top: top - parentBox.top,\n    left: left - parentBox.left,\n    right: parentBox.right - right,\n    bottom: parentBox.bottom - bottom,\n    width: width,\n    height: height\n  };\n};\n\n/** getPositionDelta\n * This method returns the delta between two bounding boxes, to figure out\n * how many pixels on each axis the element has moved.\n *\n */\nvar getPositionDelta = function getPositionDelta(_ref3) {\n  var childDomNode = _ref3.childDomNode,\n      childBoundingBox = _ref3.childBoundingBox,\n      parentBoundingBox = _ref3.parentBoundingBox,\n      getPosition = _ref3.getPosition;\n\n  // TEMP: A mystery bug is sometimes causing unnecessary boundingBoxes to\n  var defaultBox = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 0,\n    width: 0\n  };\n\n  // Our old box is its last calculated position, derived on mount or at the\n  // start of the previous animation.\n  var oldRelativeBox = childBoundingBox || defaultBox;\n  var parentBox = parentBoundingBox || defaultBox;\n\n  // Our new box is the new final resting place: Where we expect it to wind up\n  // after the animation. First we get the box in absolute terms (AKA relative\n  // to the viewport), and then we calculate its relative box (relative to the\n  // parent container)\n  var newAbsoluteBox = getPosition(childDomNode);\n  var newRelativeBox = {\n    top: newAbsoluteBox.top - parentBox.top,\n    left: newAbsoluteBox.left - parentBox.left\n  };\n\n  return [oldRelativeBox.left - newRelativeBox.left, oldRelativeBox.top - newRelativeBox.top];\n};\n\n/** removeNodeFromDOMFlow\n * This method does something very sneaky: it removes a DOM node from the\n * document flow, but without actually changing its on-screen position.\n *\n * It works by calculating where the node is, and then applying styles\n * so that it winds up being positioned absolutely, but in exactly the\n * same place.\n *\n * This is a vital part of the FLIP technique.\n */\nvar removeNodeFromDOMFlow = function removeNodeFromDOMFlow(childData, verticalAlignment) {\n  var domNode = childData.domNode,\n      boundingBox = childData.boundingBox;\n\n\n  if (!domNode || !boundingBox) {\n    return;\n  }\n\n  // For this to work, we have to offset any given `margin`.\n  var computed = window.getComputedStyle(domNode);\n\n  // We need to clean up margins, by converting and removing suffix:\n  // eg. '21px' -> 21\n  var marginAttrs = ['margin-top', 'margin-left', 'margin-right'];\n  var margins = marginAttrs.reduce(function (acc, margin) {\n    var _babelHelpers$extends;\n\n    var propertyVal = computed.getPropertyValue(margin);\n\n    return _extends({}, acc, (_babelHelpers$extends = {}, _babelHelpers$extends[margin] = Number(propertyVal.replace('px', '')), _babelHelpers$extends));\n  }, {});\n\n  // If we're bottom-aligned, we need to add the height of the child to its\n  // top offset. This is because, when the container is bottom-aligned, its\n  // height shrinks from the top, not the bottom. We're removing this node\n  // from the flow, so the top is going to drop by its height.\n  var topOffset = verticalAlignment === 'bottom' ? boundingBox.top - boundingBox.height : boundingBox.top;\n\n  var styles = {\n    position: 'absolute',\n    top: topOffset - margins['margin-top'] + 'px',\n    left: boundingBox.left - margins['margin-left'] + 'px',\n    right: boundingBox.right - margins['margin-right'] + 'px'\n  };\n\n  applyStylesToDOMNode({ domNode: domNode, styles: styles });\n};\n\n/** updateHeightPlaceholder\n * An optional property to FlipMove is a `maintainContainerHeight` boolean.\n * This property creates a node that fills space, so that the parent\n * container doesn't collapse when its children are removed from the\n * document flow.\n */\nvar updateHeightPlaceholder = function updateHeightPlaceholder(_ref4) {\n  var domNode = _ref4.domNode,\n      parentData = _ref4.parentData,\n      getPosition = _ref4.getPosition;\n\n  var parentDomNode = parentData.domNode;\n  var parentBoundingBox = parentData.boundingBox;\n\n  if (!parentDomNode || !parentBoundingBox) {\n    return;\n  }\n\n  // We need to find the height of the container *without* the placeholder.\n  // Since it's possible that the placeholder might already be present,\n  // we first set its height to 0.\n  // This allows the container to collapse down to the size of just its\n  // content (plus container padding or borders if any).\n  applyStylesToDOMNode({ domNode: domNode, styles: { height: '0' } });\n\n  // Find the distance by which the container would be collapsed by elements\n  // leaving. We compare the freshly-available parent height with the original,\n  // cached container height.\n  var originalParentHeight = parentBoundingBox.height;\n  var collapsedParentHeight = getPosition(parentDomNode).height;\n  var reductionInHeight = originalParentHeight - collapsedParentHeight;\n\n  // If the container has become shorter, update the padding element's\n  // height to take up the difference. Otherwise set its height to zero,\n  // so that it has no effect.\n  var styles = {\n    height: reductionInHeight > 0 ? reductionInHeight + 'px' : '0'\n  };\n\n  applyStylesToDOMNode({ domNode: domNode, styles: styles });\n};\n\nvar getNativeNode = function getNativeNode(element) {\n  // When running in a windowless environment, abort!\n  if (typeof HTMLElement === 'undefined') {\n    return null;\n  }\n\n  // `element` may already be a native node.\n  if (element instanceof HTMLElement) {\n    return element;\n  }\n\n  // While ReactDOM's `findDOMNode` is discouraged, it's the only\n  // publicly-exposed way to find the underlying DOM node for\n  // composite components.\n  var foundNode = Object(__WEBPACK_IMPORTED_MODULE_1_react_dom__[\"findDOMNode\"])(element);\n\n  if (foundNode && foundNode.nodeType === Node.TEXT_NODE) {\n    // Text nodes are not supported\n    return null;\n  }\n  // eslint-disable-next-line flowtype/no-weak-types\n  return foundNode;\n};\n\nvar createTransitionString = function createTransitionString(index, props) {\n  var delay = props.delay,\n      duration = props.duration;\n  var staggerDurationBy = props.staggerDurationBy,\n      staggerDelayBy = props.staggerDelayBy,\n      easing = props.easing;\n\n\n  delay += index * staggerDelayBy;\n  duration += index * staggerDurationBy;\n\n  var cssProperties = ['transform', 'opacity'];\n\n  return cssProperties.map(function (prop) {\n    return prop + ' ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n  }).join(', ');\n};\n\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n *\n * For information on how this code is laid out, check out CODE_TOUR.md\n */\n\n/* eslint-disable react/prop-types */\n\n// eslint-disable-next-line no-duplicate-imports\n\n\nvar transitionEnd = whichTransitionEvent();\nvar noBrowserSupport = !transitionEnd;\n\nfunction getKey(childData) {\n  return childData.key || '';\n}\n\nfunction getElementChildren(children) {\n  // Fix incomplete typing of Children.toArray\n  // eslint-disable-next-line flowtype/no-weak-types\n  return __WEBPACK_IMPORTED_MODULE_0_react__[\"Children\"].toArray(children);\n}\n\nvar FlipMove$1 = function (_Component) {\n  inherits(FlipMove, _Component);\n\n  function FlipMove() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FlipMove);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      children: getElementChildren(\n      // `this.props` ought to always be defined at this point, but a report\n      // was made about it not being defined in IE10.\n      // TODO: Test in IE10, to see if there's an underlying cause that can\n      // be addressed.\n      _this.props ? _this.props.children : []).map(function (element) {\n        return _extends({}, element, {\n          element: element,\n          appearing: true\n        });\n      })\n    }, _this.childrenData = {}, _this.parentData = {\n      domNode: null,\n      boundingBox: null\n    }, _this.heightPlaceholderData = {\n      domNode: null\n    }, _this.remainingAnimations = 0, _this.childrenToAnimate = [], _this.findDOMContainer = function () {\n      // eslint-disable-next-line react/no-find-dom-node\n      var domNode = __WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.findDOMNode(_this);\n      var parentNode = domNode && domNode.parentNode;\n\n      // This ought to be impossible, but handling it for Flow's sake.\n      if (!parentNode || !(parentNode instanceof HTMLElement)) {\n        return;\n      }\n\n      // If the parent node has static positioning, leave animations might look\n      // really funky. Let's automatically apply `position: relative` in this\n      // case, to prevent any quirkiness.\n      if (window.getComputedStyle(parentNode).position === 'static') {\n        parentNode.style.position = 'relative';\n        parentNodePositionStatic();\n      }\n\n      _this.parentData.domNode = parentNode;\n    }, _this.runAnimation = function () {\n      var dynamicChildren = _this.state.children.filter(_this.doesChildNeedToBeAnimated);\n\n      // Splitting DOM reads and writes to be peformed in batches\n      var childrenInitialStyles = dynamicChildren.map(function (child) {\n        return _this.computeInitialStyles(child);\n      });\n      dynamicChildren.forEach(function (child, index) {\n        _this.remainingAnimations += 1;\n        _this.childrenToAnimate.push(getKey(child));\n        _this.animateChild(child, index, childrenInitialStyles[index]);\n      });\n\n      if (typeof _this.props.onStartAll === 'function') {\n        _this.callChildrenHook(_this.props.onStartAll);\n      }\n    }, _this.doesChildNeedToBeAnimated = function (child) {\n      // If the child doesn't have a key, it's an immovable child (one that we\n      // do not want to do FLIP stuff to.)\n      if (!getKey(child)) {\n        return false;\n      }\n\n      var childData = _this.getChildData(getKey(child));\n      var childDomNode = childData.domNode;\n      var childBoundingBox = childData.boundingBox;\n      var parentBoundingBox = _this.parentData.boundingBox;\n\n      if (!childDomNode) {\n        return false;\n      }\n\n      var _this$props = _this.props,\n          appearAnimation = _this$props.appearAnimation,\n          enterAnimation = _this$props.enterAnimation,\n          leaveAnimation = _this$props.leaveAnimation,\n          getPosition = _this$props.getPosition;\n\n\n      var isAppearingWithAnimation = child.appearing && appearAnimation;\n      var isEnteringWithAnimation = child.entering && enterAnimation;\n      var isLeavingWithAnimation = child.leaving && leaveAnimation;\n\n      if (isAppearingWithAnimation || isEnteringWithAnimation || isLeavingWithAnimation) {\n        return true;\n      }\n\n      // If it isn't entering/leaving, we want to animate it if it's\n      // on-screen position has changed.\n\n      var _getPositionDelta = getPositionDelta({\n        childDomNode: childDomNode,\n        childBoundingBox: childBoundingBox,\n        parentBoundingBox: parentBoundingBox,\n        getPosition: getPosition\n      }),\n          dX = _getPositionDelta[0],\n          dY = _getPositionDelta[1];\n\n      return dX !== 0 || dY !== 0;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  // Copy props.children into state.\n  // To understand why this is important (and not an anti-pattern), consider\n  // how \"leave\" animations work. An item has \"left\" when the component\n  // receives a new set of props that do NOT contain the item.\n  // If we just render the props as-is, the item would instantly disappear.\n  // We want to keep the item rendered for a little while, until its animation\n  // can complete. Because we cannot mutate props, we make `state` the source\n  // of truth.\n\n\n  // FlipMove needs to know quite a bit about its children in order to do\n  // its job. We store these as a property on the instance. We're not using\n  // state, because we don't want changes to trigger re-renders, we just\n  // need a place to keep the data for reference, when changes happen.\n  // This field should not be accessed directly. Instead, use getChildData,\n  // putChildData, etc...\n\n\n  // Similarly, track the dom node and box of our parent element.\n\n\n  // If `maintainContainerHeight` prop is set to true, we'll create a\n  // placeholder element which occupies space so that the parent height\n  // doesn't change when items are removed from the document flow (which\n  // happens during leave animations)\n\n\n  // Keep track of remaining animations so we know when to fire the\n  // all-finished callback, and clean up after ourselves.\n  // NOTE: we can't simply use childrenToAnimate.length to track remaining\n  // animations, because we need to maintain the list of animating children,\n  // to pass to the `onFinishAll` handler.\n\n\n  FlipMove.prototype.componentDidMount = function componentDidMount() {\n    // Because React 16 no longer requires wrapping elements, Flip Move can opt\n    // to not wrap the children in an element. In that case, find the parent\n    // element using `findDOMNode`.\n    if (this.props.typeName === null) {\n      this.findDOMContainer();\n    }\n\n    // Run our `appearAnimation` if it was requested, right after the\n    // component mounts.\n    var shouldTriggerFLIP = this.props.appearAnimation && !this.isAnimationDisabled(this.props);\n\n    if (shouldTriggerFLIP) {\n      this.prepForAnimation();\n      this.runAnimation();\n    }\n  };\n\n  FlipMove.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // When the component is handed new props, we need to figure out the\n    // \"resting\" position of all currently-rendered DOM nodes.\n    // We store that data in this.parent and this.children,\n    // so it can be used later to work out the animation.\n    this.updateBoundingBoxCaches();\n\n    // Convert opaque children object to array.\n    var nextChildren = getElementChildren(nextProps.children);\n\n    // Next, we need to update our state, so that it contains our new set of\n    // children. If animation is disabled or unsupported, this is easy;\n    // we just copy our props into state.\n    // Assuming that we can animate, though, we have to do some work.\n    // Essentially, we want to keep just-deleted nodes in the DOM for a bit\n    // longer, so that we can animate them away.\n    this.setState({\n      children: this.isAnimationDisabled(nextProps) ? nextChildren.map(function (element) {\n        return _extends({}, element, { element: element });\n      }) : this.calculateNextSetOfChildren(nextChildren)\n    });\n  };\n\n  FlipMove.prototype.componentDidUpdate = function componentDidUpdate(previousProps) {\n    if (this.props.typeName === null) {\n      this.findDOMContainer();\n    }\n    // If the children have been re-arranged, moved, or added/removed,\n    // trigger the main FLIP animation.\n    //\n    // IMPORTANT: We need to make sure that the children have actually changed.\n    // At the end of the transition, we clean up nodes that need to be removed.\n    // We DON'T want this cleanup to trigger another update.\n\n    var oldChildrenKeys = getElementChildren(this.props.children).map(function (d) {\n      return d.key;\n    });\n    var nextChildrenKeys = getElementChildren(previousProps.children).map(function (d) {\n      return d.key;\n    });\n\n    var shouldTriggerFLIP = !arraysEqual(oldChildrenKeys, nextChildrenKeys) && !this.isAnimationDisabled(this.props);\n\n    if (shouldTriggerFLIP) {\n      this.prepForAnimation();\n      this.runAnimation();\n    }\n  };\n\n  FlipMove.prototype.calculateNextSetOfChildren = function calculateNextSetOfChildren(nextChildren) {\n    var _this2 = this;\n\n    // We want to:\n    //   - Mark all new children as `entering`\n    //   - Pull in previous children that aren't in nextChildren, and mark them\n    //     as `leaving`\n    //   - Preserve the nextChildren list order, with leaving children in their\n    //     appropriate places.\n    //\n\n    var updatedChildren = nextChildren.map(function (nextChild) {\n      var child = _this2.findChildByKey(nextChild.key);\n\n      // If the current child did exist, but it was in the midst of leaving,\n      // we want to treat it as though it's entering\n      var isEntering = !child || child.leaving;\n\n      return _extends({}, nextChild, { element: nextChild, entering: isEntering });\n    });\n\n    // This is tricky. We want to keep the nextChildren's ordering, but with\n    // any just-removed items maintaining their original position.\n    // eg.\n    //   this.state.children  = [ 1, 2, 3, 4 ]\n    //   nextChildren         = [ 3, 1 ]\n    //\n    // In this example, we've removed the '2' & '4'\n    // We want to end up with:  [ 2, 3, 1, 4 ]\n    //\n    // To accomplish that, we'll iterate through this.state.children. whenever\n    // we find a match, we'll append our `leaving` flag to it, and insert it\n    // into the nextChildren in its ORIGINAL position. Note that, as we keep\n    // inserting old items into the new list, the \"original\" position will\n    // keep incrementing.\n    var numOfChildrenLeaving = 0;\n    this.state.children.forEach(function (child, index) {\n      var isLeaving = !find(function (_ref) {\n        var key = _ref.key;\n        return key === getKey(child);\n      }, nextChildren);\n\n      // If the child isn't leaving (or, if there is no leave animation),\n      // we don't need to add it into the state children.\n      if (!isLeaving || !_this2.props.leaveAnimation) return;\n\n      var nextChild = _extends({}, child, { leaving: true });\n      var nextChildIndex = index + numOfChildrenLeaving;\n\n      updatedChildren.splice(nextChildIndex, 0, nextChild);\n      numOfChildrenLeaving += 1;\n    });\n\n    return updatedChildren;\n  };\n\n  FlipMove.prototype.prepForAnimation = function prepForAnimation() {\n    var _this3 = this;\n\n    // Our animation prep consists of:\n    // - remove children that are leaving from the DOM flow, so that the new\n    //   layout can be accurately calculated,\n    // - update the placeholder container height, if needed, to ensure that\n    //   the parent's height doesn't collapse.\n\n    var _props = this.props,\n        leaveAnimation = _props.leaveAnimation,\n        maintainContainerHeight = _props.maintainContainerHeight,\n        getPosition = _props.getPosition;\n\n    // we need to make all leaving nodes \"invisible\" to the layout calculations\n    // that will take place in the next step (this.runAnimation).\n\n    if (leaveAnimation) {\n      var leavingChildren = this.state.children.filter(function (child) {\n        return child.leaving;\n      });\n\n      leavingChildren.forEach(function (leavingChild) {\n        var childData = _this3.getChildData(getKey(leavingChild));\n\n        // Warn if child is disabled\n        if (!_this3.isAnimationDisabled(_this3.props) && childData.domNode && childData.domNode.disabled) {\n          childIsDisabled();\n        }\n\n        // We need to take the items out of the \"flow\" of the document, so that\n        // its siblings can move to take its place.\n        if (childData.boundingBox) {\n          removeNodeFromDOMFlow(childData, _this3.props.verticalAlignment);\n        }\n      });\n\n      if (maintainContainerHeight && this.heightPlaceholderData.domNode) {\n        updateHeightPlaceholder({\n          domNode: this.heightPlaceholderData.domNode,\n          parentData: this.parentData,\n          getPosition: getPosition\n        });\n      }\n    }\n\n    // For all children not in the middle of entering or leaving,\n    // we need to reset the transition, so that the NEW shuffle starts from\n    // the right place.\n    this.state.children.forEach(function (child) {\n      var _getChildData = _this3.getChildData(getKey(child)),\n          domNode = _getChildData.domNode;\n\n      // Ignore children that don't render DOM nodes (eg. by returning null)\n\n\n      if (!domNode) {\n        return;\n      }\n\n      if (!child.entering && !child.leaving) {\n        applyStylesToDOMNode({\n          domNode: domNode,\n          styles: {\n            transition: ''\n          }\n        });\n      }\n    });\n  };\n\n  FlipMove.prototype.animateChild = function animateChild(child, index, childInitialStyles) {\n    var _this4 = this;\n\n    var _getChildData2 = this.getChildData(getKey(child)),\n        domNode = _getChildData2.domNode;\n\n    if (!domNode) {\n      return;\n    }\n\n    // Apply the relevant style for this DOM node\n    // This is the offset from its actual DOM position.\n    // eg. if an item has been re-rendered 20px lower, we want to apply a\n    // style of 'transform: translate(-20px)', so that it appears to be where\n    // it started.\n    // In FLIP terminology, this is the 'Invert' stage.\n    applyStylesToDOMNode({\n      domNode: domNode,\n      styles: childInitialStyles\n    });\n\n    // Start by invoking the onStart callback for this child.\n    if (this.props.onStart) this.props.onStart(child, domNode);\n\n    // Next, animate the item from it's artificially-offset position to its\n    // new, natural position.\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        // NOTE, RE: the double-requestAnimationFrame:\n        // Sadly, this is the most browser-compatible way to do this I've found.\n        // Essentially we need to set the initial styles outside of any request\n        // callbacks to avoid batching them. Then, a frame needs to pass with\n        // the styles above rendered. Then, on the second frame, we can apply\n        // our final styles to perform the animation.\n\n        // Our first order of business is to \"undo\" the styles applied in the\n        // previous frames, while also adding a `transition` property.\n        // This way, the item will smoothly transition from its old position\n        // to its new position.\n\n        // eslint-disable-next-line flowtype/require-variable-type\n        var styles = {\n          transition: createTransitionString(index, _this4.props),\n          transform: '',\n          opacity: ''\n        };\n\n        if (child.appearing && _this4.props.appearAnimation) {\n          styles = _extends({}, styles, _this4.props.appearAnimation.to);\n        } else if (child.entering && _this4.props.enterAnimation) {\n          styles = _extends({}, styles, _this4.props.enterAnimation.to);\n        } else if (child.leaving && _this4.props.leaveAnimation) {\n          styles = _extends({}, styles, _this4.props.leaveAnimation.to);\n        }\n\n        // In FLIP terminology, this is the 'Play' stage.\n        applyStylesToDOMNode({ domNode: domNode, styles: styles });\n      });\n    });\n\n    this.bindTransitionEndHandler(child);\n  };\n\n  FlipMove.prototype.bindTransitionEndHandler = function bindTransitionEndHandler(child) {\n    var _this5 = this;\n\n    var _getChildData3 = this.getChildData(getKey(child)),\n        domNode = _getChildData3.domNode;\n\n    if (!domNode) {\n      return;\n    }\n\n    // The onFinish callback needs to be bound to the transitionEnd event.\n    // We also need to unbind it when the transition completes, so this ugly\n    // inline function is required (we need it here so it closes over\n    // dependent variables `child` and `domNode`)\n    var transitionEndHandler = function transitionEndHandler(ev) {\n      // It's possible that this handler is fired not on our primary transition,\n      // but on a nested transition (eg. a hover effect). Ignore these cases.\n      if (ev.target !== domNode) return;\n\n      // Remove the 'transition' inline style we added. This is cleanup.\n      domNode.style.transition = '';\n\n      // Trigger any applicable onFinish/onFinishAll hooks\n      _this5.triggerFinishHooks(child, domNode);\n\n      domNode.removeEventListener(transitionEnd, transitionEndHandler);\n\n      if (child.leaving) {\n        _this5.removeChildData(getKey(child));\n      }\n    };\n\n    domNode.addEventListener(transitionEnd, transitionEndHandler);\n  };\n\n  FlipMove.prototype.triggerFinishHooks = function triggerFinishHooks(child, domNode) {\n    var _this6 = this;\n\n    if (this.props.onFinish) this.props.onFinish(child, domNode);\n\n    // Reduce the number of children we need to animate by 1,\n    // so that we can tell when all children have finished.\n    this.remainingAnimations -= 1;\n\n    if (this.remainingAnimations === 0) {\n      // Remove any items from the DOM that have left, and reset `entering`.\n      var nextChildren = this.state.children.filter(function (_ref2) {\n        var leaving = _ref2.leaving;\n        return !leaving;\n      }).map(function (item) {\n        return _extends({}, item, {\n          // fix for Flow\n          element: item.element,\n          appearing: false,\n          entering: false\n        });\n      });\n\n      this.setState({ children: nextChildren }, function () {\n        if (typeof _this6.props.onFinishAll === 'function') {\n          _this6.callChildrenHook(_this6.props.onFinishAll);\n        }\n\n        // Reset our variables for the next iteration\n        _this6.childrenToAnimate = [];\n      });\n\n      // If the placeholder was holding the container open while elements were\n      // leaving, we we can now set its height to zero.\n      if (this.heightPlaceholderData.domNode) {\n        this.heightPlaceholderData.domNode.style.height = '0';\n      }\n    }\n  };\n\n  FlipMove.prototype.callChildrenHook = function callChildrenHook(hook) {\n    var _this7 = this;\n\n    var elements = [];\n    var domNodes = [];\n\n    this.childrenToAnimate.forEach(function (childKey) {\n      // If this was an exit animation, the child may no longer exist.\n      // If so, skip it.\n      var child = _this7.findChildByKey(childKey);\n\n      if (!child) {\n        return;\n      }\n\n      elements.push(child);\n\n      if (_this7.hasChildData(childKey)) {\n        domNodes.push(_this7.getChildData(childKey).domNode);\n      }\n    });\n\n    hook(elements, domNodes);\n  };\n\n  FlipMove.prototype.updateBoundingBoxCaches = function updateBoundingBoxCaches() {\n    var _this8 = this;\n\n    // This is the ONLY place that parentData and childrenData's\n    // bounding boxes are updated. They will be calculated at other times\n    // to be compared to this value, but it's important that the cache is\n    // updated once per update.\n    var parentDomNode = this.parentData.domNode;\n\n    if (!parentDomNode) {\n      return;\n    }\n\n    this.parentData.boundingBox = this.props.getPosition(parentDomNode);\n\n    // Splitting DOM reads and writes to be peformed in batches\n    var childrenBoundingBoxes = [];\n\n    this.state.children.forEach(function (child) {\n      var childKey = getKey(child);\n\n      // It is possible that a child does not have a `key` property;\n      // Ignore these children, they don't need to be moved.\n      if (!childKey) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      // In very rare circumstances, for reasons unknown, the ref is never\n      // populated for certain children. In this case, avoid doing this update.\n      // see: https://github.com/joshwcomeau/react-flip-move/pull/91\n      if (!_this8.hasChildData(childKey)) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      var childData = _this8.getChildData(childKey);\n\n      // If the child element returns null, we need to avoid trying to\n      // account for it\n      if (!childData.domNode || !child) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      childrenBoundingBoxes.push(getRelativeBoundingBox({\n        childDomNode: childData.domNode,\n        parentDomNode: parentDomNode,\n        getPosition: _this8.props.getPosition\n      }));\n    });\n\n    this.state.children.forEach(function (child, index) {\n      var childKey = getKey(child);\n\n      var childBoundingBox = childrenBoundingBoxes[index];\n\n      if (!childKey) {\n        return;\n      }\n\n      _this8.setChildData(childKey, {\n        boundingBox: childBoundingBox\n      });\n    });\n  };\n\n  FlipMove.prototype.computeInitialStyles = function computeInitialStyles(child) {\n    if (child.appearing) {\n      return this.props.appearAnimation ? this.props.appearAnimation.from : {};\n    } else if (child.entering) {\n      if (!this.props.enterAnimation) {\n        return {};\n      }\n      // If this child was in the middle of leaving, it still has its\n      // absolute positioning styles applied. We need to undo those.\n      return _extends({\n        position: '',\n        top: '',\n        left: '',\n        right: '',\n        bottom: ''\n      }, this.props.enterAnimation.from);\n    } else if (child.leaving) {\n      return this.props.leaveAnimation ? this.props.leaveAnimation.from : {};\n    }\n\n    var childData = this.getChildData(getKey(child));\n    var childDomNode = childData.domNode;\n    var childBoundingBox = childData.boundingBox;\n    var parentBoundingBox = this.parentData.boundingBox;\n\n    if (!childDomNode) {\n      return {};\n    }\n\n    var _getPositionDelta2 = getPositionDelta({\n      childDomNode: childDomNode,\n      childBoundingBox: childBoundingBox,\n      parentBoundingBox: parentBoundingBox,\n      getPosition: this.props.getPosition\n    }),\n        dX = _getPositionDelta2[0],\n        dY = _getPositionDelta2[1];\n\n    return {\n      transform: 'translate(' + dX + 'px, ' + dY + 'px)'\n    };\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n\n\n  FlipMove.prototype.isAnimationDisabled = function isAnimationDisabled(props) {\n    // If the component is explicitly passed a `disableAllAnimations` flag,\n    // we can skip this whole process. Similarly, if all of the numbers have\n    // been set to 0, there is no point in trying to animate; doing so would\n    // only cause a flicker (and the intent is probably to disable animations)\n    // We can also skip this rigamarole if there's no browser support for it.\n    return noBrowserSupport || props.disableAllAnimations || props.duration === 0 && props.delay === 0 && props.staggerDurationBy === 0 && props.staggerDelayBy === 0;\n  };\n\n  FlipMove.prototype.findChildByKey = function findChildByKey(key) {\n    return find(function (child) {\n      return getKey(child) === key;\n    }, this.state.children);\n  };\n\n  FlipMove.prototype.hasChildData = function hasChildData(key) {\n    // Object has some built-in properties on its prototype, such as toString.  hasOwnProperty makes\n    // sure that key is present on childrenData itself, not on its prototype.\n    return Object.prototype.hasOwnProperty.call(this.childrenData, key);\n  };\n\n  FlipMove.prototype.getChildData = function getChildData(key) {\n    return this.hasChildData(key) ? this.childrenData[key] : {};\n  };\n\n  FlipMove.prototype.setChildData = function setChildData(key, data) {\n    this.childrenData[key] = _extends({}, this.getChildData(key), data);\n  };\n\n  FlipMove.prototype.removeChildData = function removeChildData(key) {\n    delete this.childrenData[key];\n    this.setState(function (prevState) {\n      return _extends({}, prevState, {\n        children: prevState.children.filter(function (child) {\n          return child.element.key !== key;\n        })\n      });\n    });\n  };\n\n  FlipMove.prototype.createHeightPlaceholder = function createHeightPlaceholder() {\n    var _this9 = this;\n\n    var typeName = this.props.typeName;\n\n    // If requested, create an invisible element at the end of the list.\n    // Its height will be modified to prevent the container from collapsing\n    // prematurely.\n\n    var isContainerAList = typeName === 'ul' || typeName === 'ol';\n    var placeholderType = isContainerAList ? 'li' : 'div';\n\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(placeholderType, {\n      key: 'height-placeholder',\n      ref: function ref(domNode) {\n        _this9.heightPlaceholderData.domNode = domNode;\n      },\n      style: { visibility: 'hidden', height: 0 }\n    });\n  };\n\n  FlipMove.prototype.childrenWithRefs = function childrenWithRefs() {\n    var _this10 = this;\n\n    // We need to clone the provided children, capturing a reference to the\n    // underlying DOM node. Flip Move needs to use the React escape hatches to\n    // be able to do its calculations.\n    return this.state.children.map(function (child) {\n      return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"cloneElement\"])(child.element, {\n        ref: function ref(element) {\n          // Stateless Functional Components are not supported by FlipMove,\n          // because they don't have instances.\n          if (!element) {\n            return;\n          }\n\n          var domNode = getNativeNode(element);\n          _this10.setChildData(getKey(child), { domNode: domNode });\n        }\n      });\n    });\n  };\n\n  FlipMove.prototype.render = function render() {\n    var _this11 = this;\n\n    var _props2 = this.props,\n        typeName = _props2.typeName,\n        delegated = _props2.delegated,\n        leaveAnimation = _props2.leaveAnimation,\n        maintainContainerHeight = _props2.maintainContainerHeight;\n\n\n    var children = this.childrenWithRefs();\n    if (leaveAnimation && maintainContainerHeight) {\n      children.push(this.createHeightPlaceholder());\n    }\n\n    if (!typeName) return children;\n\n    var props = _extends({}, delegated, {\n      children: children,\n      ref: function ref(node) {\n        _this11.parentData.domNode = node;\n      }\n    });\n\n    return Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"createElement\"])(typeName, props);\n  };\n\n  return FlipMove;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\nvar enhancedFlipMove = /* #__PURE__ */propConverter(FlipMove$1);\n\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (enhancedFlipMove);\n\n\n/***/ }),\n\n/***/ 2182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.MultiLineReact=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactIntl=__webpack_require__(7);var _chartConfig=__webpack_require__(1151);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(1012);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(1256);__webpack_require__(1152);__webpack_require__(1153);var _reactRedux=__webpack_require__(6);var _lodash=__webpack_require__(10);var _lodash2=_interopRequireDefault(_lodash);__webpack_require__(1350);__webpack_require__(1354);__webpack_require__(1355);__webpack_require__(1356);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var MultiLineReact=exports.MultiLineReact=function(_React$Component){_inherits(MultiLineReact,_React$Component);function MultiLineReact(props){_classCallCheck(this,MultiLineReact);var _this=_possibleConstructorReturn(this,(MultiLineReact.__proto__||Object.getPrototypeOf(MultiLineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(MultiLineReact,[{key:'shouldComponentUpdate',value:function shouldComponentUpdate(nextProps,nextState){if(_lodash2.default.isEmpty(this.props.data)){//return false\n}if(_lodash2.default.isEqual(this.props.data,nextProps.data)){return false;}return true;}},{key:'initLine',value:function initLine(id){var _props=this.props,intl=_props.intl,data=_props.data,newCandidates=_props.newCandidates;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.multiLineChart.title.text='';_chartConfig2.default.multiLineChart.xAxis.data=[];_chartConfig2.default.multiLineChart.series=[];_chartConfig2.default.multiLineChart.legend.data=[];if(data&&data.length>0){var stats={};var addresses={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=data[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var row=_step.value;if(!stats[row.timestamp]){stats[row.timestamp]=[];}stats[row.timestamp].push({address:row.address,votes:row.votes});addresses[row.address]=true;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var latestTimestamp=(0,_lodash.max)(Object.keys(stats));var highestAddresses=(0,_lodash.keyBy)((0,_lodash.sortBy)(stats[latestTimestamp],function(s){return s.votes*-1;}));var rowStats=[];var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.entries(stats)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _ref=_step2.value;var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var value=_ref2[1];var _row={timestamp:key,datetime:intl.formatTime(parseInt(key))};var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=value[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var entry=_step3.value;if(typeof highestAddresses[entry.address]!=='undefined'){_row[entry.address]=entry.votes;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}rowStats.push(_row);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}rowStats=(0,_lodash.sortBy)(rowStats,function(s){return s.timestamp;});var xAxis=[];for(var index in rowStats){xAxis.push(rowStats[index].datetime);}var yAxis=[];var flag=false;for(var candy in newCandidates){var temp=[];for(var stat in stats){for(var ss in stats[stat]){if(stats[stat][ss].address===newCandidates[candy].address){temp.push(stats[stat][ss].votes);flag=true;break;}}if(!flag)temp.push(0);if(flag)flag=false;}temp=temp.slice(0,temp.length-2);yAxis.push({key:newCandidates[candy].address,url:newCandidates[candy].url,data:temp});}var newYAxis=yAxis.slice(0,10);_chartConfig2.default.multiLineChart.xAxis.data=xAxis.slice(2,xAxis.length);newYAxis.map(function(val,index){_chartConfig2.default.multiLineChart.legend.data.push(val.url);_chartConfig2.default.multiLineChart.series.push({name:val.url,data:val.data,type:'line',smooth:true});});}if(data&&data.length===0){_chartConfig2.default.multiLineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.multiLineChart);}},{key:'componentDidMount',value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:'render',value:function render(){return _react2.default.createElement('div',null,_react2.default.createElement('div',{id:this.state.lineId,style:this.props.style}));}}]);return MultiLineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(MultiLineReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/VoteLive.f2867d88.chunk.js","import React from \"react\";\nimport {FormattedNumber} from \"react-intl\";\nimport {sortBy} from \"lodash\";\nimport {withTimers} from \"../utils/timing\";\nimport FlipMove from \"react-flip-move\";\nimport Avatar from \"../common/Avatar\";\nimport {Client} from \"../../services/api\";\nimport {AddressLink} from \"../common/Links\";\nimport palette from \"google-palette\";\n\nimport {tu} from \"../../utils/i18n\"\nimport MultiLineReact from \"../common/MultiLineChart\";\nimport {TronLoader} from \"../common/loaders\";\n\nclass VoteLive extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      candidates: [],\n      data: null,\n      votes: {},\n      colors: palette('mpn65', 20),\n    };\n  }\n\n  componentDidMount() {\n\n    this.loadCandidates()\n        .then(() => this.loadVotes());\n\n    this.props.setInterval(() => {\n      this.loadVotes();\n      this.loadCandidates();\n    }, 15000);\n\n    this.loadData();\n  }\n\n  loadCandidates = async () => {\n    let {witnesses} = await Client.getWitnesses();\n\n    this.setState({\n      candidates: witnesses.map(c => ({\n        ...c,\n        votes: 0,\n      })),\n    });\n  };\n\n  loadVotes = async () => {\n    let votes = await Client.getLiveVotes();\n\n    this.setState({\n      votes,\n    });\n  };\n  loadData = async () => {\n\n    let data = await Client.getVoteStats();\n    this.setState({\n      data,\n    });\n  }\n\n  render() {\n\n    let {candidates, colors, votes, data} = this.state;\n\n    candidates = candidates.map(c => ({\n      ...c,\n      votes: (votes[c.address] ? votes[c.address].votes : 0),\n    }));\n\n    let newCandidates = sortBy(candidates, c => c.votes * -1).map((c, index) => ({\n      ...c,\n      rank: index + 1,\n    }));\n\n    return (\n        <main className=\"container header-overlap pb-3\">\n          <div className=\"card\">\n            <div className=\"card-header text-center\">\n              {tu(\"3_day_ranking\")}\n            </div>\n            {\n              data === null ?\n              <TronLoader/> :\n              <MultiLineReact style={{height: 400}} newCandidates={newCandidates} data={data}/>\n            }\n            {/*<VoteStats colors={colors} newCandidates={newCandidates}/>*/}\n          </div>\n          <div className=\"card mt-3\">\n            <div className=\"card-header text-center\">\n              {tu(\"live_ranking\")}\n              <div className=\"small text-center text-muted p-2\">\n                {tu(\"live_ranking_msg\")}\n              </div>\n            </div>\n            <div className=\"media m-3 mb-0\">\n              <div className=\"font-weight-bold text-center border-1 border-secondary\" style={{width: 25}}>\n                &nbsp;\n              </div>\n              <div className=\"mx-2\" style={{width: 25}}>\n                &nbsp;\n              </div>\n              <div className=\"media-body font-weight-bold\">\n                {tu(\"candidate\")}\n              </div>\n              <div className=\"ml-3 text-center font-weight-bold\">\n                {tu(\"current_votes\")}\n              </div>\n            </div>\n            <FlipMove\n                duration={700}\n                easing=\"ease\"\n                enterAnimation=\"elevator\"\n                staggerDurationBy={15}\n                staggerDelayBy={20}>\n\n              {\n                newCandidates.map((candidate, index) => (\n                    <div key={candidate.address} className=\"media mx-3 mb-3\">\n                      <div className=\"font-weight-bold text-center border-1 border-secondary\"\n                           style={{color: index < 15 ? '#' + colors[index] : null, ...style.rank}}>\n                        {candidate.rank}\n                      </div>\n                      <div className=\"mx-2\">\n                        <Avatar value={candidate.address} size={style.avatar.height}/>\n                      </div>\n                      <div className=\"media-body\">\n                  <span className=\"mt-0\" style={style.row}>\n                    <AddressLink address={candidate.address}>\n                      {candidate.name || candidate.url}\n                    </AddressLink>\n                  </span>\n                      </div>\n                      <div className=\"ml-3 text-center\">\n                        {/*<div className=\"text-muted\">Votes</div>*/}\n                        <div style={style.votes}>\n                          <code style={{color: '#3E3F3A'}}>\n                            <FormattedNumber value={candidate.votes}/>\n                          </code>\n                        </div>\n                      </div>\n                    </div>\n                ))\n              }\n            </FlipMove>\n          </div>\n        </main>\n    );\n  }\n}\n\nlet height = 25;\n\nconst style = {\n  rank: {\n    fontSize: 18,\n    lineHeight: `${height}px`,\n    borderRadius: '6px',\n    width: '45px'\n  },\n  votes: {\n    fontSize: 18,\n    lineHeight: `${height}px`,\n  },\n  row: {\n    lineHeight: `${height}px`,\n    fontSize: 18,\n  },\n  avatar: {\n    height: height,\n  }\n};\n\nexport default withTimers(VoteLive);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/voting/VoteLive.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 1008\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 1010\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 1011\n// module chunks = 2 3 4","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.4';\nvar dependencies = {\n  zrender: '4.0.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // stackSeriesData(ecModel);\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 1012\n// module chunks = 2 3 4","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 1013\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 1014\n// module chunks = 2 3 4","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 1015\n// module chunks = 2 3 4","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 1016\n// module chunks = 2 3 4","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 1017\n// module chunks = 2 3 4","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 1018\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 1021\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 1024\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 1027\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 1029\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 1031\n// module chunks = 2 3 4","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 1033\n// module chunks = 2 3 4","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 1038\n// module chunks = 2 3 4","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 1039\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `calBarWidthAndOffset` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = [];\n    var isBaseAxisAndHasBarSeries;\n    ecModel.eachSeriesByType('bar', function (seriesModel) {\n      if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n        barSeriesModels.push(seriesModel);\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      }\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barSeriesModels);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barSeriesModels) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(barSeriesModels); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 1040\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dataProvider.js\n// module id = 1042\n// module chunks = 2 3 4","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1044\n// module chunks = 2 3 4","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1045\n// module chunks = 2 3 4","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 1046\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Source.js\n// module id = 1047\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  }); // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n  if (stackedDimInfo && (byIndex || stackedByDimInfo)) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n */\n\n\nfunction isDimensionStacked(data, stackedDim, stackedByDim) {\n  return stackedDim && stackedDim === data.getCalculationInfo('stackedDimension') && (stackedByDim != null ? stackedByDim === data.getCalculationInfo('stackedByDimension') : data.getCalculationInfo('isStackedByIndex'));\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dataStackHelper.js\n// module id = 1048\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1053\n// module chunks = 2 3 4","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1054\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1055\n// module chunks = 2 3 4","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1056\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1057\n// module chunks = 2 3 4","// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/sourceType.js\n// module id = 1058\n// module chunks = 2 3 4","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1059\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1060\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1061\n// module chunks = 2 3 4","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1071\n// module chunks = 2 3 4","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1072\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1073\n// module chunks = 2 3 4","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1074\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/sourceHelper.js\n// module id = 1075\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1076\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && (forceFirstProgress || start < end) && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    }\n  }\n\n  taskIns._progress = progress;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/stream/task.js\n// module id = 1077\n// module chunks = 2 3 4","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1078\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dimensionHelper.js\n// module id = 1079\n// module chunks = 2 3 4","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1080\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var canProgressiveRender = seriesModel.pipelineContext.canProgressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = canProgressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1085\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\nvar CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_calculationInfo', '_invertedIndicesMap', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n} // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range\n/*, stack */\n) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  } // stack = stack || false;\n\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices\n  /* && !stack */\n  ) {\n      // Extreme optimization for common case. About 2x faster in chrome.\n      var idx = 0;\n\n      if (dimSize === 1) {\n        var dimStorage = this._storage[dimensions[0]];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n\n            if (val >= min && val <= max) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      } else if (dimSize === 2) {\n        var dimStorage = this._storage[dim0];\n        var dimStorage2 = this._storage[dimensions[1]];\n        var min2 = range[dimensions[1]][0];\n        var max2 = range[dimensions[1]][1];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var chunkStorage2 = dimStorage2[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n            var val2 = chunkStorage2[i];\n\n            if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      }\n    }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      // stack = stack || !!this.getCalculationInfo(dim0);\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i); // var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        var val = this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k]; // var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          var val = this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage;\n  var rawExtent = zrUtil.extend({}, original._rawExtent); // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        rawExtent[dim] = getInitialExtent();\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 1086\n// module chunks = 2 3 4","var completeDimensions = require(\"./completeDimensions\");\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/createDimensions.js\n// module id = 1087\n// module chunks = 2 3 4","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.3';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1103\n// module chunks = 2 3 4","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1104\n// module chunks = 2 3 4","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1105\n// module chunks = 2 3 4","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1106\n// module chunks = 2 3 4","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1107\n// module chunks = 2 3 4","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1108\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1109\n// module chunks = 2 3 4","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1110\n// module chunks = 2 3 4","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixShadow.js\n// module id = 1111\n// module chunks = 2 3 4","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1112\n// module chunks = 2 3 4","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1113\n// module chunks = 2 3 4","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1114\n// module chunks = 2 3 4","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1115\n// module chunks = 2 3 4","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1116\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1117\n// module chunks = 2 3 4","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1118\n// module chunks = 2 3 4","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1119\n// module chunks = 2 3 4","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1120\n// module chunks = 2 3 4","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1121\n// module chunks = 2 3 4","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1122\n// module chunks = 2 3 4","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1123\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/referHelper.js\n// module id = 1124\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1125\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 1126\n// module chunks = 2 3 4","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.canProgressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.canProgressiveRender = pipelineContext.canProgressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createRenderPlanner.js\n// module id = 1127\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1128\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1129\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/OrdinalMeta.js\n// module id = 1130\n// module chunks = 2 3 4","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1131\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1132\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1133\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1134\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1135\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1136\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1137\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1138\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1139\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 1140\n// module chunks = 2 3 4","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/helper.js\n// module id = 1141\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1142\n// module chunks = 2 3 4","module.exports = {\n  pieChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{b}<br> {c} ({d}%)\"\n    },\n\n    series: [\n      {\n        name: '',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '55%'],\n        data: [],\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }\n    ]\n  },\n  lineChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    grid: {\n      left: '3%',\n      right: '3%',\n      bottom: '5%',\n      containLabel: true\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    xAxis: {\n      type: 'category',\n      data: []\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [{\n      data: [],\n      type: 'line',\n      smooth: true\n    }]\n  },\n\n  ringPieChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      x: 'right',\n      selected:{'Bancor Network':false,'Gatecoin':false,'BitFlip':false,'Braziliex':false,'Cobinhood':false,'CoinExchange':false,'CoinFalcon':false,'Cryptomate':false,'Gatecoin':false,'IDEX':false,'LiteBit.eu':false,'Stocks.Exchange':false,'Tidex':false}\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{b}: {c} ({d}%)\"\n    },\n\n    series: [\n      {\n        name: '',\n        type: 'pie',\n        selectedMode: 'single',\n        radius: [0, '30%'],\n        center:['50%','50%'],\n        label: {\n          normal: {\n            position: 'inner'\n          }\n        },\n        labelLine: {\n          normal: {\n            show: false\n          }\n        },\n        data: []\n      },\n      {\n        name: '',\n        type: 'pie',\n        radius: ['40%', '55%'],\n        center:['50%','50%'],\n        data: []\n      }\n    ]\n  },\n  multiLineChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    legend: {\n      type: 'scroll',\n      data:[]\n    },\n    grid: {\n      left: '3%',\n      right: '3%',\n      bottom: '5%',\n      containLabel: true\n    },\n    tooltip: {\n      trigger: 'axis'\n     // position:function(p){   //其中p为当前鼠标的位置\n     //   return [p[0] + 10, p[1] - 10];\n    //  }\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: []\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: []\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/chart.config.js","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = 1152\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1153\n// module chunks = 2 3 4","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1183\n// module chunks = 2 3 4","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1184\n// module chunks = 2 3 4","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1185\n// module chunks = 2 3 4","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1186\n// module chunks = 2 3 4","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1187\n// module chunks = 2 3 4","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1188\n// module chunks = 2 3 4","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1189\n// module chunks = 2 3 4","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1190\n// module chunks = 2 3 4","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1191\n// module chunks = 2 3 4","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1192\n// module chunks = 2 3 4","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1193\n// module chunks = 2 3 4","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1194\n// module chunks = 2 3 4","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1195\n// module chunks = 2 3 4","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1196\n// module chunks = 2 3 4","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1197\n// module chunks = 2 3 4","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1198\n// module chunks = 2 3 4","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1199\n// module chunks = 2 3 4","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1200\n// module chunks = 2 3 4","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1201\n// module chunks = 2 3 4","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1202\n// module chunks = 2 3 4","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1203\n// module chunks = 2 3 4","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1204\n// module chunks = 2 3 4","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1205\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1206\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1207\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1208\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1209\n// module chunks = 2 3 4","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1210\n// module chunks = 2 3 4","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1211\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1212\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1213\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1214\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1215\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1216\n// module chunks = 2 3 4","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1217\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1218\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1219\n// module chunks = 2 3 4","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/IncrementalDisplayable.js\n// module id = 1220\n// module chunks = 2 3 4","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1221\n// module chunks = 2 3 4","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1222\n// module chunks = 2 3 4","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1223\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1224\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1225\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1226\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataStack.js\n// module id = 1227\n// module chunks = 2 3 4","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/dataFormat.js\n// module id = 1228\n// module chunks = 2 3 4","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1229\n// module chunks = 2 3 4","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1230\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/aria.js\n// module id = 1231\n// module chunks = 2 3 4","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1232\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1233\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  this._visualHandlers = visualHandlers.slice();\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.canProgressiveRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `canProgressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var canProgressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    canProgressiveRender: canProgressiveRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each([this._dataProcessorHandlers, this._visualHandlers], function (stageHandlers) {\n    each(stageHandlers, function (handler) {\n      var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n      handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n      handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n    }, this);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/stream/Scheduler.js\n// module id = 1234\n// module chunks = 2 3 4","var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/theme/light.js\n// module id = 1235\n// module chunks = 2 3 4","var contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/theme/dark.js\n// module id = 1236\n// module chunks = 2 3 4","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1237\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1238\n// module chunks = 2 3 4","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1239\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1240\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n      seriesModels.push(seriesModel);\n    }\n  });\n  var barWidthAndOffset = calBarWidthAndOffset(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = baseAxis.onZero || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barGrid.js\n// module id = 1241\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1242\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1243\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1244\n// module chunks = 2 3 4","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1245\n// module chunks = 2 3 4","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1246\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1247\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1248\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1249\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1250\n// module chunks = 2 3 4","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1251\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1252\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1253\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1254\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1255\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 1256\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = 1257\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = 1258\n// module chunks = 2 3 4","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 1259\n// module chunks = 2 3 4","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 1260\n// module chunks = 2 3 4","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 1261\n// module chunks = 2 3 4","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = 1262\n// module chunks = 2 3 4","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = 1263\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 1264\n// module chunks = 2 3 4","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = 1265\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = 1266\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 1267\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1268\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1269\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1270\n// module chunks = 2 3 4","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1271\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = 1272\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = 1273\n// module chunks = 2 3 4","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = 1274\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1275\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1276\n// module chunks = 2 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1277\n// module chunks = 2 4","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1350\n// module chunks = 2 4","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1351\n// module chunks = 2 4","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1352\n// module chunks = 2 4","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1353\n// module chunks = 2 4","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1354\n// module chunks = 2 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1355\n// module chunks = 2 4","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1356\n// module chunks = 2 4","/** @license\n *\n *     Colour Palette Generator script.\n *     Copyright (c) 2014 Google Inc.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n *     not use this file except in compliance with the License.  You may\n *     obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *     implied.  See the License for the specific language governing\n *     permissions and limitations under the License.\n *\n * Furthermore, ColorBrewer colour schemes are covered by the following:\n *\n *     Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and\n *                        The Pennsylvania State University.\n *\n *     Licensed under the Apache License, Version 2.0 (the \"License\"); you may\n *     not use this file except in compliance with the License. You may obtain\n *     a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *     Unless required by applicable law or agreed to in writing, software\n *     distributed under the License is distributed on an \"AS IS\" BASIS,\n *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n *     implied. See the License for the specific language governing\n *     permissions and limitations under the License.\n *\n *     Redistribution and use in source and binary forms, with or without\n *     modification, are permitted provided that the following conditions are\n *     met:\n *\n *     1. Redistributions as source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *\n *     2. The end-user documentation included with the redistribution, if any,\n *     must include the following acknowledgment: \"This product includes color\n *     specifications and designs developed by Cynthia Brewer\n *     (http://colorbrewer.org/).\" Alternately, this acknowledgment may appear\n *     in the software itself, if and wherever such third-party\n *     acknowledgments normally appear.\n *\n *     4. The name \"ColorBrewer\" must not be used to endorse or promote products\n *     derived from this software without prior written permission. For written\n *     permission, please contact Cynthia Brewer at cbrewer@psu.edu.\n *\n *     5. Products derived from this software may not be called \"ColorBrewer\",\n *     nor may \"ColorBrewer\" appear in their name, without prior written\n *     permission of Cynthia Brewer.\n *\n * Furthermore, Solarized colour schemes are covered by the following:\n *\n *     Copyright (c) 2011 Ethan Schoonover\n *\n *     Permission is hereby granted, free of charge, to any person obtaining\n *     a copy of this software and associated documentation files (the\n *     \"Software\"), to deal in the Software without restriction, including\n *     without limitation the rights to use, copy, modify, merge, publish,\n *     distribute, sublicense, and/or sell copies of the Software, and to\n *     permit persons to whom the Software is furnished to do so, subject to\n *     the following conditions:\n *\n *     The above copyright notice and this permission notice shall be included\n *     in all copies or substantial portions of the Software.\n *\n *     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n *     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n *     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n *     LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n *     OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n *     WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n'use strict';\n\nvar palette = (function() {\n\n  var proto = Array.prototype;\n  var slice = function(arr, opt_begin, opt_end) {\n    return proto.slice.apply(arr, proto.slice.call(arguments, 1));\n  };\n\n  var extend = function(arr, arr2) {\n    return proto.push.apply(arr, arr2);\n  };\n\n  var function_type = typeof function() {};\n\n  var INF = 1000000000;  // As far as we're concerned, that's infinity. ;)\n\n\n  /**\n   * Generate a colour palette from given scheme.\n   *\n   * If scheme argument is not a function it is passed to palettes.listSchemes\n   * function (along with the number argument).  This may result in an array\n   * of more than one available scheme.  If that is the case, scheme at\n   * opt_index position is taken.\n   *\n   * This allows using different palettes for different data without having to\n   * name the schemes specifically, for example:\n   *\n   *     palette_for_foo = palette('sequential', 10, 0);\n   *     palette_for_bar = palette('sequential', 10, 1);\n   *     palette_for_baz = palette('sequential', 10, 2);\n   *\n   * @param {!palette.SchemeType|string|palette.Palette} scheme Scheme to\n   *     generate palette for.  Either a function constructed with\n   *     palette.Scheme object, or anything that palette.listSchemes accepts\n   *     as name argument.\n   * @param {number} number Number of colours to return.  If negative, absolute\n   *     value is taken and colours will be returned in reverse order.\n   * @param {number=} opt_index If scheme is a name of a group or an array and\n   *     results in more than one scheme, index of the scheme to use.  The\n   *     index wraps around.\n   * @param {...*} varargs Additional arguments to pass to palette or colour\n   *     generator (if the chosen scheme uses those).\n   * @return {Array<string>} Array of abs(number) 'RRGGBB' strings or null if\n   *     no matching scheme was found.\n   */\n  var palette = function(scheme, number, opt_index, varargs) {\n    number |= 0;\n    if (number == 0) {\n      return [];\n    }\n\n    if (typeof scheme !== function_type) {\n      var arr = palette.listSchemes(\n          /** @type {string|palette.Palette} */ (scheme), number);\n      if (!arr.length) {\n        return null;\n      }\n      scheme = arr[(opt_index || 0) % arr.length];\n    }\n\n    var args = slice(arguments, 2);\n    args[0] = number;\n    return scheme.apply(scheme, args);\n  };\n\n\n  /**\n   * Returns a callable colour scheme object.\n   *\n   * Just after being created, the scheme has no colour palettes and no way of\n   * generating any, thus generate method will return null.  To turn scheme\n   * into a useful object, addPalette, addPalettes or setColorFunction methods\n   * need to be used.\n   *\n   * To generate a colour palette with given number colours using function\n   * returned by this method, just call it with desired number of colours.\n   *\n   * Since this function *returns* a callable object, it must *not* be used\n   * with the new operator.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>=} opt_groups A group name or list of\n   *     groups the scheme should be categorised under.  Three typical groups\n   *     to use are 'qualitative', 'sequential' and 'diverging', but any\n   *     groups may be created.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme = function(name, opt_groups) {\n    /**\n     * A map from a number to a colour palettes with given number of colours.\n     * @type {!Object<number, palette.Palette>}\n     */\n    var palettes = {};\n\n    /**\n     * The biggest palette in palettes map.\n     * @type {number}\n     */\n    var palettes_max = 0;\n\n    /**\n     * The smallest palette in palettes map.\n     * @type {number}\n     */\n    var palettes_min = INF;\n\n    var makeGenerator = function() {\n      if (arguments.length <= 1) {\n        return self.color_func.bind(self);\n      } else {\n        var args = slice(arguments);\n        return function(x) {\n          args[0] = x;\n          return self.color_func.apply(self, args);\n        };\n      }\n    };\n\n    /**\n     * Generate a colour palette from the scheme.\n     *\n     * If there was a palette added with addPalette (or addPalettes) with\n     * enough colours, that palette will be used.  Otherwise, if colour\n     * function has been set using setColorFunction method, that function will\n     * be used to generate the palette.  Otherwise null is returned.\n     *\n     * @param {number} number Number of colours to return.  If negative,\n     *     absolute value is taken and colours will be returned in reverse\n     *     order.\n     * @param {...*} varargs Additional arguments to pass to palette or colour\n     *     generator (if the chosen scheme uses those).\n     */\n    var self = function(number, varargs) {\n      number |= 0;\n      if (!number) {\n        return [];\n      }\n\n      var _number = number;\n      number = Math.abs(number);\n\n      if (number <= palettes_max) {\n        for (var i = Math.max(number, palettes_min); !(i in palettes); ++i) {\n          /* nop */\n        }\n        var colors = palettes[i];\n        if (i > number) {\n          var take_head =\n              'shrinking_takes_head' in colors ?\n              colors.shrinking_takes_head : self.shrinking_takes_head;\n          if (take_head) {\n            colors = colors.slice(0, number);\n            i = number;\n          } else {\n            return palette.generate(\n                function(x) { return colors[Math.round(x)]; },\n                _number, 0, colors.length - 1);\n          }\n        }\n        colors = colors.slice();\n        if (_number < 0) {\n          colors.reverse();\n        }\n        return colors;\n\n      } else if (self.color_func) {\n        return palette.generate(makeGenerator.apply(self, arguments),\n                                _number, 0, 1, self.color_func_cyclic);\n\n      } else {\n        return null;\n      }\n    };\n\n    /**\n     * The name of the palette.\n     * @type {string}\n     */\n    self.scheme_name = name;\n\n    /**\n     * A list of groups the palette belongs to.\n     * @type {!Array<string>}\n     */\n    self.groups = opt_groups ?\n      typeof opt_groups === 'string' ? [opt_groups] : opt_groups : [];\n\n    /**\n     * The biggest palette this scheme can generate.\n     * @type {number}\n     */\n    self.max = 0;\n\n    /**\n     * The biggest palette this scheme can generate that is colour-blind\n     * friendly.\n     * @type {number}\n     */\n    self.cbf_max = INF;\n\n\n    /**\n     * Adds a colour palette to the colour scheme.\n     *\n     * @param {palette.Palette} palette An array of 'RRGGBB' strings\n     *     representing the palette to add.\n     * @param {boolean=} opt_is_cbf Whether the palette is colourblind friendly.\n     */\n    self.addPalette = function(palette, opt_is_cbf) {\n      var len = palette.length;\n      if (len) {\n        palettes[len] = palette;\n        palettes_min = Math.min(palettes_min, len);\n        palettes_max = Math.max(palettes_max, len);\n        self.max = Math.max(self.max, len);\n        if (!opt_is_cbf && len != 1) {\n          self.cbf_max = Math.min(self.cbf_max, len - 1);\n        }\n      }\n    };\n\n    /**\n     * Adds number of colour palettes to the colour scheme.\n     *\n     * @param {palette.PalettesList} palettes A map or an array of colour\n     *     palettes to add.  If map, i.e.  object, is used, properties should\n     *     use integer property names.\n     * @param {number=} opt_max Size of the biggest palette in palettes set.\n     *     If not set, palettes must have a length property which will be used.\n     * @param {number=} opt_cbf_max Size of the biggest palette which is still\n     *     colourblind friendly.  1 by default.\n     */\n    self.addPalettes = function(palettes, opt_max, opt_cbf_max) {\n      opt_max = opt_max || palettes.length;\n      for (var i = 0; i < opt_max; ++i) {\n        if (i in palettes) {\n          self.addPalette(palettes[i], true);\n        }\n      }\n      self.cbf_max = Math.min(self.cbf_max, opt_cbf_max || 1);\n    };\n\n    /**\n     * Enable shrinking palettes taking head of the list of colours.\n     *\n     * When user requests n-colour palette but the smallest palette added with\n     * addPalette (or addPalettes) is m-colour one (where n < m), n colours\n     * across the palette will be returned.  For example:\n     *     var ex = palette.Scheme('ex');\n     *     ex.addPalette(['000000', 'bcbcbc', 'ffffff']);\n     *     var pal = ex(2);\n     *     // pal == ['000000', 'ffffff']\n     *\n     * This works for palettes where the distance between colours is\n     * correlated to distance in the palette array, which is true in gradients\n     * such as the one above.\n     *\n     * To turn this feature off shrinkByTakingHead can be set to true either\n     * for all palettes in the scheme (if opt_idx is not given) or for palette\n     * with given number of colours only.  In general, setting the option for\n     * given palette overwrites whatever has been set for the scheme.  The\n     * default, as described above, is false.\n     *\n     * Alternatively, the feature can be enabled by setting shrinking_takes_head\n     * property for the palette Array or the scheme object.\n     *\n     * For example, all of the below give equivalent results:\n     *     var pal = ['ff0000', '00ff00', '0000ff'];\n     *\n     *     var ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     ex.shrinkByTakingHead(true);      // ex(2) == ['ff0000', '00ff00']\n     *\n     *     ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     ex.shrinkByTakingHead(true, 3);   // ex(2) == ['ff0000', '00ff00']\n     *\n     *     ex = palette.Scheme('ex');\n     *     ex.addPalette(pal);\n     *     ex.addPalette(pal);               // ex(2) == ['ff0000', '0000ff']\n     *     pal.shrinking_takes_head = true;  // ex(2) == ['ff0000', '00ff00']\n     *\n     * @param {boolean} enabled Whether to enable or disable the “shrinking\n     *     takes head” feature.  It is disabled by default.\n     * @param {number=} opt_idx If given, the “shrinking takes head” option\n     *     for palette with given number of colours is set.  If such palette\n     *     does not exist, nothing happens.\n     */\n    self.shrinkByTakingHead = function(enabled, opt_idx) {\n      if (opt_idx !== void(0)) {\n        if (opt_idx in palettes) {\n          palettes[opt_idx].shrinking_takes_head = !!enabled;\n        }\n      } else {\n        self.shrinking_takes_head = !!enabled;\n      }\n    };\n\n    /**\n     * Sets a colour generation function of the colour scheme.\n     *\n     * The function must accept a singe number argument whose value can be from\n     * 0.0 to 1.0, and return a colour as an 'RRGGBB' string.  This function\n     * will be used when generating palettes, i.e. if 11-colour palette is\n     * requested, this function will be called with arguments 0.0, 0.1, …, 1.0.\n     *\n     * If the palette generated by the function is colourblind friendly,\n     * opt_is_cbf should be set to true.\n     *\n     * In some cases, it is not desirable to reach 1.0 when generating\n     * a palette.  This happens for hue-rainbows where the 0–1 range corresponds\n     * to a 0°–360° range in hues, and since hue at 0° is the same as at 360°,\n     * it's desired to stop short the end of the range when generating\n     * a palette.  To accomplish this, opt_cyclic should be set to true.\n     *\n     * @param {palette.ColorFunction} func A colour generator function.\n     * @param {boolean=} opt_is_cbf Whether palette generate with the function\n     *     is colour-blind friendly.\n     * @param {boolean=} opt_cyclic Whether colour at 0.0 is the same as the\n     *     one at 1.0.\n     */\n    self.setColorFunction = function(func, opt_is_cbf, opt_cyclic) {\n      self.color_func = func;\n      self.color_func_cyclic = !!opt_cyclic;\n      self.max = INF;\n      if (!opt_is_cbf && self.cbf_max === INF) {\n        self.cbf_max = 1;\n      }\n    };\n\n    self.color = function(x, varargs) {\n      if (self.color_func) {\n        return self.color_func.apply(this, arguments);\n      } else {\n        return null;\n      }\n    };\n\n    return self;\n  };\n\n\n  /**\n   * Creates a new palette.Scheme and initialises it by calling addPalettes\n   * method with the rest of the arguments.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>} groups A group name or list of group\n   *     names the scheme belongs to.\n   * @param {!Object<number, palette.Palette>|!Array<palette.Palette>}\n   *     palettes A map or an array of colour palettes to add.  If map, i.e.\n   *     object, is used, properties should use integer property names.\n   * @param {number=} opt_max Size of the biggest palette in palettes set.\n   *     If not set, palettes must have a length property which will be used.\n   * @param {number=} opt_cbf_max Size of the biggest palette which is still\n   *     colourblind friendly.  1 by default.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme.fromPalettes = function(name, groups,\n                                         palettes, opt_max, opt_cbf_max) {\n    var scheme = palette.Scheme(name, groups);\n    scheme.addPalettes.apply(scheme, slice(arguments, 2));\n    return scheme;\n  };\n\n\n  /**\n   * Creates a new palette.Scheme and initialises it by calling\n   * setColorFunction method with the rest of the arguments.\n   *\n   * @param {string} name Name of the scheme.\n   * @param {string|!Array<string>} groups A group name or list of group\n   *     names the scheme belongs to.\n   * @param {palette.ColorFunction} func A colour generator function.\n   * @param {boolean=} opt_is_cbf Whether palette generate with the function\n   *     is colour-blind friendly.\n   * @param {boolean=} opt_cyclic Whether colour at 0.0 is the same as the\n   *     one at 1.0.\n   * @return {!palette.SchemeType} A colour palette generator function, which\n   *     in addition has methods and properties like a regular object.  Think\n   *     of it as a callable object.\n   */\n  palette.Scheme.withColorFunction = function(name, groups,\n                                              func, opt_is_cbf, opt_cyclic) {\n    var scheme = palette.Scheme(name, groups);\n    scheme.setColorFunction.apply(scheme, slice(arguments, 2));\n    return scheme;\n  };\n\n\n  /**\n   * A map of registered schemes.  Maps a scheme or group name to a list of\n   * scheme objects.  Property name is either 'n-<name>' for single scheme\n   * names or 'g-<name>' for scheme group names.\n   *\n   * @type {!Object<string, !Array<!Object>>}\n   */\n  var registered_schemes = {};\n\n\n  /**\n   * Registers a new colour scheme.\n   *\n   * @param {!palette.SchemeType} scheme The scheme to add.\n   */\n  palette.register = function(scheme) {\n    registered_schemes['n-' + scheme.scheme_name] = [scheme];\n    scheme.groups.forEach(function(g) {\n      (registered_schemes['g-' + g] =\n       registered_schemes['g-' + g] || []).push(scheme);\n    });\n    (registered_schemes['g-all'] =\n       registered_schemes['g-all'] || []).push(scheme);\n  };\n\n\n  /**\n   * List all schemes that match given name and number of colours.\n   *\n   * name argument can be either a string or an array of strings.  In the\n   * former case, the function acts as if the argument was an array with name\n   * as a single argument (i.e. “palette.listSchemes('foo')” is exactly the same\n   * as “palette.listSchemes(['foo'])”).\n   *\n   * Each name can be either name of a palette (e.g. 'tol-sq' for Paul Tol's\n   * sequential palette), or a name of a group (e.g. 'sequential' for all\n   * sequential palettes).  Name can therefore map to a single scheme or\n   * several schemes.\n   *\n   * Furthermore, name can be suffixed with '-cbf' to indicate that only\n   * schemes that are colourblind friendly should be returned.  For example,\n   * 'rainbow' returns a HSV rainbow scheme, but because it is not colourblind\n   * friendly, 'rainbow-cbf' returns no schemes.\n   *\n   * Some schemes may produce colourblind friendly palettes for some number of\n   * colours.  For example ColorBrewer's Dark2 scheme is colourblind friendly\n   * if no more than 3 colours are generated.  If opt_number is not specified,\n   * 'qualitative-cbf' will include 'cb-Dark2' but if opt_number is given as,\n   * say, 5 it won't.\n   *\n   * Name can also be 'all' which will return all registered schemes.\n   * Naturally, 'all-cbf' will return all colourblind friendly schemes.\n   *\n   * Schemes are added to the library using palette.register.  Schemes are\n   * created using palette.Scheme function.  By default, the following schemes\n   * are available:\n   *\n   *     Name            Description\n   *     --------------  -----------------------------------------------------\n   *     tol             Paul Tol's qualitative scheme, cbf, max 12 colours.\n   *     tol-dv          Paul Tol's diverging scheme, cbf.\n   *     tol-sq          Paul Tol's sequential scheme, cbf.\n   *     tol-rainbow     Paul Tol's qualitative scheme, cbf.\n   *\n   *     rainbow         A rainbow palette.\n   *\n   *     cb-YlGn         ColorBrewer sequential schemes.\n   *     cb-YlGnBu\n   *     cb-GnBu\n   *     cb-BuGn\n   *     cb-PuBuGn\n   *     cb-PuBu\n   *     cb-BuPu\n   *     cb-RdPu\n   *     cb-PuRd\n   *     cb-OrRd\n   *     cb-YlOrRd\n   *     cb-YlOrBr\n   *     cb-Purples\n   *     cb-Blues\n   *     cb-Greens\n   *     cb-Oranges\n   *     cb-Reds\n   *     cb-Greys\n   *\n   *     cb-PuOr         ColorBrewer diverging schemes.\n   *     cb-BrBG\n   *     cb-PRGn\n   *     cb-PiYG\n   *     cb-RdBu\n   *     cb-RdGy\n   *     cb-RdYlBu\n   *     cb-Spectral\n   *     cb-RdYlGn\n   *\n   *     cb-Accent       ColorBrewer qualitative schemes.\n   *     cb-Dark2\n   *     cb-Paired\n   *     cb-Pastel1\n   *     cb-Pastel2\n   *     cb-Set1\n   *     cb-Set2\n   *     cb-Set3\n   *\n   *     sol-base        Solarized base colours.\n   *     sol-accent      Solarized accent colours.\n   *\n   * The following groups are also available by default:\n   *\n   *     Name            Description\n   *     --------------  -----------------------------------------------------\n   *     all             All registered schemes.\n   *     sequential      All sequential schemes.\n   *     diverging       All diverging schemes.\n   *     qualitative     All qualitative schemes.\n   *     cb-sequential   All ColorBrewer sequential schemes.\n   *     cb-diverging    All ColorBrewer diverging schemes.\n   *     cb-qualitative  All ColorBrewer qualitative schemes.\n   *\n   * You can read more about Paul Tol's palettes at http://www.sron.nl/~pault/.\n   * You can read more about ColorBrewer at http://colorbrewer2.org.\n   *\n   * @param {string|!Array<string>} name A name of a colour scheme, of\n   *     a group of colour schemes, or an array of any of those.\n   * @param {number=} opt_number When requesting only colourblind friendly\n   *     schemes, number of colours the scheme must provide generating such\n   *     that the palette is still colourblind friendly.  2 by default.\n   * @return {!Array<!palette.SchemeType>} An array of colour scheme objects\n   *     matching the criteria.  Sorted by scheme name.\n   */\n  palette.listSchemes = function(name, opt_number) {\n    if (!opt_number) {\n      opt_number = 2;\n    } else if (opt_number < 0) {\n      opt_number = -opt_number;\n    }\n\n    var ret = [];\n    (typeof name === 'string' ? [name] : name).forEach(function(n) {\n      var cbf = n.substring(n.length - 4) === '-cbf';\n      if (cbf) {\n        n = n.substring(0, n.length - 4);\n      }\n      var schemes =\n          registered_schemes['g-' + n] ||\n          registered_schemes['n-' + n] ||\n          [];\n      for (var i = 0, scheme; (scheme = schemes[i]); ++i) {\n        if ((cbf ? scheme.cbf : scheme.max) >= opt_number) {\n          ret.push(scheme);\n        }\n      }\n    });\n\n    ret.sort(function(a, b) {\n      return a.scheme_name >= b.scheme_name ?\n        a.scheme_name > b.scheme_name ? 1 : 0 : -1;\n    });\n    return ret;\n  };\n\n\n  /**\n   * Generates a palette using given colour generating function.\n   *\n   * The color_func callback must accept a singe number argument whose value\n   * can vary from 0.0 to 1.0 (or in general from opt_start to opt_end), and\n   * return a colour as an 'RRGGBB' string.  This function will be used when\n   * generating palettes, i.e. if 11-colour palette is requested, this\n   * function will be called with arguments 0.0, 0.1, …, 1.0.\n   *\n   * In some cases, it is not desirable to reach 1.0 when generating\n   * a palette.  This happens for hue-rainbows where the 0–1 range corresponds\n   * to a 0°–360° range in hues, and since hue at 0° is the same as at 360°,\n   * it's desired to stop short the end of the range when generating\n   * a palette.  To accomplish this, opt_cyclic should be set to true.\n   *\n   * opt_start and opt_end may be used to change the range the colour\n   * generation function is called with.  opt_end may be less than opt_start\n   * which will case to traverse the range in reverse.  Another way to reverse\n   * the palette is requesting negative number of colours.  The two methods do\n   * not always lead to the same results (especially if opt_cyclic is set).\n   *\n   * @param {palette.ColorFunction} color_func A colours generating callback\n   *     function.\n   * @param {number} number Number of colours to generate in the palette.  If\n   *     number is negative, colours in the palette will be reversed.  If only\n   *     one colour is requested, colour at opt_start will be returned.\n   * @param {number=} opt_start Optional starting point for the palette\n   *     generation function.  Zero by default.\n   * @param {number=} opt_end Optional ending point for the palette generation\n   *     function.  One by default.\n   * @param {boolean=} opt_cyclic If true, function will assume colour at\n   *     point opt_start is the same as one at opt_end.\n   * @return {palette.Palette} An array of 'RRGGBB' colours.\n   */\n  palette.generate = function(color_func, number, opt_start, opt_end,\n                              opt_cyclic) {\n    if (Math.abs(number) < 1) {\n      return [];\n    }\n\n    opt_start = opt_start === void(0) ? 0 : opt_start;\n    opt_end = opt_end === void(0) ? 1 : opt_end;\n\n    if (Math.abs(number) < 2) {\n      return [color_func(opt_start)];\n    }\n\n    var i = Math.abs(number);\n    var x = opt_start;\n    var ret = [];\n    var step = (opt_end - opt_start) / (opt_cyclic ? i : (i - 1));\n\n    for (; --i >= 0; x += step) {\n      ret.push(color_func(x));\n    }\n    if (number < 0) {\n      ret.reverse();\n    }\n    return ret;\n  };\n\n\n  /**\n   * Clamps value to [0, 1] range.\n   * @param {number} v Number to limit value of.\n   * @return {number} If v is inside of [0, 1] range returns v, otherwise\n   *     returns 0 or 1 depending which side of the range v is closer to.\n   */\n  var clamp = function(v) {\n    return v > 0 ? (v < 1 ? v : 1) : 0;\n  };\n\n  /**\n   * Converts r, g, b triple into RRGGBB hex representation.\n   * @param {number} r Red value of the colour in the range [0, 1].\n   * @param {number} g Green value of the colour in the range [0, 1].\n   * @param {number} b Blue value of the colour in the range [0, 1].\n   * @return {string} A lower-case RRGGBB representation of the colour.\n   */\n  palette.rgbColor = function(r, g, b) {\n    return [r, g, b].map(function(v) {\n      v = Number(Math.round(clamp(v) * 255)).toString(16);\n      return v.length == 1 ? '0' + v : v;\n    }).join('');\n  };\n\n  /**\n   * Converts a linear r, g, b triple into RRGGBB hex representation.\n   * @param {number} r Linear red value of the colour in the range [0, 1].\n   * @param {number} g Linear green value of the colour in the range [0, 1].\n   * @param {number} b Linear blue value of the colour in the range [0, 1].\n   * @return {string} A lower-case RRGGBB representation of the colour.\n   */\n  palette.linearRgbColor = function(r, g, b) {\n    // http://www.brucelindbloom.com/index.html?Eqn_XYZ_to_RGB.html\n    return [r, g, b].map(function(v) {\n      v = clamp(v);\n      if (v <= 0.0031308) {\n        v = 12.92 * v;\n      } else {\n        v = 1.055 * Math.pow(v, 1 / 2.4) - 0.055;\n      }\n      v = Number(Math.round(v * 255)).toString(16);\n      return v.length == 1 ? '0' + v : v;\n    }).join('');\n  };\n\n  /**\n   * Converts an HSV colours to RRGGBB hex representation.\n   * @param {number} h Hue in the range [0, 1].\n   * @param {number=} opt_s Saturation in the range [0, 1].  One by default.\n   * @param {number=} opt_v Value in the range [0, 1].  One by default.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.hsvColor = function(h, opt_s, opt_v) {\n    h *= 6;\n    var s = opt_s === void(0) ? 1 : clamp(opt_s);\n    var v = opt_v === void(0) ? 1 : clamp(opt_v);\n    var x = v * (1 - s * Math.abs(h % 2 - 1));\n    var m = v * (1 - s);\n    switch (Math.floor(h) % 6) {\n    case 0: return palette.rgbColor(v, x, m);\n    case 1: return palette.rgbColor(x, v, m);\n    case 2: return palette.rgbColor(m, v, x);\n    case 3: return palette.rgbColor(m, x, v);\n    case 4: return palette.rgbColor(x, m, v);\n    default: return palette.rgbColor(v, m, x);\n    }\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'rainbow', 'qualitative', palette.hsvColor, false, true));\n\n  return palette;\n})();\n\n\n/** @typedef {function(number): string} */\npalette.ColorFunction;\n\n/** @typedef {!Array<string>} */\npalette.Palette;\n\n/** @typedef {!Object<number, palette.Palette>|!Array<palette.Palette>} */\npalette.PalettesList;\n\n/**\n * @typedef {\n *   function(number, ...?): Array<string>|\n *   {\n *     scheme_name: string,\n *     groups: !Array<string>,\n *     max: number,\n *     cbf_max: number,\n *     addPalette: function(!Array<string>, boolean=),\n *     addPalettes: function(palette.PalettesList, number=, number=),\n *     shrinkByTakingHead: function(boolean, number=),\n *     setColorFunction: function(palette.ColorFunction, boolean=, boolean=),\n *     color: function(number, ...?): ?string}}\n */\npalette.SchemeType;\n\n\n/* mpn65 palette start here. ************************************************/\n\n/* The ‘mpn65’ palette is designed for systems which show many graphs which\n   don’t have custom colour palettes chosen by humans or if number of necessary\n   colours isn’t know a priori. */\n\n(function() {\n  var scheme = palette.Scheme.fromPalettes('mpn65', 'qualitative', [[\n    'ff0029', '377eb8', '66a61e', '984ea3', '00d2d5', 'ff7f00', 'af8d00',\n    '7f80cd', 'b3e900', 'c42e60', 'a65628', 'f781bf', '8dd3c7', 'bebada',\n    'fb8072', '80b1d3', 'fdb462', 'fccde5', 'bc80bd', 'ffed6f', 'c4eaff',\n    'cf8c00', '1b9e77', 'd95f02', 'e7298a', 'e6ab02', 'a6761d', '0097ff',\n    '00d067', '000000', '252525', '525252', '737373', '969696', 'bdbdbd',\n    'f43600', '4ba93b', '5779bb', '927acc', '97ee3f', 'bf3947', '9f5b00',\n    'f48758', '8caed6', 'f2b94f', 'eff26e', 'e43872', 'd9b100', '9d7a00',\n    '698cff', 'd9d9d9', '00d27e', 'd06800', '009f82', 'c49200', 'cbe8ff',\n    'fecddf', 'c27eb6', '8cd2ce', 'c4b8d9', 'f883b0', 'a49100', 'f48800',\n    '27d0df', 'a04a9b'\n  ]]);\n  scheme.shrinkByTakingHead(true);\n  palette.register(scheme);\n})();\n\n/* Paul Tol's schemes start here. *******************************************/\n/* See http://www.sron.nl/~pault/ */\n\n(function() {\n  var rgb = palette.rgbColor;\n\n  /**\n   * Calculates value of a polynomial at given point.\n   * For example, poly(x, 1, 2, 3) calculates value of “1 + 2*x + 3*X²”.\n   * @param {number} x Value to calculate polynomial for.\n   * @param {...number} varargs Coefficients of the polynomial specified in\n   *     the order of rising powers of x including constant as the first\n   *     variable argument.\n   */\n  var poly = function(x, varargs) {\n    var i = arguments.length - 1, n = arguments[i];\n    while (i > 1) {\n      n = n * x + arguments[--i];\n    }\n    return n;\n  };\n\n  /**\n   * Calculate approximate value of error function with maximum error of 0.0005.\n   * See <https://en.wikipedia.org/wiki/Error_function>.\n   * @param {number} x Argument of the error function.\n   * @return {number} Value of error function for x.\n   */\n  var erf = function(x) {\n    // https://en.wikipedia.org/wiki/Error_function#Approximation_with_elementary_functions\n    // This produces a maximum error of 0.0005 which is more then we need.  In\n    // the worst case, that error is multiplied by four and then divided by two\n    // before being multiplied by 255, so in the end, the error is multiplied by\n    // 510 which produces 0.255 which is less than a single colour step.\n    var y = poly(Math.abs(x), 1, 0.278393, 0.230389, 0.000972, 0.078108);\n    y *= y; // y^2\n    y *= y; // y^4\n    y = 1 - 1 / y;\n    return x < 0 ? -y : y;\n  };\n\n  palette.register(palette.Scheme.fromPalettes('tol', 'qualitative', [\n    ['4477aa'],\n    ['4477aa', 'cc6677'],\n    ['4477aa', 'ddcc77', 'cc6677'],\n    ['4477aa', '117733', 'ddcc77', 'cc6677'],\n    ['332288', '88ccee', '117733', 'ddcc77', 'cc6677'],\n    ['332288', '88ccee', '117733', 'ddcc77', 'cc6677', 'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', 'ddcc77', 'cc6677', 'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', '999933', 'ddcc77', 'cc6677',\n     'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', '999933', 'ddcc77', 'cc6677',\n     '882255', 'aa4499'],\n    ['332288', '88ccee', '44aa99', '117733', '999933', 'ddcc77', '661100',\n     'cc6677', '882255', 'aa4499'],\n    ['332288', '6699cc', '88ccee', '44aa99', '117733', '999933', 'ddcc77',\n     '661100', 'cc6677', '882255', 'aa4499'],\n    ['332288', '6699cc', '88ccee', '44aa99', '117733', '999933', 'ddcc77',\n     '661100', 'cc6677', 'aa4466', '882255', 'aa4499']\n  ], 12, 12));\n\n  /**\n   * Calculates a colour along Paul Tol's sequential colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 7 and equation 1.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolSequentialColor = function(x) {\n    return rgb(1 - 0.392 * (1 + erf((x - 0.869) / 0.255)),\n               1.021 - 0.456 * (1 + erf((x - 0.527) / 0.376)),\n               1 - 0.493 * (1 + erf((x - 0.272) / 0.309)));\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'tol-sq', 'sequential', palette.tolSequentialColor, true));\n\n  /**\n   * Calculates a colour along Paul Tol's diverging colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 8 and equation 2.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolDivergingColor = function(x) {\n    var g = poly(x, 0.572, 1.524, -1.811) / poly(x, 1, -0.291, 0.1574);\n    return rgb(poly(x, 0.235, -2.13, 26.92, -65.5, 63.5, -22.36),\n               g * g,\n               1 / poly(x, 1.579, -4.03, 12.92, -31.4, 48.6, -23.36));\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'tol-dv', 'diverging', palette.tolDivergingColor, true));\n\n  /**\n   * Calculates a colour along Paul Tol's rainbow colours axis.\n   * See <http://www.sron.nl/~pault/colourschemes.pdf> figure 13 and equation 3.\n   * @param {number} x Position of the colour on the axis in the [0, 1] range.\n   * @return {string} An RRGGBB representation of the colour.\n   */\n  palette.tolRainbowColor = function(x) {\n    return rgb(poly(x, 0.472, -0.567, 4.05) / poly(x, 1, 8.72, -19.17, 14.1),\n               poly(x, 0.108932, -1.22635, 27.284, -98.577, 163.3, -131.395,\n                    40.634),\n               1 / poly(x, 1.97, 3.54, -68.5, 243, -297, 125));\n  };\n\n  palette.register(palette.Scheme.withColorFunction(\n    'tol-rainbow', 'qualitative', palette.tolRainbowColor, true));\n})();\n\n\n/* Solarized colour schemes start here. *************************************/\n/* See http://ethanschoonover.com/solarized */\n\n(function() {\n  /*\n   * Those are not really designed to be used in graphs, but we're keeping\n   * them here in case someone cares.\n   */\n  palette.register(palette.Scheme.fromPalettes('sol-base', 'sequential', [\n    ['002b36', '073642', '586e75', '657b83', '839496', '93a1a1', 'eee8d5',\n     'fdf6e3']\n  ], 1, 8));\n  palette.register(palette.Scheme.fromPalettes('sol-accent', 'qualitative', [\n    ['b58900', 'cb4b16', 'dc322f', 'd33682', '6c71c4', '268bd2', '2aa198',\n     '859900']\n  ]));\n})();\n\n\n/* ColorBrewer colour schemes start here. ***********************************/\n/* See http://colorbrewer2.org/ */\n\n(function() {\n  var schemes = {\n    YlGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['f7fcb9', 'addd8e', '31a354'],\n      4: ['ffffcc', 'c2e699', '78c679', '238443'],\n      5: ['ffffcc', 'c2e699', '78c679', '31a354', '006837'],\n      6: ['ffffcc', 'd9f0a3', 'addd8e', '78c679', '31a354', '006837'],\n      7: ['ffffcc', 'd9f0a3', 'addd8e', '78c679', '41ab5d', '238443',\n          '005a32'],\n      8: ['ffffe5', 'f7fcb9', 'd9f0a3', 'addd8e', '78c679', '41ab5d',\n          '238443', '005a32'],\n      9: ['ffffe5', 'f7fcb9', 'd9f0a3', 'addd8e', '78c679', '41ab5d',\n          '238443', '006837', '004529']\n    },\n    YlGnBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['edf8b1', '7fcdbb', '2c7fb8'],\n      4: ['ffffcc', 'a1dab4', '41b6c4', '225ea8'],\n      5: ['ffffcc', 'a1dab4', '41b6c4', '2c7fb8', '253494'],\n      6: ['ffffcc', 'c7e9b4', '7fcdbb', '41b6c4', '2c7fb8', '253494'],\n      7: ['ffffcc', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0', '225ea8',\n          '0c2c84'],\n      8: ['ffffd9', 'edf8b1', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0',\n          '225ea8', '0c2c84'],\n      9: ['ffffd9', 'edf8b1', 'c7e9b4', '7fcdbb', '41b6c4', '1d91c0',\n          '225ea8', '253494', '081d58']\n    },\n    GnBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e0f3db', 'a8ddb5', '43a2ca'],\n      4: ['f0f9e8', 'bae4bc', '7bccc4', '2b8cbe'],\n      5: ['f0f9e8', 'bae4bc', '7bccc4', '43a2ca', '0868ac'],\n      6: ['f0f9e8', 'ccebc5', 'a8ddb5', '7bccc4', '43a2ca', '0868ac'],\n      7: ['f0f9e8', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3', '2b8cbe',\n          '08589e'],\n      8: ['f7fcf0', 'e0f3db', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3',\n          '2b8cbe', '08589e'],\n      9: ['f7fcf0', 'e0f3db', 'ccebc5', 'a8ddb5', '7bccc4', '4eb3d3',\n          '2b8cbe', '0868ac', '084081']\n    },\n    BuGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e5f5f9', '99d8c9', '2ca25f'],\n      4: ['edf8fb', 'b2e2e2', '66c2a4', '238b45'],\n      5: ['edf8fb', 'b2e2e2', '66c2a4', '2ca25f', '006d2c'],\n      6: ['edf8fb', 'ccece6', '99d8c9', '66c2a4', '2ca25f', '006d2c'],\n      7: ['edf8fb', 'ccece6', '99d8c9', '66c2a4', '41ae76', '238b45',\n          '005824'],\n      8: ['f7fcfd', 'e5f5f9', 'ccece6', '99d8c9', '66c2a4', '41ae76',\n          '238b45', '005824'],\n      9: ['f7fcfd', 'e5f5f9', 'ccece6', '99d8c9', '66c2a4', '41ae76',\n          '238b45', '006d2c', '00441b']\n    },\n    PuBuGn: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ece2f0', 'a6bddb', '1c9099'],\n      4: ['f6eff7', 'bdc9e1', '67a9cf', '02818a'],\n      5: ['f6eff7', 'bdc9e1', '67a9cf', '1c9099', '016c59'],\n      6: ['f6eff7', 'd0d1e6', 'a6bddb', '67a9cf', '1c9099', '016c59'],\n      7: ['f6eff7', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0', '02818a',\n          '016450'],\n      8: ['fff7fb', 'ece2f0', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0',\n          '02818a', '016450'],\n      9: ['fff7fb', 'ece2f0', 'd0d1e6', 'a6bddb', '67a9cf', '3690c0',\n          '02818a', '016c59', '014636']\n    },\n    PuBu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ece7f2', 'a6bddb', '2b8cbe'],\n      4: ['f1eef6', 'bdc9e1', '74a9cf', '0570b0'],\n      5: ['f1eef6', 'bdc9e1', '74a9cf', '2b8cbe', '045a8d'],\n      6: ['f1eef6', 'd0d1e6', 'a6bddb', '74a9cf', '2b8cbe', '045a8d'],\n      7: ['f1eef6', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0', '0570b0',\n          '034e7b'],\n      8: ['fff7fb', 'ece7f2', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0',\n          '0570b0', '034e7b'],\n      9: ['fff7fb', 'ece7f2', 'd0d1e6', 'a6bddb', '74a9cf', '3690c0',\n          '0570b0', '045a8d', '023858']\n    },\n    BuPu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e0ecf4', '9ebcda', '8856a7'],\n      4: ['edf8fb', 'b3cde3', '8c96c6', '88419d'],\n      5: ['edf8fb', 'b3cde3', '8c96c6', '8856a7', '810f7c'],\n      6: ['edf8fb', 'bfd3e6', '9ebcda', '8c96c6', '8856a7', '810f7c'],\n      7: ['edf8fb', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1', '88419d',\n          '6e016b'],\n      8: ['f7fcfd', 'e0ecf4', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1',\n          '88419d', '6e016b'],\n      9: ['f7fcfd', 'e0ecf4', 'bfd3e6', '9ebcda', '8c96c6', '8c6bb1',\n          '88419d', '810f7c', '4d004b']\n    },\n    RdPu: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fde0dd', 'fa9fb5', 'c51b8a'],\n      4: ['feebe2', 'fbb4b9', 'f768a1', 'ae017e'],\n      5: ['feebe2', 'fbb4b9', 'f768a1', 'c51b8a', '7a0177'],\n      6: ['feebe2', 'fcc5c0', 'fa9fb5', 'f768a1', 'c51b8a', '7a0177'],\n      7: ['feebe2', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497', 'ae017e',\n          '7a0177'],\n      8: ['fff7f3', 'fde0dd', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497',\n          'ae017e', '7a0177'],\n      9: ['fff7f3', 'fde0dd', 'fcc5c0', 'fa9fb5', 'f768a1', 'dd3497',\n          'ae017e', '7a0177', '49006a']\n    },\n    PuRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e7e1ef', 'c994c7', 'dd1c77'],\n      4: ['f1eef6', 'd7b5d8', 'df65b0', 'ce1256'],\n      5: ['f1eef6', 'd7b5d8', 'df65b0', 'dd1c77', '980043'],\n      6: ['f1eef6', 'd4b9da', 'c994c7', 'df65b0', 'dd1c77', '980043'],\n      7: ['f1eef6', 'd4b9da', 'c994c7', 'df65b0', 'e7298a', 'ce1256',\n          '91003f'],\n      8: ['f7f4f9', 'e7e1ef', 'd4b9da', 'c994c7', 'df65b0', 'e7298a',\n          'ce1256', '91003f'],\n      9: ['f7f4f9', 'e7e1ef', 'd4b9da', 'c994c7', 'df65b0', 'e7298a',\n          'ce1256', '980043', '67001f']\n    },\n    OrRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee8c8', 'fdbb84', 'e34a33'],\n      4: ['fef0d9', 'fdcc8a', 'fc8d59', 'd7301f'],\n      5: ['fef0d9', 'fdcc8a', 'fc8d59', 'e34a33', 'b30000'],\n      6: ['fef0d9', 'fdd49e', 'fdbb84', 'fc8d59', 'e34a33', 'b30000'],\n      7: ['fef0d9', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548', 'd7301f',\n          '990000'],\n      8: ['fff7ec', 'fee8c8', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548',\n          'd7301f', '990000'],\n      9: ['fff7ec', 'fee8c8', 'fdd49e', 'fdbb84', 'fc8d59', 'ef6548',\n          'd7301f', 'b30000', '7f0000']\n    },\n    YlOrRd: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['ffeda0', 'feb24c', 'f03b20'],\n      4: ['ffffb2', 'fecc5c', 'fd8d3c', 'e31a1c'],\n      5: ['ffffb2', 'fecc5c', 'fd8d3c', 'f03b20', 'bd0026'],\n      6: ['ffffb2', 'fed976', 'feb24c', 'fd8d3c', 'f03b20', 'bd0026'],\n      7: ['ffffb2', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a', 'e31a1c',\n          'b10026'],\n      8: ['ffffcc', 'ffeda0', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a',\n          'e31a1c', 'b10026'],\n      9: ['ffffcc', 'ffeda0', 'fed976', 'feb24c', 'fd8d3c', 'fc4e2a',\n          'e31a1c', 'bd0026', '800026']\n    },\n    YlOrBr: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fff7bc', 'fec44f', 'd95f0e'],\n      4: ['ffffd4', 'fed98e', 'fe9929', 'cc4c02'],\n      5: ['ffffd4', 'fed98e', 'fe9929', 'd95f0e', '993404'],\n      6: ['ffffd4', 'fee391', 'fec44f', 'fe9929', 'd95f0e', '993404'],\n      7: ['ffffd4', 'fee391', 'fec44f', 'fe9929', 'ec7014', 'cc4c02',\n          '8c2d04'],\n      8: ['ffffe5', 'fff7bc', 'fee391', 'fec44f', 'fe9929', 'ec7014',\n          'cc4c02', '8c2d04'],\n      9: ['ffffe5', 'fff7bc', 'fee391', 'fec44f', 'fe9929', 'ec7014',\n          'cc4c02', '993404', '662506']\n    },\n    Purples: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['efedf5', 'bcbddc', '756bb1'],\n      4: ['f2f0f7', 'cbc9e2', '9e9ac8', '6a51a3'],\n      5: ['f2f0f7', 'cbc9e2', '9e9ac8', '756bb1', '54278f'],\n      6: ['f2f0f7', 'dadaeb', 'bcbddc', '9e9ac8', '756bb1', '54278f'],\n      7: ['f2f0f7', 'dadaeb', 'bcbddc', '9e9ac8', '807dba', '6a51a3',\n          '4a1486'],\n      8: ['fcfbfd', 'efedf5', 'dadaeb', 'bcbddc', '9e9ac8', '807dba',\n          '6a51a3', '4a1486'],\n      9: ['fcfbfd', 'efedf5', 'dadaeb', 'bcbddc', '9e9ac8', '807dba',\n          '6a51a3', '54278f', '3f007d']\n    },\n    Blues: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['deebf7', '9ecae1', '3182bd'],\n      4: ['eff3ff', 'bdd7e7', '6baed6', '2171b5'],\n      5: ['eff3ff', 'bdd7e7', '6baed6', '3182bd', '08519c'],\n      6: ['eff3ff', 'c6dbef', '9ecae1', '6baed6', '3182bd', '08519c'],\n      7: ['eff3ff', 'c6dbef', '9ecae1', '6baed6', '4292c6', '2171b5',\n          '084594'],\n      8: ['f7fbff', 'deebf7', 'c6dbef', '9ecae1', '6baed6', '4292c6',\n          '2171b5', '084594'],\n      9: ['f7fbff', 'deebf7', 'c6dbef', '9ecae1', '6baed6', '4292c6',\n          '2171b5', '08519c', '08306b']\n    },\n    Greens: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['e5f5e0', 'a1d99b', '31a354'],\n      4: ['edf8e9', 'bae4b3', '74c476', '238b45'],\n      5: ['edf8e9', 'bae4b3', '74c476', '31a354', '006d2c'],\n      6: ['edf8e9', 'c7e9c0', 'a1d99b', '74c476', '31a354', '006d2c'],\n      7: ['edf8e9', 'c7e9c0', 'a1d99b', '74c476', '41ab5d', '238b45',\n          '005a32'],\n      8: ['f7fcf5', 'e5f5e0', 'c7e9c0', 'a1d99b', '74c476', '41ab5d',\n          '238b45', '005a32'],\n      9: ['f7fcf5', 'e5f5e0', 'c7e9c0', 'a1d99b', '74c476', '41ab5d',\n          '238b45', '006d2c', '00441b']\n    },\n    Oranges: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee6ce', 'fdae6b', 'e6550d'],\n      4: ['feedde', 'fdbe85', 'fd8d3c', 'd94701'],\n      5: ['feedde', 'fdbe85', 'fd8d3c', 'e6550d', 'a63603'],\n      6: ['feedde', 'fdd0a2', 'fdae6b', 'fd8d3c', 'e6550d', 'a63603'],\n      7: ['feedde', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913', 'd94801',\n          '8c2d04'],\n      8: ['fff5eb', 'fee6ce', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913',\n          'd94801', '8c2d04'],\n      9: ['fff5eb', 'fee6ce', 'fdd0a2', 'fdae6b', 'fd8d3c', 'f16913',\n          'd94801', 'a63603', '7f2704']\n    },\n    Reds: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['fee0d2', 'fc9272', 'de2d26'],\n      4: ['fee5d9', 'fcae91', 'fb6a4a', 'cb181d'],\n      5: ['fee5d9', 'fcae91', 'fb6a4a', 'de2d26', 'a50f15'],\n      6: ['fee5d9', 'fcbba1', 'fc9272', 'fb6a4a', 'de2d26', 'a50f15'],\n      7: ['fee5d9', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c', 'cb181d',\n          '99000d'],\n      8: ['fff5f0', 'fee0d2', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c',\n          'cb181d', '99000d'],\n      9: ['fff5f0', 'fee0d2', 'fcbba1', 'fc9272', 'fb6a4a', 'ef3b2c',\n          'cb181d', 'a50f15', '67000d']\n    },\n    Greys: {\n      type: 'sequential',\n      cbf: 42,\n      3: ['f0f0f0', 'bdbdbd', '636363'],\n      4: ['f7f7f7', 'cccccc', '969696', '525252'],\n      5: ['f7f7f7', 'cccccc', '969696', '636363', '252525'],\n      6: ['f7f7f7', 'd9d9d9', 'bdbdbd', '969696', '636363', '252525'],\n      7: ['f7f7f7', 'd9d9d9', 'bdbdbd', '969696', '737373', '525252',\n          '252525'],\n      8: ['ffffff', 'f0f0f0', 'd9d9d9', 'bdbdbd', '969696', '737373',\n          '525252', '252525'],\n      9: ['ffffff', 'f0f0f0', 'd9d9d9', 'bdbdbd', '969696', '737373',\n          '525252', '252525', '000000']\n    },\n    PuOr: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['f1a340', 'f7f7f7', '998ec3'],\n      4: ['e66101', 'fdb863', 'b2abd2', '5e3c99'],\n      5: ['e66101', 'fdb863', 'f7f7f7', 'b2abd2', '5e3c99'],\n      6: ['b35806', 'f1a340', 'fee0b6', 'd8daeb', '998ec3', '542788'],\n      7: ['b35806', 'f1a340', 'fee0b6', 'f7f7f7', 'd8daeb', '998ec3',\n          '542788'],\n      8: ['b35806', 'e08214', 'fdb863', 'fee0b6', 'd8daeb', 'b2abd2',\n          '8073ac', '542788'],\n      9: ['b35806', 'e08214', 'fdb863', 'fee0b6', 'f7f7f7', 'd8daeb',\n          'b2abd2', '8073ac', '542788'],\n      10: ['7f3b08', 'b35806', 'e08214', 'fdb863', 'fee0b6', 'd8daeb',\n           'b2abd2', '8073ac', '542788', '2d004b'],\n      11: ['7f3b08', 'b35806', 'e08214', 'fdb863', 'fee0b6', 'f7f7f7',\n           'd8daeb', 'b2abd2', '8073ac', '542788', '2d004b']\n    },\n    BrBG: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['d8b365', 'f5f5f5', '5ab4ac'],\n      4: ['a6611a', 'dfc27d', '80cdc1', '018571'],\n      5: ['a6611a', 'dfc27d', 'f5f5f5', '80cdc1', '018571'],\n      6: ['8c510a', 'd8b365', 'f6e8c3', 'c7eae5', '5ab4ac', '01665e'],\n      7: ['8c510a', 'd8b365', 'f6e8c3', 'f5f5f5', 'c7eae5', '5ab4ac',\n          '01665e'],\n      8: ['8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'c7eae5', '80cdc1',\n          '35978f', '01665e'],\n      9: ['8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'f5f5f5', 'c7eae5',\n          '80cdc1', '35978f', '01665e'],\n      10: ['543005', '8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'c7eae5',\n           '80cdc1', '35978f', '01665e', '003c30'],\n      11: ['543005', '8c510a', 'bf812d', 'dfc27d', 'f6e8c3', 'f5f5f5',\n           'c7eae5', '80cdc1', '35978f', '01665e', '003c30']\n    },\n    PRGn: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['af8dc3', 'f7f7f7', '7fbf7b'],\n      4: ['7b3294', 'c2a5cf', 'a6dba0', '008837'],\n      5: ['7b3294', 'c2a5cf', 'f7f7f7', 'a6dba0', '008837'],\n      6: ['762a83', 'af8dc3', 'e7d4e8', 'd9f0d3', '7fbf7b', '1b7837'],\n      7: ['762a83', 'af8dc3', 'e7d4e8', 'f7f7f7', 'd9f0d3', '7fbf7b',\n          '1b7837'],\n      8: ['762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'd9f0d3', 'a6dba0',\n          '5aae61', '1b7837'],\n      9: ['762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'f7f7f7', 'd9f0d3',\n          'a6dba0', '5aae61', '1b7837'],\n      10: ['40004b', '762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'd9f0d3',\n           'a6dba0', '5aae61', '1b7837', '00441b'],\n      11: ['40004b', '762a83', '9970ab', 'c2a5cf', 'e7d4e8', 'f7f7f7',\n           'd9f0d3', 'a6dba0', '5aae61', '1b7837', '00441b']\n    },\n    PiYG: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['e9a3c9', 'f7f7f7', 'a1d76a'],\n      4: ['d01c8b', 'f1b6da', 'b8e186', '4dac26'],\n      5: ['d01c8b', 'f1b6da', 'f7f7f7', 'b8e186', '4dac26'],\n      6: ['c51b7d', 'e9a3c9', 'fde0ef', 'e6f5d0', 'a1d76a', '4d9221'],\n      7: ['c51b7d', 'e9a3c9', 'fde0ef', 'f7f7f7', 'e6f5d0', 'a1d76a',\n          '4d9221'],\n      8: ['c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'e6f5d0', 'b8e186',\n          '7fbc41', '4d9221'],\n      9: ['c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'f7f7f7', 'e6f5d0',\n          'b8e186', '7fbc41', '4d9221'],\n      10: ['8e0152', 'c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'e6f5d0',\n           'b8e186', '7fbc41', '4d9221', '276419'],\n      11: ['8e0152', 'c51b7d', 'de77ae', 'f1b6da', 'fde0ef', 'f7f7f7',\n           'e6f5d0', 'b8e186', '7fbc41', '4d9221', '276419']\n    },\n    RdBu: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['ef8a62', 'f7f7f7', '67a9cf'],\n      4: ['ca0020', 'f4a582', '92c5de', '0571b0'],\n      5: ['ca0020', 'f4a582', 'f7f7f7', '92c5de', '0571b0'],\n      6: ['b2182b', 'ef8a62', 'fddbc7', 'd1e5f0', '67a9cf', '2166ac'],\n      7: ['b2182b', 'ef8a62', 'fddbc7', 'f7f7f7', 'd1e5f0', '67a9cf',\n          '2166ac'],\n      8: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'd1e5f0', '92c5de',\n          '4393c3', '2166ac'],\n      9: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'f7f7f7', 'd1e5f0',\n          '92c5de', '4393c3', '2166ac'],\n      10: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'd1e5f0',\n           '92c5de', '4393c3', '2166ac', '053061'],\n      11: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'f7f7f7',\n           'd1e5f0', '92c5de', '4393c3', '2166ac', '053061']\n    },\n    RdGy: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['ef8a62', 'ffffff', '999999'],\n      4: ['ca0020', 'f4a582', 'bababa', '404040'],\n      5: ['ca0020', 'f4a582', 'ffffff', 'bababa', '404040'],\n      6: ['b2182b', 'ef8a62', 'fddbc7', 'e0e0e0', '999999', '4d4d4d'],\n      7: ['b2182b', 'ef8a62', 'fddbc7', 'ffffff', 'e0e0e0', '999999',\n          '4d4d4d'],\n      8: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'e0e0e0', 'bababa',\n          '878787', '4d4d4d'],\n      9: ['b2182b', 'd6604d', 'f4a582', 'fddbc7', 'ffffff', 'e0e0e0',\n          'bababa', '878787', '4d4d4d'],\n      10: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'e0e0e0',\n           'bababa', '878787', '4d4d4d', '1a1a1a'],\n      11: ['67001f', 'b2182b', 'd6604d', 'f4a582', 'fddbc7', 'ffffff',\n           'e0e0e0', 'bababa', '878787', '4d4d4d', '1a1a1a']\n    },\n    RdYlBu: {\n      type: 'diverging',\n      cbf: 42,\n      3: ['fc8d59', 'ffffbf', '91bfdb'],\n      4: ['d7191c', 'fdae61', 'abd9e9', '2c7bb6'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'abd9e9', '2c7bb6'],\n      6: ['d73027', 'fc8d59', 'fee090', 'e0f3f8', '91bfdb', '4575b4'],\n      7: ['d73027', 'fc8d59', 'fee090', 'ffffbf', 'e0f3f8', '91bfdb',\n          '4575b4'],\n      8: ['d73027', 'f46d43', 'fdae61', 'fee090', 'e0f3f8', 'abd9e9',\n          '74add1', '4575b4'],\n      9: ['d73027', 'f46d43', 'fdae61', 'fee090', 'ffffbf', 'e0f3f8',\n          'abd9e9', '74add1', '4575b4'],\n      10: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee090', 'e0f3f8',\n           'abd9e9', '74add1', '4575b4', '313695'],\n      11: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee090', 'ffffbf',\n           'e0f3f8', 'abd9e9', '74add1', '4575b4', '313695']\n    },\n    Spectral: {\n      type: 'diverging',\n      cbf: 0,\n      3: ['fc8d59', 'ffffbf', '99d594'],\n      4: ['d7191c', 'fdae61', 'abdda4', '2b83ba'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'abdda4', '2b83ba'],\n      6: ['d53e4f', 'fc8d59', 'fee08b', 'e6f598', '99d594', '3288bd'],\n      7: ['d53e4f', 'fc8d59', 'fee08b', 'ffffbf', 'e6f598', '99d594',\n          '3288bd'],\n      8: ['d53e4f', 'f46d43', 'fdae61', 'fee08b', 'e6f598', 'abdda4',\n          '66c2a5', '3288bd'],\n      9: ['d53e4f', 'f46d43', 'fdae61', 'fee08b', 'ffffbf', 'e6f598',\n          'abdda4', '66c2a5', '3288bd'],\n      10: ['9e0142', 'd53e4f', 'f46d43', 'fdae61', 'fee08b', 'e6f598',\n           'abdda4', '66c2a5', '3288bd', '5e4fa2'],\n      11: ['9e0142', 'd53e4f', 'f46d43', 'fdae61', 'fee08b', 'ffffbf',\n           'e6f598', 'abdda4', '66c2a5', '3288bd', '5e4fa2']\n    },\n    RdYlGn: {\n      type: 'diverging',\n      cbf: 0,\n      3: ['fc8d59', 'ffffbf', '91cf60'],\n      4: ['d7191c', 'fdae61', 'a6d96a', '1a9641'],\n      5: ['d7191c', 'fdae61', 'ffffbf', 'a6d96a', '1a9641'],\n      6: ['d73027', 'fc8d59', 'fee08b', 'd9ef8b', '91cf60', '1a9850'],\n      7: ['d73027', 'fc8d59', 'fee08b', 'ffffbf', 'd9ef8b', '91cf60',\n          '1a9850'],\n      8: ['d73027', 'f46d43', 'fdae61', 'fee08b', 'd9ef8b', 'a6d96a',\n          '66bd63', '1a9850'],\n      9: ['d73027', 'f46d43', 'fdae61', 'fee08b', 'ffffbf', 'd9ef8b',\n          'a6d96a', '66bd63', '1a9850'],\n      10: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee08b', 'd9ef8b',\n           'a6d96a', '66bd63', '1a9850', '006837'],\n      11: ['a50026', 'd73027', 'f46d43', 'fdae61', 'fee08b', 'ffffbf',\n           'd9ef8b', 'a6d96a', '66bd63', '1a9850', '006837']\n    },\n    Accent: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['7fc97f', 'beaed4', 'fdc086'],\n      4: ['7fc97f', 'beaed4', 'fdc086', 'ffff99'],\n      5: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0'],\n      6: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f'],\n      7: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f',\n          'bf5b17'],\n      8: ['7fc97f', 'beaed4', 'fdc086', 'ffff99', '386cb0', 'f0027f',\n          'bf5b17', '666666']\n    },\n    Dark2: {\n      type: 'qualitative',\n      cbf: 3,\n      3: ['1b9e77', 'd95f02', '7570b3'],\n      4: ['1b9e77', 'd95f02', '7570b3', 'e7298a'],\n      5: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e'],\n      6: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02'],\n      7: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02',\n          'a6761d'],\n      8: ['1b9e77', 'd95f02', '7570b3', 'e7298a', '66a61e', 'e6ab02',\n          'a6761d', '666666']\n    },\n    Paired: {\n      type: 'qualitative',\n      cbf: 4,\n      3: ['a6cee3', '1f78b4', 'b2df8a'],\n      4: ['a6cee3', '1f78b4', 'b2df8a', '33a02c'],\n      5: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99'],\n      6: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c'],\n      7: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n          'fdbf6f'],\n      8: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n          'fdbf6f', 'ff7f00'],\n      9: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n          'fdbf6f', 'ff7f00', 'cab2d6'],\n      10: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n           'fdbf6f', 'ff7f00', 'cab2d6', '6a3d9a'],\n      11: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n           'fdbf6f', 'ff7f00', 'cab2d6', '6a3d9a', 'ffff99'],\n      12: ['a6cee3', '1f78b4', 'b2df8a', '33a02c', 'fb9a99', 'e31a1c',\n           'fdbf6f', 'ff7f00', 'cab2d6', '6a3d9a', 'ffff99', 'b15928']\n    },\n    Pastel1: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['fbb4ae', 'b3cde3', 'ccebc5'],\n      4: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4'],\n      5: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6'],\n      6: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc'],\n      7: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc',\n          'e5d8bd'],\n      8: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc',\n          'e5d8bd', 'fddaec'],\n      9: ['fbb4ae', 'b3cde3', 'ccebc5', 'decbe4', 'fed9a6', 'ffffcc',\n          'e5d8bd', 'fddaec', 'f2f2f2']\n    },\n    Pastel2: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['b3e2cd', 'fdcdac', 'cbd5e8'],\n      4: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4'],\n      5: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9'],\n      6: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae'],\n      7: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae',\n          'f1e2cc'],\n      8: ['b3e2cd', 'fdcdac', 'cbd5e8', 'f4cae4', 'e6f5c9', 'fff2ae',\n          'f1e2cc', 'cccccc']\n    },\n    Set1: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['e41a1c', '377eb8', '4daf4a'],\n      4: ['e41a1c', '377eb8', '4daf4a', '984ea3'],\n      5: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00'],\n      6: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33'],\n      7: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33',\n          'a65628'],\n      8: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33',\n          'a65628', 'f781bf'],\n      9: ['e41a1c', '377eb8', '4daf4a', '984ea3', 'ff7f00', 'ffff33',\n          'a65628', 'f781bf', '999999']\n    },\n    Set2: {\n      type: 'qualitative',\n      cbf: 3,\n      3: ['66c2a5', 'fc8d62', '8da0cb'],\n      4: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3'],\n      5: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854'],\n      6: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f'],\n      7: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f',\n          'e5c494'],\n      8: ['66c2a5', 'fc8d62', '8da0cb', 'e78ac3', 'a6d854', 'ffd92f',\n          'e5c494', 'b3b3b3']\n    },\n    Set3: {\n      type: 'qualitative',\n      cbf: 0,\n      3: ['8dd3c7', 'ffffb3', 'bebada'],\n      4: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072'],\n      5: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3'],\n      6: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462'],\n      7: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n          'b3de69'],\n      8: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n          'b3de69', 'fccde5'],\n      9: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n          'b3de69', 'fccde5', 'd9d9d9'],\n      10: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n           'b3de69', 'fccde5', 'd9d9d9', 'bc80bd'],\n      11: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n           'b3de69', 'fccde5', 'd9d9d9', 'bc80bd', 'ccebc5'],\n      12: ['8dd3c7', 'ffffb3', 'bebada', 'fb8072', '80b1d3', 'fdb462',\n           'b3de69', 'fccde5', 'd9d9d9', 'bc80bd', 'ccebc5', 'ffed6f']\n    }\n  };\n\n  for (var name in schemes) {\n    var scheme = schemes[name];\n    scheme = palette.Scheme.fromPalettes(\n      'cb-' + name, [scheme.type, 'cb-' + scheme.type], scheme, 12, scheme.cbf);\n    palette.register(scheme);\n  }\n})();\n\nif(typeof module === \"object\" && module.exports) {\n  module.exports = palette\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/google-palette/palette.js\n// module id = 1430\n// module chunks = 0 4","import React, { Children, Component, cloneElement, createElement } from 'react';\nimport ReactDOM, { findDOMNode } from 'react-dom';\n\nfunction warnOnce(msg) {\n  var hasWarned = false;\n  return function () {\n    if (!hasWarned) {\n      console.warn(msg);\n      hasWarned = true;\n    }\n  };\n}\n\n\nvar statelessFunctionalComponentSupplied = warnOnce('\\n>> Error, via react-flip-move <<\\n\\nYou provided a stateless functional component as a child to <FlipMove>. Unfortunately, SFCs aren\\'t supported, because Flip Move needs access to the backing instances via refs, and SFCs don\\'t have a public instance that holds that info.\\n\\nPlease wrap your components in a native element (eg. <div>), or a non-functional component.\\n');\n\nvar primitiveNodeSupplied = warnOnce('\\n>> Error, via react-flip-move <<\\n\\nYou provided a primitive (text or number) node as a child to <FlipMove>. Flip Move needs containers with unique keys to move children around.\\n\\nPlease wrap your value in a native element (eg. <span>), or a component.\\n');\n\nvar invalidTypeForTimingProp = function invalidTypeForTimingProp(args\n// prettier-ignore\n) {\n  return console.error('\\n>> Error, via react-flip-move <<\\n\\nThe prop you provided for \\'' + args.prop + '\\' is invalid. It needs to be a positive integer, or a string that can be resolved to a number. The value you provided is \\'' + args.value + '\\'.\\n\\nAs a result,  the default value for this parameter will be used, which is \\'' + args.defaultValue + '\\'.\\n');\n};\n\nvar invalidEnterLeavePreset = function invalidEnterLeavePreset(args\n// prettier-ignore\n) {\n  return console.error('\\n>> Error, via react-flip-move <<\\n\\nThe enter/leave preset you provided is invalid. We don\\'t currently have a \\'' + args.value + ' preset.\\'\\n\\nAcceptable values are ' + args.acceptableValues + '. The default value of \\'' + args.defaultValue + '\\' will be used.\\n');\n};\n\nvar parentNodePositionStatic = warnOnce('\\n>> Warning, via react-flip-move <<\\n\\nWhen using \"wrapperless\" mode (by supplying \\'typeName\\' of \\'null\\'), strange things happen when the direct parent has the default \"static\" position.\\n\\nFlipMove has added \\'position: relative\\' to this node, to ensure Flip Move animates correctly.\\n\\nTo avoid seeing this warning, simply apply a non-static position to that parent node.\\n');\n\nvar childIsDisabled = warnOnce('\\n>> Warning, via react-flip-move <<\\n\\nOne or more of Flip Move\\'s child elements have the html attribute \\'disabled\\' set to true.\\n\\nPlease note that this will cause animations to break in Internet Explorer 11 and below. Either remove the disabled attribute or set \\'animation\\' to false.\\n');\n\nvar enterPresets = {\n  elevator: {\n    from: { transform: 'scale(0)', opacity: '0' },\n    to: { transform: '', opacity: '' }\n  },\n  fade: {\n    from: { opacity: '0' },\n    to: { opacity: '' }\n  },\n  accordionVertical: {\n    from: { transform: 'scaleY(0)', transformOrigin: 'center top' },\n    to: { transform: '', transformOrigin: 'center top' }\n  },\n  accordionHorizontal: {\n    from: { transform: 'scaleX(0)', transformOrigin: 'left center' },\n    to: { transform: '', transformOrigin: 'left center' }\n  },\n  none: null\n};\n/**\n * React Flip Move | enterLeavePresets\n * (c) 2016-present Joshua Comeau\n *\n * This contains the master list of presets available for enter/leave animations,\n * along with the mapping between preset and styles.\n */\n\n\nvar leavePresets = {\n  elevator: {\n    from: { transform: 'scale(1)', opacity: '1' },\n    to: { transform: 'scale(0)', opacity: '0' }\n  },\n  fade: {\n    from: { opacity: '1' },\n    to: { opacity: '0' }\n  },\n  accordionVertical: {\n    from: { transform: 'scaleY(1)', transformOrigin: 'center top' },\n    to: { transform: 'scaleY(0)', transformOrigin: 'center top' }\n  },\n  accordionHorizontal: {\n    from: { transform: 'scaleX(1)', transformOrigin: 'left center' },\n    to: { transform: 'scaleX(0)', transformOrigin: 'left center' }\n  },\n  none: null\n};\n\n// For now, appearPresets will be identical to enterPresets.\n// Assigning a custom export in case we ever want to add appear-specific ones.\nvar appearPresets = enterPresets;\n\nvar defaultPreset = 'elevator';\nvar disablePreset = 'none';\n\nvar find = function find(predicate, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (predicate(arr[i], i, arr)) {\n      return arr[i];\n    }\n  }\n\n  return undefined;\n};\n\n\nvar every = function every(predicate, arr) {\n  for (var i = 0; i < arr.length; i++) {\n    if (!predicate(arr[i], i, arr)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// eslint-disable-next-line import/no-mutable-exports\nvar _isArray = function isArray(arr) {\n  _isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  };\n  return _isArray(arr);\n};\n\nvar isElementAnSFC = function isElementAnSFC(element) {\n  var isNativeDOMElement = typeof element.type === 'string';\n\n  if (isNativeDOMElement) {\n    return false;\n  }\n\n  return !element.type.prototype.isReactComponent;\n};\n\nfunction omit(obj) {\n  var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    if (attrs.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n\nfunction arraysEqual(a, b) {\n  var sameObject = a === b;\n  if (sameObject) {\n    return true;\n  }\n\n  var notBothArrays = !_isArray(a) || !_isArray(b);\n  var differentLengths = a.length !== b.length;\n\n  if (notBothArrays || differentLengths) {\n    return false;\n  }\n\n  return every(function (element, index) {\n    return element === b[index];\n  }, a);\n}\n\nfunction memoizeString(fn) {\n  var cache = {};\n\n  return function (str) {\n    if (!cache[str]) {\n      cache[str] = fn(str);\n    }\n    return cache[str];\n  };\n}\n\nvar hyphenate = memoizeString(function (str) {\n  return str.replace(/([A-Z])/g, '-$1').toLowerCase();\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * React Flip Move | propConverter\n * (c) 2016-present Joshua Comeau\n *\n * Abstracted away a bunch of the messy business with props.\n *   - props flow types and defaultProps\n *   - Type conversion (We accept 'string' and 'number' values for duration,\n *     delay, and other fields, but we actually need them to be ints.)\n *   - Children conversion (we need the children to be an array. May not always\n *     be, if a single child is passed in.)\n *   - Resolving animation presets into their base CSS styles\n */\n/* eslint-disable block-scoped-var */\n\n// eslint-disable-next-line no-duplicate-imports\n\n\nfunction propConverter(ComposedComponent) {\n  var _class, _temp;\n\n  return _temp = _class = function (_Component) {\n    inherits(FlipMovePropConverter, _Component);\n\n    function FlipMovePropConverter() {\n      classCallCheck(this, FlipMovePropConverter);\n      return possibleConstructorReturn(this, _Component.apply(this, arguments));\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    FlipMovePropConverter.prototype.checkChildren = function checkChildren(children) {\n      // Skip all console warnings in production.\n      // Bail early, to avoid unnecessary work.\n      if (process.env.NODE_ENV === 'production') {\n        return;\n      }\n\n      // same as React.Node, but without fragments, see https://github.com/facebook/flow/issues/4781\n\n\n      // FlipMove does not support stateless functional components.\n      // Check to see if any supplied components won't work.\n      // If the child doesn't have a key, it means we aren't animating it.\n      // It's allowed to be an SFC, since we ignore it.\n      Children.forEach(children, function (child) {\n        // null, undefined, and booleans will be filtered out by Children.toArray\n        if (child == null || typeof child === 'boolean') {\n          return;\n        }\n\n        if ((typeof child === 'undefined' ? 'undefined' : _typeof(child)) !== 'object') {\n          primitiveNodeSupplied();\n          return;\n        }\n\n        if (isElementAnSFC(child) && child.key != null) {\n          statelessFunctionalComponentSupplied();\n        }\n      });\n    };\n\n    FlipMovePropConverter.prototype.convertProps = function convertProps(props) {\n      var workingProps = {\n        // explicitly bypass the props that don't need conversion\n        children: props.children,\n        easing: props.easing,\n        onStart: props.onStart,\n        onFinish: props.onFinish,\n        onStartAll: props.onStartAll,\n        onFinishAll: props.onFinishAll,\n        typeName: props.typeName,\n        disableAllAnimations: props.disableAllAnimations,\n        getPosition: props.getPosition,\n        maintainContainerHeight: props.maintainContainerHeight,\n        verticalAlignment: props.verticalAlignment,\n\n        // Do string-to-int conversion for all timing-related props\n        duration: this.convertTimingProp('duration'),\n        delay: this.convertTimingProp('delay'),\n        staggerDurationBy: this.convertTimingProp('staggerDurationBy'),\n        staggerDelayBy: this.convertTimingProp('staggerDelayBy'),\n\n        // Our enter/leave animations can be specified as boolean (default or\n        // disabled), string (preset name), or object (actual animation values).\n        // Let's standardize this so that they're always objects\n        appearAnimation: this.convertAnimationProp(props.appearAnimation, appearPresets),\n        enterAnimation: this.convertAnimationProp(props.enterAnimation, enterPresets),\n        leaveAnimation: this.convertAnimationProp(props.leaveAnimation, leavePresets),\n\n        delegated: {}\n      };\n\n      this.checkChildren(workingProps.children);\n\n      // Gather any additional props;\n      // they will be delegated to the ReactElement created.\n      var primaryPropKeys = Object.keys(workingProps);\n      var delegatedProps = omit(this.props, primaryPropKeys);\n\n      // The FlipMove container element needs to have a non-static position.\n      // We use `relative` by default, but it can be overridden by the user.\n      // Now that we're delegating props, we need to merge this in.\n      delegatedProps.style = _extends({\n        position: 'relative'\n      }, delegatedProps.style);\n\n      workingProps.delegated = delegatedProps;\n\n      return workingProps;\n    };\n\n    FlipMovePropConverter.prototype.convertTimingProp = function convertTimingProp(prop) {\n      var rawValue = this.props[prop];\n\n      var value = typeof rawValue === 'number' ? rawValue : parseInt(rawValue, 10);\n\n      if (isNaN(value)) {\n        var defaultValue = FlipMovePropConverter.defaultProps[prop];\n\n        if (process.env.NODE_ENV !== 'production') {\n          invalidTypeForTimingProp({\n            prop: prop,\n            value: rawValue,\n            defaultValue: defaultValue\n          });\n        }\n\n        return defaultValue;\n      }\n\n      return value;\n    };\n\n    // eslint-disable-next-line class-methods-use-this\n\n\n    FlipMovePropConverter.prototype.convertAnimationProp = function convertAnimationProp(animation, presets) {\n      switch (typeof animation === 'undefined' ? 'undefined' : _typeof(animation)) {\n        case 'boolean':\n          {\n            // If it's true, we want to use the default preset.\n            // If it's false, we want to use the 'none' preset.\n            return presets[animation ? defaultPreset : disablePreset];\n          }\n\n        case 'string':\n          {\n            var presetKeys = Object.keys(presets);\n\n            if (presetKeys.indexOf(animation) === -1) {\n              if (process.env.NODE_ENV !== 'production') {\n                invalidEnterLeavePreset({\n                  value: animation,\n                  acceptableValues: presetKeys.join(', '),\n                  defaultValue: defaultPreset\n                });\n              }\n\n              return presets[defaultPreset];\n            }\n\n            return presets[animation];\n          }\n\n        default:\n          {\n            return animation;\n          }\n      }\n    };\n\n    FlipMovePropConverter.prototype.render = function render() {\n      return React.createElement(ComposedComponent, this.convertProps(this.props));\n    };\n\n    return FlipMovePropConverter;\n  }(Component), _class.defaultProps = {\n    easing: 'ease-in-out',\n    duration: 350,\n    delay: 0,\n    staggerDurationBy: 0,\n    staggerDelayBy: 0,\n    typeName: 'div',\n    enterAnimation: defaultPreset,\n    leaveAnimation: defaultPreset,\n    disableAllAnimations: false,\n    getPosition: function getPosition(node) {\n      return node.getBoundingClientRect();\n    },\n    maintainContainerHeight: false,\n    verticalAlignment: 'top'\n  }, _temp;\n}\n\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n *\n * These methods read from and write to the DOM.\n * They almost always have side effects, and will hopefully become the\n * only spot in the codebase with impure functions.\n */\nfunction applyStylesToDOMNode(_ref) {\n  var domNode = _ref.domNode,\n      styles = _ref.styles;\n\n  // Can't just do an object merge because domNode.styles is no regular object.\n  // Need to do it this way for the engine to fire its `set` listeners.\n  Object.keys(styles).forEach(function (key) {\n    domNode.style.setProperty(hyphenate(key), styles[key]);\n  });\n}\n\n// Modified from Modernizr\nfunction whichTransitionEvent() {\n  var transitions = {\n    transition: 'transitionend',\n    '-o-transition': 'oTransitionEnd',\n    '-moz-transition': 'transitionend',\n    '-webkit-transition': 'webkitTransitionEnd'\n  };\n\n  // If we're running in a browserless environment (eg. SSR), it doesn't apply.\n  // Return a placeholder string, for consistent type return.\n  if (typeof document === 'undefined') return '';\n\n  var el = document.createElement('fakeelement');\n\n  var match = find(function (t) {\n    return el.style.getPropertyValue(t) !== undefined;\n  }, Object.keys(transitions));\n\n  // If no `transition` is found, we must be running in a browser so ancient,\n  // React itself won't run. Return an empty string, for consistent type return\n  return match ? transitions[match] : '';\n}\n\nvar getRelativeBoundingBox = function getRelativeBoundingBox(_ref2) {\n  var childDomNode = _ref2.childDomNode,\n      parentDomNode = _ref2.parentDomNode,\n      getPosition = _ref2.getPosition;\n\n  var parentBox = getPosition(parentDomNode);\n\n  var _getPosition = getPosition(childDomNode),\n      top = _getPosition.top,\n      left = _getPosition.left,\n      right = _getPosition.right,\n      bottom = _getPosition.bottom,\n      width = _getPosition.width,\n      height = _getPosition.height;\n\n  return {\n    top: top - parentBox.top,\n    left: left - parentBox.left,\n    right: parentBox.right - right,\n    bottom: parentBox.bottom - bottom,\n    width: width,\n    height: height\n  };\n};\n\n/** getPositionDelta\n * This method returns the delta between two bounding boxes, to figure out\n * how many pixels on each axis the element has moved.\n *\n */\nvar getPositionDelta = function getPositionDelta(_ref3) {\n  var childDomNode = _ref3.childDomNode,\n      childBoundingBox = _ref3.childBoundingBox,\n      parentBoundingBox = _ref3.parentBoundingBox,\n      getPosition = _ref3.getPosition;\n\n  // TEMP: A mystery bug is sometimes causing unnecessary boundingBoxes to\n  var defaultBox = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 0,\n    width: 0\n  };\n\n  // Our old box is its last calculated position, derived on mount or at the\n  // start of the previous animation.\n  var oldRelativeBox = childBoundingBox || defaultBox;\n  var parentBox = parentBoundingBox || defaultBox;\n\n  // Our new box is the new final resting place: Where we expect it to wind up\n  // after the animation. First we get the box in absolute terms (AKA relative\n  // to the viewport), and then we calculate its relative box (relative to the\n  // parent container)\n  var newAbsoluteBox = getPosition(childDomNode);\n  var newRelativeBox = {\n    top: newAbsoluteBox.top - parentBox.top,\n    left: newAbsoluteBox.left - parentBox.left\n  };\n\n  return [oldRelativeBox.left - newRelativeBox.left, oldRelativeBox.top - newRelativeBox.top];\n};\n\n/** removeNodeFromDOMFlow\n * This method does something very sneaky: it removes a DOM node from the\n * document flow, but without actually changing its on-screen position.\n *\n * It works by calculating where the node is, and then applying styles\n * so that it winds up being positioned absolutely, but in exactly the\n * same place.\n *\n * This is a vital part of the FLIP technique.\n */\nvar removeNodeFromDOMFlow = function removeNodeFromDOMFlow(childData, verticalAlignment) {\n  var domNode = childData.domNode,\n      boundingBox = childData.boundingBox;\n\n\n  if (!domNode || !boundingBox) {\n    return;\n  }\n\n  // For this to work, we have to offset any given `margin`.\n  var computed = window.getComputedStyle(domNode);\n\n  // We need to clean up margins, by converting and removing suffix:\n  // eg. '21px' -> 21\n  var marginAttrs = ['margin-top', 'margin-left', 'margin-right'];\n  var margins = marginAttrs.reduce(function (acc, margin) {\n    var _babelHelpers$extends;\n\n    var propertyVal = computed.getPropertyValue(margin);\n\n    return _extends({}, acc, (_babelHelpers$extends = {}, _babelHelpers$extends[margin] = Number(propertyVal.replace('px', '')), _babelHelpers$extends));\n  }, {});\n\n  // If we're bottom-aligned, we need to add the height of the child to its\n  // top offset. This is because, when the container is bottom-aligned, its\n  // height shrinks from the top, not the bottom. We're removing this node\n  // from the flow, so the top is going to drop by its height.\n  var topOffset = verticalAlignment === 'bottom' ? boundingBox.top - boundingBox.height : boundingBox.top;\n\n  var styles = {\n    position: 'absolute',\n    top: topOffset - margins['margin-top'] + 'px',\n    left: boundingBox.left - margins['margin-left'] + 'px',\n    right: boundingBox.right - margins['margin-right'] + 'px'\n  };\n\n  applyStylesToDOMNode({ domNode: domNode, styles: styles });\n};\n\n/** updateHeightPlaceholder\n * An optional property to FlipMove is a `maintainContainerHeight` boolean.\n * This property creates a node that fills space, so that the parent\n * container doesn't collapse when its children are removed from the\n * document flow.\n */\nvar updateHeightPlaceholder = function updateHeightPlaceholder(_ref4) {\n  var domNode = _ref4.domNode,\n      parentData = _ref4.parentData,\n      getPosition = _ref4.getPosition;\n\n  var parentDomNode = parentData.domNode;\n  var parentBoundingBox = parentData.boundingBox;\n\n  if (!parentDomNode || !parentBoundingBox) {\n    return;\n  }\n\n  // We need to find the height of the container *without* the placeholder.\n  // Since it's possible that the placeholder might already be present,\n  // we first set its height to 0.\n  // This allows the container to collapse down to the size of just its\n  // content (plus container padding or borders if any).\n  applyStylesToDOMNode({ domNode: domNode, styles: { height: '0' } });\n\n  // Find the distance by which the container would be collapsed by elements\n  // leaving. We compare the freshly-available parent height with the original,\n  // cached container height.\n  var originalParentHeight = parentBoundingBox.height;\n  var collapsedParentHeight = getPosition(parentDomNode).height;\n  var reductionInHeight = originalParentHeight - collapsedParentHeight;\n\n  // If the container has become shorter, update the padding element's\n  // height to take up the difference. Otherwise set its height to zero,\n  // so that it has no effect.\n  var styles = {\n    height: reductionInHeight > 0 ? reductionInHeight + 'px' : '0'\n  };\n\n  applyStylesToDOMNode({ domNode: domNode, styles: styles });\n};\n\nvar getNativeNode = function getNativeNode(element) {\n  // When running in a windowless environment, abort!\n  if (typeof HTMLElement === 'undefined') {\n    return null;\n  }\n\n  // `element` may already be a native node.\n  if (element instanceof HTMLElement) {\n    return element;\n  }\n\n  // While ReactDOM's `findDOMNode` is discouraged, it's the only\n  // publicly-exposed way to find the underlying DOM node for\n  // composite components.\n  var foundNode = findDOMNode(element);\n\n  if (foundNode && foundNode.nodeType === Node.TEXT_NODE) {\n    // Text nodes are not supported\n    return null;\n  }\n  // eslint-disable-next-line flowtype/no-weak-types\n  return foundNode;\n};\n\nvar createTransitionString = function createTransitionString(index, props) {\n  var delay = props.delay,\n      duration = props.duration;\n  var staggerDurationBy = props.staggerDurationBy,\n      staggerDelayBy = props.staggerDelayBy,\n      easing = props.easing;\n\n\n  delay += index * staggerDelayBy;\n  duration += index * staggerDurationBy;\n\n  var cssProperties = ['transform', 'opacity'];\n\n  return cssProperties.map(function (prop) {\n    return prop + ' ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n  }).join(', ');\n};\n\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n *\n * For information on how this code is laid out, check out CODE_TOUR.md\n */\n\n/* eslint-disable react/prop-types */\n\n// eslint-disable-next-line no-duplicate-imports\n\n\nvar transitionEnd = whichTransitionEvent();\nvar noBrowserSupport = !transitionEnd;\n\nfunction getKey(childData) {\n  return childData.key || '';\n}\n\nfunction getElementChildren(children) {\n  // Fix incomplete typing of Children.toArray\n  // eslint-disable-next-line flowtype/no-weak-types\n  return Children.toArray(children);\n}\n\nvar FlipMove$1 = function (_Component) {\n  inherits(FlipMove, _Component);\n\n  function FlipMove() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FlipMove);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      children: getElementChildren(\n      // `this.props` ought to always be defined at this point, but a report\n      // was made about it not being defined in IE10.\n      // TODO: Test in IE10, to see if there's an underlying cause that can\n      // be addressed.\n      _this.props ? _this.props.children : []).map(function (element) {\n        return _extends({}, element, {\n          element: element,\n          appearing: true\n        });\n      })\n    }, _this.childrenData = {}, _this.parentData = {\n      domNode: null,\n      boundingBox: null\n    }, _this.heightPlaceholderData = {\n      domNode: null\n    }, _this.remainingAnimations = 0, _this.childrenToAnimate = [], _this.findDOMContainer = function () {\n      // eslint-disable-next-line react/no-find-dom-node\n      var domNode = ReactDOM.findDOMNode(_this);\n      var parentNode = domNode && domNode.parentNode;\n\n      // This ought to be impossible, but handling it for Flow's sake.\n      if (!parentNode || !(parentNode instanceof HTMLElement)) {\n        return;\n      }\n\n      // If the parent node has static positioning, leave animations might look\n      // really funky. Let's automatically apply `position: relative` in this\n      // case, to prevent any quirkiness.\n      if (window.getComputedStyle(parentNode).position === 'static') {\n        parentNode.style.position = 'relative';\n        parentNodePositionStatic();\n      }\n\n      _this.parentData.domNode = parentNode;\n    }, _this.runAnimation = function () {\n      var dynamicChildren = _this.state.children.filter(_this.doesChildNeedToBeAnimated);\n\n      // Splitting DOM reads and writes to be peformed in batches\n      var childrenInitialStyles = dynamicChildren.map(function (child) {\n        return _this.computeInitialStyles(child);\n      });\n      dynamicChildren.forEach(function (child, index) {\n        _this.remainingAnimations += 1;\n        _this.childrenToAnimate.push(getKey(child));\n        _this.animateChild(child, index, childrenInitialStyles[index]);\n      });\n\n      if (typeof _this.props.onStartAll === 'function') {\n        _this.callChildrenHook(_this.props.onStartAll);\n      }\n    }, _this.doesChildNeedToBeAnimated = function (child) {\n      // If the child doesn't have a key, it's an immovable child (one that we\n      // do not want to do FLIP stuff to.)\n      if (!getKey(child)) {\n        return false;\n      }\n\n      var childData = _this.getChildData(getKey(child));\n      var childDomNode = childData.domNode;\n      var childBoundingBox = childData.boundingBox;\n      var parentBoundingBox = _this.parentData.boundingBox;\n\n      if (!childDomNode) {\n        return false;\n      }\n\n      var _this$props = _this.props,\n          appearAnimation = _this$props.appearAnimation,\n          enterAnimation = _this$props.enterAnimation,\n          leaveAnimation = _this$props.leaveAnimation,\n          getPosition = _this$props.getPosition;\n\n\n      var isAppearingWithAnimation = child.appearing && appearAnimation;\n      var isEnteringWithAnimation = child.entering && enterAnimation;\n      var isLeavingWithAnimation = child.leaving && leaveAnimation;\n\n      if (isAppearingWithAnimation || isEnteringWithAnimation || isLeavingWithAnimation) {\n        return true;\n      }\n\n      // If it isn't entering/leaving, we want to animate it if it's\n      // on-screen position has changed.\n\n      var _getPositionDelta = getPositionDelta({\n        childDomNode: childDomNode,\n        childBoundingBox: childBoundingBox,\n        parentBoundingBox: parentBoundingBox,\n        getPosition: getPosition\n      }),\n          dX = _getPositionDelta[0],\n          dY = _getPositionDelta[1];\n\n      return dX !== 0 || dY !== 0;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  // Copy props.children into state.\n  // To understand why this is important (and not an anti-pattern), consider\n  // how \"leave\" animations work. An item has \"left\" when the component\n  // receives a new set of props that do NOT contain the item.\n  // If we just render the props as-is, the item would instantly disappear.\n  // We want to keep the item rendered for a little while, until its animation\n  // can complete. Because we cannot mutate props, we make `state` the source\n  // of truth.\n\n\n  // FlipMove needs to know quite a bit about its children in order to do\n  // its job. We store these as a property on the instance. We're not using\n  // state, because we don't want changes to trigger re-renders, we just\n  // need a place to keep the data for reference, when changes happen.\n  // This field should not be accessed directly. Instead, use getChildData,\n  // putChildData, etc...\n\n\n  // Similarly, track the dom node and box of our parent element.\n\n\n  // If `maintainContainerHeight` prop is set to true, we'll create a\n  // placeholder element which occupies space so that the parent height\n  // doesn't change when items are removed from the document flow (which\n  // happens during leave animations)\n\n\n  // Keep track of remaining animations so we know when to fire the\n  // all-finished callback, and clean up after ourselves.\n  // NOTE: we can't simply use childrenToAnimate.length to track remaining\n  // animations, because we need to maintain the list of animating children,\n  // to pass to the `onFinishAll` handler.\n\n\n  FlipMove.prototype.componentDidMount = function componentDidMount() {\n    // Because React 16 no longer requires wrapping elements, Flip Move can opt\n    // to not wrap the children in an element. In that case, find the parent\n    // element using `findDOMNode`.\n    if (this.props.typeName === null) {\n      this.findDOMContainer();\n    }\n\n    // Run our `appearAnimation` if it was requested, right after the\n    // component mounts.\n    var shouldTriggerFLIP = this.props.appearAnimation && !this.isAnimationDisabled(this.props);\n\n    if (shouldTriggerFLIP) {\n      this.prepForAnimation();\n      this.runAnimation();\n    }\n  };\n\n  FlipMove.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    // When the component is handed new props, we need to figure out the\n    // \"resting\" position of all currently-rendered DOM nodes.\n    // We store that data in this.parent and this.children,\n    // so it can be used later to work out the animation.\n    this.updateBoundingBoxCaches();\n\n    // Convert opaque children object to array.\n    var nextChildren = getElementChildren(nextProps.children);\n\n    // Next, we need to update our state, so that it contains our new set of\n    // children. If animation is disabled or unsupported, this is easy;\n    // we just copy our props into state.\n    // Assuming that we can animate, though, we have to do some work.\n    // Essentially, we want to keep just-deleted nodes in the DOM for a bit\n    // longer, so that we can animate them away.\n    this.setState({\n      children: this.isAnimationDisabled(nextProps) ? nextChildren.map(function (element) {\n        return _extends({}, element, { element: element });\n      }) : this.calculateNextSetOfChildren(nextChildren)\n    });\n  };\n\n  FlipMove.prototype.componentDidUpdate = function componentDidUpdate(previousProps) {\n    if (this.props.typeName === null) {\n      this.findDOMContainer();\n    }\n    // If the children have been re-arranged, moved, or added/removed,\n    // trigger the main FLIP animation.\n    //\n    // IMPORTANT: We need to make sure that the children have actually changed.\n    // At the end of the transition, we clean up nodes that need to be removed.\n    // We DON'T want this cleanup to trigger another update.\n\n    var oldChildrenKeys = getElementChildren(this.props.children).map(function (d) {\n      return d.key;\n    });\n    var nextChildrenKeys = getElementChildren(previousProps.children).map(function (d) {\n      return d.key;\n    });\n\n    var shouldTriggerFLIP = !arraysEqual(oldChildrenKeys, nextChildrenKeys) && !this.isAnimationDisabled(this.props);\n\n    if (shouldTriggerFLIP) {\n      this.prepForAnimation();\n      this.runAnimation();\n    }\n  };\n\n  FlipMove.prototype.calculateNextSetOfChildren = function calculateNextSetOfChildren(nextChildren) {\n    var _this2 = this;\n\n    // We want to:\n    //   - Mark all new children as `entering`\n    //   - Pull in previous children that aren't in nextChildren, and mark them\n    //     as `leaving`\n    //   - Preserve the nextChildren list order, with leaving children in their\n    //     appropriate places.\n    //\n\n    var updatedChildren = nextChildren.map(function (nextChild) {\n      var child = _this2.findChildByKey(nextChild.key);\n\n      // If the current child did exist, but it was in the midst of leaving,\n      // we want to treat it as though it's entering\n      var isEntering = !child || child.leaving;\n\n      return _extends({}, nextChild, { element: nextChild, entering: isEntering });\n    });\n\n    // This is tricky. We want to keep the nextChildren's ordering, but with\n    // any just-removed items maintaining their original position.\n    // eg.\n    //   this.state.children  = [ 1, 2, 3, 4 ]\n    //   nextChildren         = [ 3, 1 ]\n    //\n    // In this example, we've removed the '2' & '4'\n    // We want to end up with:  [ 2, 3, 1, 4 ]\n    //\n    // To accomplish that, we'll iterate through this.state.children. whenever\n    // we find a match, we'll append our `leaving` flag to it, and insert it\n    // into the nextChildren in its ORIGINAL position. Note that, as we keep\n    // inserting old items into the new list, the \"original\" position will\n    // keep incrementing.\n    var numOfChildrenLeaving = 0;\n    this.state.children.forEach(function (child, index) {\n      var isLeaving = !find(function (_ref) {\n        var key = _ref.key;\n        return key === getKey(child);\n      }, nextChildren);\n\n      // If the child isn't leaving (or, if there is no leave animation),\n      // we don't need to add it into the state children.\n      if (!isLeaving || !_this2.props.leaveAnimation) return;\n\n      var nextChild = _extends({}, child, { leaving: true });\n      var nextChildIndex = index + numOfChildrenLeaving;\n\n      updatedChildren.splice(nextChildIndex, 0, nextChild);\n      numOfChildrenLeaving += 1;\n    });\n\n    return updatedChildren;\n  };\n\n  FlipMove.prototype.prepForAnimation = function prepForAnimation() {\n    var _this3 = this;\n\n    // Our animation prep consists of:\n    // - remove children that are leaving from the DOM flow, so that the new\n    //   layout can be accurately calculated,\n    // - update the placeholder container height, if needed, to ensure that\n    //   the parent's height doesn't collapse.\n\n    var _props = this.props,\n        leaveAnimation = _props.leaveAnimation,\n        maintainContainerHeight = _props.maintainContainerHeight,\n        getPosition = _props.getPosition;\n\n    // we need to make all leaving nodes \"invisible\" to the layout calculations\n    // that will take place in the next step (this.runAnimation).\n\n    if (leaveAnimation) {\n      var leavingChildren = this.state.children.filter(function (child) {\n        return child.leaving;\n      });\n\n      leavingChildren.forEach(function (leavingChild) {\n        var childData = _this3.getChildData(getKey(leavingChild));\n\n        // Warn if child is disabled\n        if (!_this3.isAnimationDisabled(_this3.props) && childData.domNode && childData.domNode.disabled) {\n          childIsDisabled();\n        }\n\n        // We need to take the items out of the \"flow\" of the document, so that\n        // its siblings can move to take its place.\n        if (childData.boundingBox) {\n          removeNodeFromDOMFlow(childData, _this3.props.verticalAlignment);\n        }\n      });\n\n      if (maintainContainerHeight && this.heightPlaceholderData.domNode) {\n        updateHeightPlaceholder({\n          domNode: this.heightPlaceholderData.domNode,\n          parentData: this.parentData,\n          getPosition: getPosition\n        });\n      }\n    }\n\n    // For all children not in the middle of entering or leaving,\n    // we need to reset the transition, so that the NEW shuffle starts from\n    // the right place.\n    this.state.children.forEach(function (child) {\n      var _getChildData = _this3.getChildData(getKey(child)),\n          domNode = _getChildData.domNode;\n\n      // Ignore children that don't render DOM nodes (eg. by returning null)\n\n\n      if (!domNode) {\n        return;\n      }\n\n      if (!child.entering && !child.leaving) {\n        applyStylesToDOMNode({\n          domNode: domNode,\n          styles: {\n            transition: ''\n          }\n        });\n      }\n    });\n  };\n\n  FlipMove.prototype.animateChild = function animateChild(child, index, childInitialStyles) {\n    var _this4 = this;\n\n    var _getChildData2 = this.getChildData(getKey(child)),\n        domNode = _getChildData2.domNode;\n\n    if (!domNode) {\n      return;\n    }\n\n    // Apply the relevant style for this DOM node\n    // This is the offset from its actual DOM position.\n    // eg. if an item has been re-rendered 20px lower, we want to apply a\n    // style of 'transform: translate(-20px)', so that it appears to be where\n    // it started.\n    // In FLIP terminology, this is the 'Invert' stage.\n    applyStylesToDOMNode({\n      domNode: domNode,\n      styles: childInitialStyles\n    });\n\n    // Start by invoking the onStart callback for this child.\n    if (this.props.onStart) this.props.onStart(child, domNode);\n\n    // Next, animate the item from it's artificially-offset position to its\n    // new, natural position.\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        // NOTE, RE: the double-requestAnimationFrame:\n        // Sadly, this is the most browser-compatible way to do this I've found.\n        // Essentially we need to set the initial styles outside of any request\n        // callbacks to avoid batching them. Then, a frame needs to pass with\n        // the styles above rendered. Then, on the second frame, we can apply\n        // our final styles to perform the animation.\n\n        // Our first order of business is to \"undo\" the styles applied in the\n        // previous frames, while also adding a `transition` property.\n        // This way, the item will smoothly transition from its old position\n        // to its new position.\n\n        // eslint-disable-next-line flowtype/require-variable-type\n        var styles = {\n          transition: createTransitionString(index, _this4.props),\n          transform: '',\n          opacity: ''\n        };\n\n        if (child.appearing && _this4.props.appearAnimation) {\n          styles = _extends({}, styles, _this4.props.appearAnimation.to);\n        } else if (child.entering && _this4.props.enterAnimation) {\n          styles = _extends({}, styles, _this4.props.enterAnimation.to);\n        } else if (child.leaving && _this4.props.leaveAnimation) {\n          styles = _extends({}, styles, _this4.props.leaveAnimation.to);\n        }\n\n        // In FLIP terminology, this is the 'Play' stage.\n        applyStylesToDOMNode({ domNode: domNode, styles: styles });\n      });\n    });\n\n    this.bindTransitionEndHandler(child);\n  };\n\n  FlipMove.prototype.bindTransitionEndHandler = function bindTransitionEndHandler(child) {\n    var _this5 = this;\n\n    var _getChildData3 = this.getChildData(getKey(child)),\n        domNode = _getChildData3.domNode;\n\n    if (!domNode) {\n      return;\n    }\n\n    // The onFinish callback needs to be bound to the transitionEnd event.\n    // We also need to unbind it when the transition completes, so this ugly\n    // inline function is required (we need it here so it closes over\n    // dependent variables `child` and `domNode`)\n    var transitionEndHandler = function transitionEndHandler(ev) {\n      // It's possible that this handler is fired not on our primary transition,\n      // but on a nested transition (eg. a hover effect). Ignore these cases.\n      if (ev.target !== domNode) return;\n\n      // Remove the 'transition' inline style we added. This is cleanup.\n      domNode.style.transition = '';\n\n      // Trigger any applicable onFinish/onFinishAll hooks\n      _this5.triggerFinishHooks(child, domNode);\n\n      domNode.removeEventListener(transitionEnd, transitionEndHandler);\n\n      if (child.leaving) {\n        _this5.removeChildData(getKey(child));\n      }\n    };\n\n    domNode.addEventListener(transitionEnd, transitionEndHandler);\n  };\n\n  FlipMove.prototype.triggerFinishHooks = function triggerFinishHooks(child, domNode) {\n    var _this6 = this;\n\n    if (this.props.onFinish) this.props.onFinish(child, domNode);\n\n    // Reduce the number of children we need to animate by 1,\n    // so that we can tell when all children have finished.\n    this.remainingAnimations -= 1;\n\n    if (this.remainingAnimations === 0) {\n      // Remove any items from the DOM that have left, and reset `entering`.\n      var nextChildren = this.state.children.filter(function (_ref2) {\n        var leaving = _ref2.leaving;\n        return !leaving;\n      }).map(function (item) {\n        return _extends({}, item, {\n          // fix for Flow\n          element: item.element,\n          appearing: false,\n          entering: false\n        });\n      });\n\n      this.setState({ children: nextChildren }, function () {\n        if (typeof _this6.props.onFinishAll === 'function') {\n          _this6.callChildrenHook(_this6.props.onFinishAll);\n        }\n\n        // Reset our variables for the next iteration\n        _this6.childrenToAnimate = [];\n      });\n\n      // If the placeholder was holding the container open while elements were\n      // leaving, we we can now set its height to zero.\n      if (this.heightPlaceholderData.domNode) {\n        this.heightPlaceholderData.domNode.style.height = '0';\n      }\n    }\n  };\n\n  FlipMove.prototype.callChildrenHook = function callChildrenHook(hook) {\n    var _this7 = this;\n\n    var elements = [];\n    var domNodes = [];\n\n    this.childrenToAnimate.forEach(function (childKey) {\n      // If this was an exit animation, the child may no longer exist.\n      // If so, skip it.\n      var child = _this7.findChildByKey(childKey);\n\n      if (!child) {\n        return;\n      }\n\n      elements.push(child);\n\n      if (_this7.hasChildData(childKey)) {\n        domNodes.push(_this7.getChildData(childKey).domNode);\n      }\n    });\n\n    hook(elements, domNodes);\n  };\n\n  FlipMove.prototype.updateBoundingBoxCaches = function updateBoundingBoxCaches() {\n    var _this8 = this;\n\n    // This is the ONLY place that parentData and childrenData's\n    // bounding boxes are updated. They will be calculated at other times\n    // to be compared to this value, but it's important that the cache is\n    // updated once per update.\n    var parentDomNode = this.parentData.domNode;\n\n    if (!parentDomNode) {\n      return;\n    }\n\n    this.parentData.boundingBox = this.props.getPosition(parentDomNode);\n\n    // Splitting DOM reads and writes to be peformed in batches\n    var childrenBoundingBoxes = [];\n\n    this.state.children.forEach(function (child) {\n      var childKey = getKey(child);\n\n      // It is possible that a child does not have a `key` property;\n      // Ignore these children, they don't need to be moved.\n      if (!childKey) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      // In very rare circumstances, for reasons unknown, the ref is never\n      // populated for certain children. In this case, avoid doing this update.\n      // see: https://github.com/joshwcomeau/react-flip-move/pull/91\n      if (!_this8.hasChildData(childKey)) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      var childData = _this8.getChildData(childKey);\n\n      // If the child element returns null, we need to avoid trying to\n      // account for it\n      if (!childData.domNode || !child) {\n        childrenBoundingBoxes.push(null);\n        return;\n      }\n\n      childrenBoundingBoxes.push(getRelativeBoundingBox({\n        childDomNode: childData.domNode,\n        parentDomNode: parentDomNode,\n        getPosition: _this8.props.getPosition\n      }));\n    });\n\n    this.state.children.forEach(function (child, index) {\n      var childKey = getKey(child);\n\n      var childBoundingBox = childrenBoundingBoxes[index];\n\n      if (!childKey) {\n        return;\n      }\n\n      _this8.setChildData(childKey, {\n        boundingBox: childBoundingBox\n      });\n    });\n  };\n\n  FlipMove.prototype.computeInitialStyles = function computeInitialStyles(child) {\n    if (child.appearing) {\n      return this.props.appearAnimation ? this.props.appearAnimation.from : {};\n    } else if (child.entering) {\n      if (!this.props.enterAnimation) {\n        return {};\n      }\n      // If this child was in the middle of leaving, it still has its\n      // absolute positioning styles applied. We need to undo those.\n      return _extends({\n        position: '',\n        top: '',\n        left: '',\n        right: '',\n        bottom: ''\n      }, this.props.enterAnimation.from);\n    } else if (child.leaving) {\n      return this.props.leaveAnimation ? this.props.leaveAnimation.from : {};\n    }\n\n    var childData = this.getChildData(getKey(child));\n    var childDomNode = childData.domNode;\n    var childBoundingBox = childData.boundingBox;\n    var parentBoundingBox = this.parentData.boundingBox;\n\n    if (!childDomNode) {\n      return {};\n    }\n\n    var _getPositionDelta2 = getPositionDelta({\n      childDomNode: childDomNode,\n      childBoundingBox: childBoundingBox,\n      parentBoundingBox: parentBoundingBox,\n      getPosition: this.props.getPosition\n    }),\n        dX = _getPositionDelta2[0],\n        dY = _getPositionDelta2[1];\n\n    return {\n      transform: 'translate(' + dX + 'px, ' + dY + 'px)'\n    };\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n\n\n  FlipMove.prototype.isAnimationDisabled = function isAnimationDisabled(props) {\n    // If the component is explicitly passed a `disableAllAnimations` flag,\n    // we can skip this whole process. Similarly, if all of the numbers have\n    // been set to 0, there is no point in trying to animate; doing so would\n    // only cause a flicker (and the intent is probably to disable animations)\n    // We can also skip this rigamarole if there's no browser support for it.\n    return noBrowserSupport || props.disableAllAnimations || props.duration === 0 && props.delay === 0 && props.staggerDurationBy === 0 && props.staggerDelayBy === 0;\n  };\n\n  FlipMove.prototype.findChildByKey = function findChildByKey(key) {\n    return find(function (child) {\n      return getKey(child) === key;\n    }, this.state.children);\n  };\n\n  FlipMove.prototype.hasChildData = function hasChildData(key) {\n    // Object has some built-in properties on its prototype, such as toString.  hasOwnProperty makes\n    // sure that key is present on childrenData itself, not on its prototype.\n    return Object.prototype.hasOwnProperty.call(this.childrenData, key);\n  };\n\n  FlipMove.prototype.getChildData = function getChildData(key) {\n    return this.hasChildData(key) ? this.childrenData[key] : {};\n  };\n\n  FlipMove.prototype.setChildData = function setChildData(key, data) {\n    this.childrenData[key] = _extends({}, this.getChildData(key), data);\n  };\n\n  FlipMove.prototype.removeChildData = function removeChildData(key) {\n    delete this.childrenData[key];\n    this.setState(function (prevState) {\n      return _extends({}, prevState, {\n        children: prevState.children.filter(function (child) {\n          return child.element.key !== key;\n        })\n      });\n    });\n  };\n\n  FlipMove.prototype.createHeightPlaceholder = function createHeightPlaceholder() {\n    var _this9 = this;\n\n    var typeName = this.props.typeName;\n\n    // If requested, create an invisible element at the end of the list.\n    // Its height will be modified to prevent the container from collapsing\n    // prematurely.\n\n    var isContainerAList = typeName === 'ul' || typeName === 'ol';\n    var placeholderType = isContainerAList ? 'li' : 'div';\n\n    return createElement(placeholderType, {\n      key: 'height-placeholder',\n      ref: function ref(domNode) {\n        _this9.heightPlaceholderData.domNode = domNode;\n      },\n      style: { visibility: 'hidden', height: 0 }\n    });\n  };\n\n  FlipMove.prototype.childrenWithRefs = function childrenWithRefs() {\n    var _this10 = this;\n\n    // We need to clone the provided children, capturing a reference to the\n    // underlying DOM node. Flip Move needs to use the React escape hatches to\n    // be able to do its calculations.\n    return this.state.children.map(function (child) {\n      return cloneElement(child.element, {\n        ref: function ref(element) {\n          // Stateless Functional Components are not supported by FlipMove,\n          // because they don't have instances.\n          if (!element) {\n            return;\n          }\n\n          var domNode = getNativeNode(element);\n          _this10.setChildData(getKey(child), { domNode: domNode });\n        }\n      });\n    });\n  };\n\n  FlipMove.prototype.render = function render() {\n    var _this11 = this;\n\n    var _props2 = this.props,\n        typeName = _props2.typeName,\n        delegated = _props2.delegated,\n        leaveAnimation = _props2.leaveAnimation,\n        maintainContainerHeight = _props2.maintainContainerHeight;\n\n\n    var children = this.childrenWithRefs();\n    if (leaveAnimation && maintainContainerHeight) {\n      children.push(this.createHeightPlaceholder());\n    }\n\n    if (!typeName) return children;\n\n    var props = _extends({}, delegated, {\n      children: children,\n      ref: function ref(node) {\n        _this11.parentData.domNode = node;\n      }\n    });\n\n    return createElement(typeName, props);\n  };\n\n  return FlipMove;\n}(Component);\n\nvar enhancedFlipMove = /* #__PURE__ */propConverter(FlipMove$1);\n\n/**\n * React Flip Move\n * (c) 2016-present Joshua Comeau\n */\n\nexport default enhancedFlipMove;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-flip-move/dist/react-flip-move.es.js\n// module id = 2181\n// module chunks = 4","import React from 'react'\nimport {injectIntl} from \"react-intl\";\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport {connect} from \"react-redux\";\nimport {keyBy, max, sortBy} from \"lodash\";\nimport _ from \"lodash\";\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\nexport class MultiLineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    if(_.isEmpty(this.props.data)){\n      //return false\n    }\n    if (_.isEqual(this.props.data, nextProps.data)) {\n      return false\n    }\n\n    return true\n  }\n  initLine(id) {\n\n    let {intl, data, newCandidates} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.multiLineChart.title.text = '';\n    config.multiLineChart.xAxis.data = [];\n    config.multiLineChart.series = [];\n    config.multiLineChart.legend.data=[];\n    if (data && data.length > 0) {\n      let stats = {};\n      let addresses = {};\n      for (let row of data) {\n        if (!stats[row.timestamp]) {\n          stats[row.timestamp] = [];\n        }\n        stats[row.timestamp].push({\n          address: row.address,\n          votes: row.votes,\n        });\n        addresses[row.address] = true;\n      }\n\n      let latestTimestamp = max(Object.keys(stats));\n      let highestAddresses = keyBy(sortBy(stats[latestTimestamp], s => s.votes * -1));\n      let rowStats = [];\n\n      for (let [key, value] of Object.entries(stats)) {\n        let row = {\n          timestamp: key,\n          datetime: intl.formatTime(parseInt(key)),\n        };\n        for (let entry of value) {\n          if (typeof highestAddresses[entry.address] !== 'undefined') {\n            row[entry.address] = entry.votes;\n          }\n        }\n        rowStats.push(row);\n      }\n\n      rowStats = sortBy(rowStats, s => s.timestamp);\n\n      let xAxis = [];\n      for (let index in rowStats) {\n        xAxis.push(rowStats[index].datetime);\n      }\n\n      let yAxis = [];\n      let flag=false;\n\n      for (let candy in newCandidates) {\n        let temp = [];\n        for (let stat in stats) {\n          for (let ss in stats[stat]) {\n            if (stats[stat][ss].address === newCandidates[candy].address) {\n              temp.push(stats[stat][ss].votes);\n              flag=true;\n              break;\n            }\n          }\n          if(!flag)\n            temp.push(0);\n          if(flag)\n            flag=false;\n        }\n        temp=temp.slice(0,temp.length-2);\n\n        yAxis.push({key: newCandidates[candy].address, url: newCandidates[candy].url, data: temp});\n      }\n\n      let newYAxis = yAxis.slice(0, 10);\n\n      config.multiLineChart.xAxis.data = xAxis.slice(2,xAxis.length);\n\n      newYAxis.map((val, index) => {\n        config.multiLineChart.legend.data.push(val.url);\n        config.multiLineChart.series.push({\n          name: val.url,\n          data: val.data,\n          type: 'line',\n          smooth: true\n        })\n\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.multiLineChart.title.text = \"No data\";\n    }\n\n    myChart.setOption(config.multiLineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(MultiLineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/MultiLineChart.js"],"sourceRoot":""}