{"version":3,"sources":["../static/js/Markets.34e98f62.chunk.js","components/markets/index.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/LineChart.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/helper/createListSimply.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/processor/dataFilter.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","components/markets/MarketOverview.js","components/common/RingPieChart.js"],"names":["webpackJsonp","2096","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","volumeGraph","volume","defineProperty","_regenerator","_regenerator2","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_reactIntl","_reactRedux","_markets","_MarketOverview","_MarketOverview2","_loaders","_api","_LineChart","_LineChart2","_RingPieChart","_RingPieChart2","Markets","_React$Component","_this2","_this","getPrototypeOf","loadMarketData","mark","_callee","wrap","_context","prev","next","loadPriceData","Client","getMarkets","sent","setState","stop","formatTableData","intl","data","sort","a","b","rank","map","val","push","name","pair","volumeNative","formatNumber","volumePercentage","maximumFractionDigits","minimumFractionDigits","slice","customizedColumn","title","formatMessage","id","dataIndex","sorter","width","filterDropdown","_props","tableData","column","createElement","className","style","height","TronLoader","message","keysData","format","time","date","Component","mapDispatchToProps","connect","pure","injectIntl","2177","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","get","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","hasOwnProperty","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","2178","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","2199","LineReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","Math","random","lineId","myChart","getInstanceByDom","document","getElementById","lineChart","href","link","xAxis","series","formatDate","formatTime","setOption","initLine","2234","createDataSelectAction","dataColor","pieLayout","dataFilter","event","method","registerVisual","registerLayout","registerProcessor","2235","createListSimply","modelUtil","_number","getPercentWithPrecision","dataSelectableMixin","_dataProvider","retrieveRawAttr","PieSeries","extendSeriesModel","superApply","getRawData","updateSelectedMap","_createSelectableList","_defaultLabelLine","newOption","getInitialData","valueDim","mapDimension","targetList","len","count","params","valueList","percent","hostModel","defaultEmphasis","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","emphasis","label","legendHoverLink","hoverAnimation","center","radius","clockwise","startAngle","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","rotate","position","length2","smooth","lineStyle","itemStyle","animationType","animationEasing","mixin","2236","opt","nameList","isArray","coordDimensions","source","getSource","dimensionsInfo","createDimensions","list","List","initData","_util","2237","_targetList","_selectTargetMap","reduce","targetMap","2238","updateDataSelected","uid","hasAnimation","from","seriesId","toggleItemSelected","getItemGraphicEl","getItemLayout","layout","midAngle","endAngle","dx","cos","dy","sin","offset","animate","when","start","PiePiece","onEmphasis","polyline","ignore","hoverIgnore","onNormal","normalIgnore","sector","Sector","z2","Polyline","updateData","ChartView","piePieceProto","firstCreate","stopAnimation","animateTo","r","childAt","getItemModel","sectorShape","setShape","getShallow","r0","initProps","updateProps","visualColor","useStyle","lineJoin","fill","getItemStyle","hoverStyle","cursorStyle","off","isAnimationEnabled","_updateLabel","labelText","labelLayout","points","linePoints","rotation","origin","labelModel","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","verticalAlign","opacity","setStyle","stroke","getLineStyle","inherits","PieView","sectorGroup","_sectorGroup","payload","oldData","isFirstRender","onSectorClick","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","execute","max","removeClipPath","bind","setClipPath","_createClipPath","cx","cy","dispose","cb","clipPath","PI","containPoint","point","itemLayout","sqrt","2239","seriesType","actionInfos","actionInfo","registerAction","eachComponent","mainType","subType","query","2240","getTargetSeries","paletteScope","seiresModelMap","eachSeriesByType","__paletteScope","reset","dataAll","idxMap","rawIdx","getRawIndex","filteredIdx","singleDataColor","setItemVisual","getColorFromPalette","2241","min","parsePercent","RADIAN","validDataCount","isNaN","sum","getSum","unitRadian","roseType","extent","getDataExtent","restAngle","PI2","valueSumLargerThanMinAngle","currentAngle","dir","angle","setItemLayout","NaN","linearMap","2242","adjustSingleSide","viewWidth","viewHeight","shiftUp","end","delta","j","changeX","isDownList","lastDeltaX","Number","MAX_VALUE","l","deltaY","abs","len2","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","dist","hasLabelRotate","textY","labelPosition","labelLineLen","labelLineLen2","isLabelInside","x1","y1","x2","y2","x3","y3","font","getFont","labelRotate","getFormattedLabel","textRect","textContain","2243","legendModels","findComponents","filterSelf","2244","legendFilter","registerSubTypeDefaulter","2245","legendSelectActionHandler","methodName","selectedMap","isToggleSelect","model","isItemSelected","2246","filterSeries","2247","mergeAndNormalizeLayoutParams","raw","getOrient","index","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","2248","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","me","_pageGo","controllerGroup","pageTextStyleModel","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","retrieve2","clipShape","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","cursor","pageText","current","total","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","ceil","itemLoc","floor","winRect","startIdx","children","intersect","startItem","startRect","2249","2465","_extends","assign","_i18n","_antd","MarketOverview","_Component","onInputChange","e","searchText","onReset","onSearch","reg","RegExp","filterDropdownVisible","filtered","record","match","split","toLowerCase","filter","setColumn","compare","property","obj1","obj2","Input","ref","ele","searchInput","placeholder","onChange","onPressEnter","Button","onClick","tu","filterIcon","Icon","onFilterDropdownVisibleChange","visible","focus","columns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","col","temp","return","Table","dataSource","2466","_toConsumableArray","arr","Array","arr2","RingPieReact","pieId","ringPieChart","legend","sortObj","pairData","exchanges","subCount","finalExchanges","finalPairData","initPie"],"mappings":"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","file":"static/js/Markets.34e98f62.chunk.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 2096:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(14);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactIntl=__webpack_require__(17);var _reactRedux=__webpack_require__(16);var _markets=__webpack_require__(746);var _i18n=__webpack_require__(13);var _MarketOverview=__webpack_require__(2465);var _MarketOverview2=_interopRequireDefault(_MarketOverview);var _loaders=__webpack_require__(40);var _api=__webpack_require__(15);var _LineChart=__webpack_require__(2199);var _LineChart2=_interopRequireDefault(_LineChart);var _RingPieChart=__webpack_require__(2466);var _RingPieChart2=_interopRequireDefault(_RingPieChart);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Markets=function(_React$Component){_inherits(Markets,_React$Component);function Markets(){var _this2=this;_classCallCheck(this,Markets);var _this=_possibleConstructorReturn(this,(Markets.__proto__||Object.getPrototypeOf(Markets)).call(this));_this.loadMarketData=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var markets;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.props.loadPriceData();_context.next=3;return _api.Client.getMarkets();case 3:markets=_context.sent;_this.setState({markets:markets});case 5:case\"end\":return _context.stop();}}},_callee,_this2);}));_this.formatTableData=function(markets){var intl=_this.props.intl;var data=[];markets.sort(function(a,b){return a.rank-b.rank;});if(markets.length){markets.map(function(val){data.push({key:val.rank,rank:val.rank,name:val.name,pair:val.pair,volumeNative:intl.formatNumber(val.volumeNative)+' TRX',volumePercentage:intl.formatNumber(val.volumePercentage,{maximumFractionDigits:2,minimumFractionDigits:2})+'%',price:'$'+intl.formatNumber(val.price,{maximumFractionDigits:8})});});}return data.slice(0,99);};_this.customizedColumn=function(){var intl=_this.props.intl;var column=[{title:intl.formatMessage({id:'rank'}),dataIndex:'rank',key:'rank',sorter:true,width:'5%'},{title:intl.formatMessage({id:'exchange'}),dataIndex:'name',key:'name',filterDropdown:true},{title:intl.formatMessage({id:'pair'}),dataIndex:'pair',key:'pair',width:'12%'},{title:intl.formatMessage({id:'volume'}),dataIndex:'volumeNative',key:'volumeNative',width:'14%'},{title:'%',dataIndex:'volumePercentage',key:'volumePercentage',width:'8%'},{title:intl.formatMessage({id:'price'}),dataIndex:'price',key:'price',width:'10%'}];return column;};_this.state={priceGraph:[],volumeGraph:[],markets:[]};return _this;}_createClass(Markets,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadMarketData();}},{key:\"render\",value:function render(){var _props=this.props,intl=_props.intl,priceGraph=_props.priceGraph,volumeGraph=_props.volumeGraph;var markets=this.state.markets;var tableData=this.formatTableData(markets);var column=this.customizedColumn();return _react2.default.createElement(\"main\",{className:\"container header-overlap pb-3\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:300}},priceGraph.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_price_usd'},style:{height:300},data:priceGraph,keysData:['time','close'],format:{time:true,date:true}}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:300}},volumeGraph.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_volume_usd'},style:{height:300},data:volumeGraph,keysData:['time','volume'],format:{time:true}})))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(_RingPieChart2.default,{message:{id:'Trade Volume'},style:{height:700},data:markets}))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(_MarketOverview2.default,{tableData:tableData,column:column}))));}}]);return Markets;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price,volumeGraph:state.markets.volume};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(Markets));\n\n/***/ }),\n\n/***/ 2177:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\nvar zrUtil = __webpack_require__(6);\n\nvar Model = __webpack_require__(72);\n\nvar _model = __webpack_require__(28);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2178:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(31);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(23);\n\nvar zrUtil = __webpack_require__(6);\n\nvar _symbol = __webpack_require__(251);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(27);\n\nvar _listComponent = __webpack_require__(751);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(80);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2199:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(16);var _reactIntl=__webpack_require__(17);var _chartConfig=__webpack_require__(387);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(23);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(747);__webpack_require__(388);__webpack_require__(389);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:\"initLine\",value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text=intl.formatMessage({id:message.id});if(message.href)_chartConfig2.default.lineChart.title.link='#/blockchain/stats/'+message.href;_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{if((val[keysData[0]]+\"\").length===10)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));if((val[keysData[0]]+\"\").length===13)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));}}else{_chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);}_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ }),\n\n/***/ 2234:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\nvar zrUtil = __webpack_require__(6);\n\n__webpack_require__(2235);\n\n__webpack_require__(2238);\n\nvar createDataSelectAction = __webpack_require__(2239);\n\nvar dataColor = __webpack_require__(2240);\n\nvar pieLayout = __webpack_require__(2241);\n\nvar dataFilter = __webpack_require__(2243);\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n\n/***/ 2235:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\nvar createListSimply = __webpack_require__(2236);\n\nvar zrUtil = __webpack_require__(6);\n\nvar modelUtil = __webpack_require__(28);\n\nvar _number = __webpack_require__(38);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(2237);\n\nvar _dataProvider = __webpack_require__(155);\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2236:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(391);\n\nvar List = __webpack_require__(250);\n\nvar _util = __webpack_require__(6);\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2237:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(6);\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2238:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(6);\n\nvar graphic = __webpack_require__(27);\n\nvar ChartView = __webpack_require__(390);\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2239:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\nvar zrUtil = __webpack_require__(6);\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2240:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(6);\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2241:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(38);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(2242);\n\nvar zrUtil = __webpack_require__(6);\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2242:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(104);\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2243:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2244:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\n__webpack_require__(2177);\n\n__webpack_require__(2245);\n\n__webpack_require__(2178);\n\nvar legendFilter = __webpack_require__(2246);\n\nvar Component = __webpack_require__(88);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 2245:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\nvar zrUtil = __webpack_require__(6);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 2246:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2247:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(2177);\n\nvar _layout = __webpack_require__(80);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2248:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(6);\n\nvar graphic = __webpack_require__(27);\n\nvar layoutUtil = __webpack_require__(80);\n\nvar LegendView = __webpack_require__(2178);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2249:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(23);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 2465:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _i18n=__webpack_require__(13);var _api=__webpack_require__(15);var _Links=__webpack_require__(18);var _reactIntl=__webpack_require__(17);var _Price=__webpack_require__(71);var _antd=__webpack_require__(761);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var MarketOverview=function(_Component){_inherits(MarketOverview,_Component);function MarketOverview(){_classCallCheck(this,MarketOverview);var _this=_possibleConstructorReturn(this,(MarketOverview.__proto__||Object.getPrototypeOf(MarketOverview)).call(this));_this.onInputChange=function(e){_this.setState({searchText:e.target.value});};_this.onReset=function(){_this.setState({searchText:''},function(){_this.onSearch();});};_this.onSearch=function(){var tableData=_this.props.tableData;var searchText=_this.state.searchText;var reg=new RegExp(searchText,'gi');_this.setState({filterDropdownVisible:false,filtered:!!searchText,data:tableData.map(function(record){var match=record.name.match(reg);if(!match){return null;}return _extends({},record,{name:_react2.default.createElement(\"span\",null,record.name.split(new RegExp(\"(?<=\"+searchText+\")|(?=\"+searchText+\")\",'i')).map(function(text,i){return text.toLowerCase()===searchText.toLowerCase()?_react2.default.createElement(\"span\",{key:i,className:\"highlight\"},text):text// eslint-disable-line\n;}))});}).filter(function(record){return!!record;})});};_this.setColumn=function(column){function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}var filter={filterDropdown:_react2.default.createElement(\"div\",{className:\"custom-filter-dropdown\"},_react2.default.createElement(_antd.Input,{ref:function ref(ele){return _this.searchInput=ele;},placeholder:\"Search name\",value:_this.state.searchText,onChange:_this.onInputChange,onPressEnter:_this.onSearch}),_react2.default.createElement(_antd.Button,{type:\"primary\",onClick:_this.onSearch},(0,_i18n.tu)(\"search\")),_react2.default.createElement(_antd.Button,{className:\"btn-secondary ml-1\",onClick:_this.onReset},(0,_i18n.tu)(\"reset\"))),filterIcon:_react2.default.createElement(_antd.Icon,{type:\"filter\",style:{color:_this.state.filtered?'#108ee9':'#aaa'}}),filterDropdownVisible:_this.state.filterDropdownVisible,onFilterDropdownVisibleChange:function onFilterDropdownVisibleChange(visible){_this.setState({filterDropdownVisible:visible},function(){_this.searchInput&&_this.searchInput.focus();});}};var columns=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=column[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var col=_step.value;if(col.sorter&&!col.filterDropdown){var temp={sorter:compare(col.key)};columns.push(_extends({},col,temp));}else if(!col.sorter&&col.filterDropdown){var _temp=_extends({},filter);columns.push(_extends({},col,_temp));}else if(col.sorter&&col.filterDropdown){var _temp2=_extends({sorter:compare(col.key)},filter);columns.push(_extends({},col,_temp2));}else{columns.push(col);}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return columns;/*\n    const columns = [\n      {\n        title: 'rank',\n        dataIndex: 'rank',\n        key: 'rank',\n        sorter: compare('rank')\n      },\n      {\n        title: 'name',\n        dataIndex: 'name',\n        key: 'name',\n        filterDropdown: (\n            <div className=\"custom-filter-dropdown\">\n              <Input\n                  ref={ele => this.searchInput = ele}\n                  placeholder=\"Search name\"\n                  value={this.state.searchText}\n                  onChange={this.onInputChange}\n                  onPressEnter={this.onSearch}\n              />\n              <Button type=\"primary\" onClick={this.onSearch}>Search</Button>\n            </div>\n        ),\n        filterIcon: <Icon type=\"filter\" style={{color: this.state.filtered ? '#108ee9' : '#aaa'}}/>,\n        filterDropdownVisible: this.state.filterDropdownVisible,\n        onFilterDropdownVisibleChange: (visible) => {\n\n          this.setState({\n            filterDropdownVisible: visible,\n          }, () => {\n            this.searchInput && this.searchInput.focus()\n          });\n        },\n      },\n      {\n        title: 'pair',\n        dataIndex: 'pair',\n        key: 'pair'\n      },\n      {\n        title: 'volumeNative',\n        dataIndex: 'volumeNative',\n        key: 'volumeNative',\n      }\n    ];\n    return columns;\n    */};_this.state={markets:[],filterDropdownVisible:false,data:[],columns:[],searchText:'',filtered:false};return _this;}_createClass(MarketOverview,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){var column=this.props.column;var columns=this.setColumn(column);var tableData=this.props.tableData;var data=this.state.data;if(data.length){tableData=this.state.data;}/*\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n*/// markets = markets.sort(compare(\"rank\")).slice(0, 99);\n//console.log(markets);\nreturn _react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(_antd.Table,{columns:columns,dataSource:tableData}));}}]);return MarketOverview;}(_react.Component);exports.default=MarketOverview;\n\n/***/ }),\n\n/***/ 2466:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(16);var _reactIntl=__webpack_require__(17);var _chartConfig=__webpack_require__(387);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(23);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(2234);__webpack_require__(388);__webpack_require__(389);__webpack_require__(2244);__webpack_require__(2247);__webpack_require__(2248);__webpack_require__(2249);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(RingPieReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Markets.34e98f62.chunk.js","import React, {Fragment} from \"react\";\nimport {injectIntl} from \"react-intl\";\nimport {connect} from \"react-redux\";\nimport {loadPriceData} from \"../../actions/markets\";\nimport {tu} from \"../../utils/i18n\";\nimport MarketOverview from \"./MarketOverview\";\nimport {TronLoader} from \"../common/loaders\";\nimport {Client} from \"../../services/api\";\nimport LineReact from \"../common/LineChart\";\nimport RingPieReact from \"../common/RingPieChart\";\n\nclass Markets extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      priceGraph: [],\n      volumeGraph: [],\n      markets: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadMarketData();\n  }\n\n  loadMarketData = async () => {\n    this.props.loadPriceData();\n\n    let markets = await Client.getMarkets();\n\n    this.setState({\n      markets,\n    });\n  };\n\n  formatTableData = (markets) => {\n    let {intl} = this.props;\n    let data = [];\n    markets.sort((a, b) => a.rank - b.rank);\n    if (markets.length) {\n      markets.map((val) => {\n        data.push({\n          key: val.rank,\n          rank: val.rank,\n          name: val.name,\n          pair: val.pair,\n          volumeNative: intl.formatNumber(val.volumeNative) + ' TRX',\n          volumePercentage: intl.formatNumber(val.volumePercentage, {\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2\n          }) + '%',\n          price: '$' + intl.formatNumber(val.price, {maximumFractionDigits: 8})\n        });\n\n      })\n    }\n    return data.slice(0, 99);\n  }\n\n\n  customizedColumn = () => {\n    let {intl} = this.props;\n    let column = [\n      {\n        title: intl.formatMessage({id: 'rank'}),\n        dataIndex: 'rank',\n        key: 'rank',\n        sorter: true,\n        width: '5%'\n      },\n      {\n        title: intl.formatMessage({id: 'exchange'}),\n        dataIndex: 'name',\n        key: 'name',\n        filterDropdown: true\n      },\n      {\n        title: intl.formatMessage({id: 'pair'}),\n        dataIndex: 'pair',\n        key: 'pair',\n        width: '12%'\n      },\n      {\n        title: intl.formatMessage({id: 'volume'}),\n        dataIndex: 'volumeNative',\n        key: 'volumeNative',\n        width: '14%'\n      },\n      {\n        title: '%',\n        dataIndex: 'volumePercentage',\n        key: 'volumePercentage',\n        width: '8%'\n      },\n      {\n        title: intl.formatMessage({id: 'price'}),\n        dataIndex: 'price',\n        key: 'price',\n        width: '10%'\n      }\n    ];\n\n    return column;\n  }\n\n  render() {\n\n    let {intl, priceGraph, volumeGraph} = this.props;\n    let {markets} = this.state;\n    let tableData = this.formatTableData(markets);\n    let column = this.customizedColumn();\n\n    return (\n        <main className=\"container header-overlap pb-3\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 300}}>\n                    {\n                      priceGraph.length === 0 ?\n                          <TronLoader/> :\n                          <LineReact message={{id: 'average_price_usd'}} style={{height: 300}}\n                                     data={priceGraph} keysData={['time', 'close']}\n                                     format={{time: true, date: true}}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 300}}>\n                    {\n                      volumeGraph.length === 0 ?\n                          <TronLoader/> :\n                          <LineReact message={{id: 'average_volume_usd'}} style={{height: 300}}\n                                     data={volumeGraph} keysData={['time', 'volume']}\n                                     format={{time: true}}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <RingPieReact message={{id:'Trade Volume'}} style={{height: 700}} data={markets}/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <MarketOverview tableData={tableData} column={column}/>\n            </div>\n          </div>\n        </main>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price,\n    volumeGraph: state.markets.volume,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadPriceData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(Markets));\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/markets/index.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 2177\n// module chunks = 3 6","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 2178\n// module chunks = 3 6","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format, message} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n\n    config.lineChart.title.text = intl.formatMessage({id: message.id});\n    if(message.href)\n      config.lineChart.title.link = '#/blockchain/stats/' + message.href;\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n\n    if (data && data.length > 0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            if ((val[keysData[0]] + \"\").length === 10)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n            if ((val[keysData[0]] + \"\").length === 13)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));\n          }\n        }\n        else {\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n        }\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.lineChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 2234\n// module chunks = 0 3","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 2235\n// module chunks = 0 3","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = 2236\n// module chunks = 0 3","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 2237\n// module chunks = 0 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 2238\n// module chunks = 0 3","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 2239\n// module chunks = 0 3","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 2240\n// module chunks = 0 3","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 2241\n// module chunks = 0 3","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 2242\n// module chunks = 0 3","function _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 2243\n// module chunks = 0 3","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 2244\n// module chunks = 3 6","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 2245\n// module chunks = 3 6","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 2246\n// module chunks = 3 6","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 2247\n// module chunks = 3 6","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 2248\n// module chunks = 3 6","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 2249\n// module chunks = 3 6","import React, {Component} from \"react\";\nimport {tu} from \"../../utils/i18n\";\nimport {Client} from \"../../services/api\";\nimport {ExternalLink} from \"../common/Links\";\nimport {FormattedNumber} from \"react-intl\";\nimport {TRXPrice} from \"../common/Price\";\nimport {Table, Input, Button, Icon} from 'antd';\n\nexport default class MarketOverview extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      markets: [],\n      filterDropdownVisible: false,\n      data: [],\n      columns: [],\n      searchText: '',\n      filtered: false,\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  onInputChange = (e) => {\n    this.setState({searchText: e.target.value});\n  }\n  onReset = () => {\n    this.setState({searchText: ''}, () => {\n      this.onSearch();\n    });\n  }\n  onSearch = () => {\n    let {tableData} = this.props;\n    const {searchText} = this.state;\n    const reg = new RegExp(searchText, 'gi');\n    this.setState({\n      filterDropdownVisible: false,\n      filtered: !!searchText,\n      data: tableData.map((record) => {\n        const match = record.name.match(reg);\n        if (!match) {\n          return null;\n        }\n        return {\n          ...record,\n          name: (\n              <span>\n              {record.name.split(new RegExp(`(?<=${searchText})|(?=${searchText})`, 'i')).map((text, i) => (\n                  text.toLowerCase() === searchText.toLowerCase()\n                      ? <span key={i} className=\"highlight\">{text}</span> : text // eslint-disable-line\n              ))}\n            </span>\n          ),\n        };\n      }).filter(record => !!record),\n    });\n  }\n\n\n  setColumn = (column) => {\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n    let filter = {\n      filterDropdown: (\n          <div className=\"custom-filter-dropdown\">\n            <Input\n                ref={ele => this.searchInput = ele}\n                placeholder=\"Search name\"\n                value={this.state.searchText}\n                onChange={this.onInputChange}\n                onPressEnter={this.onSearch}\n            />\n            <Button type=\"primary\" onClick={this.onSearch}>{tu(\"search\")}</Button>\n            <Button className=\"btn-secondary ml-1\" onClick={this.onReset}>{tu(\"reset\")}</Button>\n          </div>\n      ),\n      filterIcon: <Icon type=\"filter\" style={{color: this.state.filtered ? '#108ee9' : '#aaa'}}/>,\n      filterDropdownVisible: this.state.filterDropdownVisible,\n      onFilterDropdownVisibleChange: (visible) => {\n\n        this.setState({\n          filterDropdownVisible: visible,\n        }, () => {\n          this.searchInput && this.searchInput.focus()\n        });\n      }\n    }\n\n    let columns=[];\n\n    for(let col of column){\n      if(col.sorter && !col.filterDropdown) {\n        let temp={sorter: compare(col.key)}\n        columns.push({...col,...temp});\n      }\n      else if(!col.sorter && col.filterDropdown){\n        let temp={...filter}\n        columns.push({...col,...temp});\n      }\n      else if(col.sorter && col.filterDropdown){\n        let temp={sorter: compare(col.key), ...filter}\n        columns.push({...col,...temp});\n      }\n      else{\n        columns.push(col);\n      }\n\n    }\n\n    return columns;\n    /*\n    const columns = [\n      {\n        title: 'rank',\n        dataIndex: 'rank',\n        key: 'rank',\n        sorter: compare('rank')\n      },\n      {\n        title: 'name',\n        dataIndex: 'name',\n        key: 'name',\n        filterDropdown: (\n            <div className=\"custom-filter-dropdown\">\n              <Input\n                  ref={ele => this.searchInput = ele}\n                  placeholder=\"Search name\"\n                  value={this.state.searchText}\n                  onChange={this.onInputChange}\n                  onPressEnter={this.onSearch}\n              />\n              <Button type=\"primary\" onClick={this.onSearch}>Search</Button>\n            </div>\n        ),\n        filterIcon: <Icon type=\"filter\" style={{color: this.state.filtered ? '#108ee9' : '#aaa'}}/>,\n        filterDropdownVisible: this.state.filterDropdownVisible,\n        onFilterDropdownVisibleChange: (visible) => {\n\n          this.setState({\n            filterDropdownVisible: visible,\n          }, () => {\n            this.searchInput && this.searchInput.focus()\n          });\n        },\n      },\n      {\n        title: 'pair',\n        dataIndex: 'pair',\n        key: 'pair'\n      },\n      {\n        title: 'volumeNative',\n        dataIndex: 'volumeNative',\n        key: 'volumeNative',\n      }\n    ];\n    return columns;\n    */\n  }\n\n\n  render() {\n    let column = this.props.column;\n    let columns = this.setColumn(column);\n    let {tableData} = this.props;\n    let {data} = this.state;\n    if(data.length){\n      tableData = this.state.data;\n    }\n/*\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n*/\n   // markets = markets.sort(compare(\"rank\")).slice(0, 99);\n    //console.log(markets);\n\n\n    return (\n\n\n        <div className=\"card\">\n          <Table columns={columns} dataSource={tableData}/>\n          {/*\n            <table className=\"table table-hover bg-white m-0 table-striped\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th style={{width: 25}}>{tu(\"rank\")}</th>\n                <th>{tu(\"exchange\")}</th>\n                <th className=\"d-none d-sm-table-cell\" style={{width: 75}}>{tu(\"pair\")}</th>\n                <th className=\"d-none d-md-table-cell\" style={{width: 100}}>{tu(\"volume\")}</th>\n                <th className=\"d-none d-md-table-cell\" style={{width: 75}}>%</th>\n                <th className=\"text-right\" style={{width: 100}}>{tu(\"price\")}</th>\n              </tr>\n            </thead>\n            <tbody>\n            {\n              markets.map(market => (\n                <tr key={market.rank}>\n                  <th>\n                    {market.rank}\n                  </th>\n                  <td>\n                    <ExternalLink url={market.link}>{market.name}</ExternalLink>\n                  </td>\n                  <td className=\"d-none d-sm-table-cell\" style={{width: 75}}>\n                    <ExternalLink url={market.link}>{market.pair}</ExternalLink>\n                  </td>\n                  <td className=\"text-nowrap d-none d-md-table-cell\">\n                    <TRXPrice amount={market.volumeNative} />\n                  </td>\n                  <td className=\"text-nowrap d-none d-md-table-cell\">\n                    <FormattedNumber value={market.volumePercentage} maximumFractionDigits={2} />%\n                  </td>\n                  <td className=\"text-right\">\n                    $<FormattedNumber value={market.price} maximumFractionDigits={8} />\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </table>\n          */}\n        </div>\n\n    )\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/markets/MarketOverview.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data,message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if(data && data.length===0){\n      config.ringPieChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js"],"sourceRoot":""}