{"version":3,"sources":["../static/js/Stats.69579190.chunk.js","components/blockchain/Statistics/index.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","utils/tron.js"],"names":["webpackJsonp","1088","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","defineProperty","_regenerator","_regenerator2","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_index","_index2","_i18n","_api","_constants","_reactRedux","_reactIntl","_lodash","_tron","_loaders","_LineCharts","_RingPieChart","_markets","Statistics","_React$Component","_this","getPrototypeOf","accounts","transactionStats","blockStats","transactionValueStats","txOverviewStats","addressesStats","blockSizeStats","blockchainSizeStats","priceStats","volume","pieChart","loadAccounts","loadStats","loadTxOverviewStats","_ref","mark","_callee","_ref2","wrap","_context","prev","next","Client","getAccounts","limit","sort","sent","setState","filter","account","includes","tronAddresses","address","slice","map","name","balance","ONE_TRX","stop","_ref3","_callee2","intl","_ref4","stats","_ref5","transactionTotalStats","valueStats","_context2","getTransferStats","groupby","interval","getBlockStats","total","row","timestamp","_ref6","_callee3","today","timerToday","birthday","timerBirthday","dayNum","_ref7","data","priceStatsTemp","volumeData","volumeUSD","_ref8","statisticData","pieChartData","_ref9","temp","addressesTemp","blockSizeStatsTemp","blockchainSizeStatsTemp","txs","tx","_context3","Date","getTime","Math","floor","get","volume_usd","v","time","volume_billion","pow","formatNumber","getStatisticData","val","push","url","volumeValue","blockProduced","volumePercentage","percentage","maximumFractionDigits","minimumFractionDigits","getTxOverviewStats","parseInt","date","newAddressSeen","increment","totalTransaction","avgBlockTime","avgBlockSize","totalBlockCount","blockchainSize","_state","createElement","className","role","tu","type","data-dismiss","aria-label","aria-hidden","style","height","TronLoader","LineReactTx","LineReactAdd","LineReactBlockSize","LineReactBlockchainSize","LineReactPrice","LineReactVolumeUsd","RepresentativesRingPieReact","message","id","Component","mapDispatchToProps","loadPriceData","connect","injectIntl","1134","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","hasOwnProperty","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","1135","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1154","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","random","pieId","compare","property","obj1","obj2","_props","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","pairData","exchanges","index","pair","subCount","finalExchanges","finalPairData","setOption","initPie","_React$Component2","_this2","_props2","source","representPieChart","link","datas","percent","toolbox","feature","restore","saveAsImage","reverse","1155","legendFilter","registerProcessor","registerSubTypeDefaulter","1156","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1157","legendModels","findComponents","mainType","filterSeries","1158","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1159","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","setStyle","cursor","pageText","current","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","winRect","startIdx","children","intersect","startItem","startRect","1160","subType","query","1230"],"mappings":"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","file":"static/js/Stats.69579190.chunk.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 1088:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(4);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _index=__webpack_require__(58);var _index2=_interopRequireDefault(_index);var _i18n=__webpack_require__(10);var _api=__webpack_require__(7);var _constants=__webpack_require__(36);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _lodash=__webpack_require__(18);var _tron=__webpack_require__(1230);var _loaders=__webpack_require__(26);var _LineCharts=__webpack_require__(419);var _RingPieChart=__webpack_require__(1154);var _markets=__webpack_require__(417);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Statistics=function(_React$Component){_inherits(Statistics,_React$Component);function Statistics(){_classCallCheck(this,Statistics);var _this=_possibleConstructorReturn(this,(Statistics.__proto__||Object.getPrototypeOf(Statistics)).call(this));_this.state={accounts:null,transactionStats:null,blockStats:null,transactionValueStats:null,txOverviewStats:null,addressesStats:null,blockSizeStats:null,blockchainSizeStats:null,priceStats:null,volume:null,pieChart:null};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadAccounts();this.loadStats();this.loadTxOverviewStats();}},{key:\"loadAccounts\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var _ref2,accounts;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getAccounts({limit:35,sort:'-balance'});case 2:_ref2=_context.sent;accounts=_ref2.accounts;this.setState({accounts:(0,_lodash.filter)(accounts,function(account){return!(0,_lodash.includes)(_tron.tronAddresses,account.address);}).slice(0,10).map(function(account){return{name:account.address,value:account.balance/_constants.ONE_TRX};})});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function loadAccounts(){return _ref.apply(this,arguments);}return loadAccounts;}()},{key:\"loadStats\",value:function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var intl,_ref4,stats,_ref5,blockStats,transactionTotalStats,valueStats;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:intl=this.props.intl;_context2.next=3;return _api.Client.getTransferStats({groupby:'timestamp',interval:'hour'});case 3:_ref4=_context2.sent;stats=_ref4.stats;_context2.next=7;return _api.Client.getBlockStats({info:\"avg-block-size\"});case 7:_ref5=_context2.sent;blockStats=_ref5.stats;transactionTotalStats=stats.total.map(function(row){return{timestamp:row.timestamp,value:row.value};});valueStats=stats.value.map(function(row){return{timestamp:row.timestamp,value:row.value/_constants.ONE_TRX};});blockStats=blockStats.map(function(row){return{timestamp:row.timestamp,value:row.value};});this.setState({transactionStats:transactionTotalStats,transactionValueStats:valueStats,blockStats:blockStats});case 13:case\"end\":return _context2.stop();}}},_callee2,this);}));function loadStats(){return _ref3.apply(this,arguments);}return loadStats;}()},{key:\"loadTxOverviewStats\",value:function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var intl,today,timerToday,birthday,timerBirthday,dayNum,_ref7,data,priceStatsTemp,volumeData,volumeUSD,volume,_ref8,statisticData,pieChartData,_ref9,txOverviewStats,temp,addressesTemp,blockSizeStatsTemp,blockchainSizeStatsTemp,txs,tx;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:intl=this.props.intl;today=new Date();timerToday=today.getTime();birthday=new Date(\"2017/10/10\");timerBirthday=birthday.getTime();dayNum=Math.floor((timerToday-timerBirthday)/1000/3600/24);_context3.next=8;return _index2.default.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\"+dayNum);case 8:_ref7=_context3.sent;data=_ref7.data;priceStatsTemp=data['Data'];_context3.next=13;return _index2.default.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\");case 13:volumeData=_context3.sent;volumeUSD=volumeData.data.volume_usd;volume=volumeUSD.map(function(v,i){return{time:v[0],volume_billion:v[1]/Math.pow(10,9),volume_usd:intl.formatNumber(v[1])+' USD'};});_context3.next=18;return _api.Client.getStatisticData();case 18:_ref8=_context3.sent;statisticData=_ref8.statisticData;pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}_context3.next=24;return _api.Client.getTxOverviewStats();case 24:_ref9=_context3.sent;txOverviewStats=_ref9.txOverviewStats;temp=[];addressesTemp=[];blockSizeStatsTemp=[];blockchainSizeStatsTemp=[];for(txs in txOverviewStats){tx=parseInt(txs);if(tx===0){temp.push(txOverviewStats[tx]);addressesTemp.push({date:txOverviewStats[tx].date,total:txOverviewStats[tx].newAddressSeen,increment:txOverviewStats[tx].newAddressSeen});}else{temp.push({date:txOverviewStats[tx].date,totalTransaction:txOverviewStats[tx].totalTransaction-txOverviewStats[tx-1].totalTransaction,avgBlockTime:txOverviewStats[tx].avgBlockTime,avgBlockSize:txOverviewStats[tx].avgBlockSize,totalBlockCount:txOverviewStats[tx].totalBlockCount-txOverviewStats[tx-1].totalBlockCount,newAddressSeen:txOverviewStats[tx].newAddressSeen});addressesTemp.push({date:txOverviewStats[tx].date,total:txOverviewStats[tx].newAddressSeen+addressesTemp[tx-1].total,increment:txOverviewStats[tx].newAddressSeen});}blockSizeStatsTemp.push({date:txOverviewStats[tx].date,avgBlockSize:txOverviewStats[tx].avgBlockSize});blockchainSizeStatsTemp.push({date:txOverviewStats[tx].date,blockchainSize:txOverviewStats[tx].blockchainSize});}this.setState({txOverviewStats:temp,addressesStats:addressesTemp,blockSizeStats:blockSizeStatsTemp,blockchainSizeStats:blockchainSizeStatsTemp,priceStats:priceStatsTemp,volume:volume,pieChart:pieChartData});case 32:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadTxOverviewStats(){return _ref6.apply(this,arguments);}return loadTxOverviewStats;}()},{key:\"render\",value:function render(){var _state=this.state,txOverviewStats=_state.txOverviewStats,addressesStats=_state.addressesStats,transactionStats=_state.transactionStats,transactionValueStats=_state.transactionValueStats,blockStats=_state.blockStats,accounts=_state.accounts,blockSizeStats=_state.blockSizeStats,blockchainSizeStats=_state.blockchainSizeStats,priceStats=_state.priceStats,volume=_state.volume,pieChart=_state.pieChart;var intl=this.props.intl;return _react2.default.createElement(\"main\",{className:\"container header-overlap\"},_react2.default.createElement(\"div\",{className:\"text-center alert alert-light alert-dismissible fade show\",role:\"alert\"},(0,_i18n.tu)(\"click_the_chart_title_to_find_more\"),_react2.default.createElement(\"button\",{type:\"button\",className:\"close\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},_react2.default.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},txOverviewStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactTx,{style:{height:350},data:txOverviewStats,intl:intl}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},addressesStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactAdd,{style:{height:350},data:addressesStats,intl:intl})))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},blockSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockSize,{style:{height:350},data:blockSizeStats,intl:intl}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},blockchainSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockchainSize,{style:{height:350},data:blockchainSizeStats,intl:intl})))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},priceStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactPrice,{style:{height:350},data:priceStats,intl:intl}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},volume===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactVolumeUsd,{style:{height:350},data:volume,intl:intl})))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},pieChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:300}})))))));}}]);return Statistics;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)((0,_reactIntl.injectIntl)(Statistics));\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(9);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(12);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(146);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(8);\n\nvar _listComponent = __webpack_require__(413);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _chartConfig=__webpack_require__(222);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(412);__webpack_require__(223);__webpack_require__(224);__webpack_require__(1155);__webpack_require__(1158);__webpack_require__(1159);__webpack_require__(1160);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var index in data){if(temp.indexOf(data[index].name)<0){temp.push(data[index].name);exchanges.push({name:data[index].name,value:data[index].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1134);\n\n__webpack_require__(1156);\n\n__webpack_require__(1135);\n\nvar legendFilter = __webpack_require__(1157);\n\nvar Component = __webpack_require__(48);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1134);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(8);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1135);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1230:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var tronAddresses=exports.tronAddresses=['27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS','27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj','27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx','27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Stats.69579190.chunk.js","import React from \"react\";\nimport xhr from \"axios/index\";\nimport {tu} from \"../../../utils/i18n\";\nimport {Client} from \"../../../services/api\";\nimport {ONE_TRX} from \"../../../constants\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport {filter, includes} from \"lodash\";\nimport {tronAddresses} from \"../../../utils/tron\";\nimport {TronLoader} from \"../../common/loaders\";\n\nimport {\n  LineReactAdd,\n  LineReactBlockSize,\n  LineReactBlockchainSize,\n  LineReactTx,\n  LineReactPrice,\n  LineReactVolumeUsd\n} from \"../../common/LineCharts\";\nimport {\n  RepresentativesRingPieReact\n} from \"../../common/RingPieChart\";\nimport {loadPriceData} from \"../../../actions/markets\";\n\nclass Statistics extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accounts: null,\n      transactionStats: null,\n      blockStats: null,\n      transactionValueStats: null,\n      txOverviewStats: null,\n      addressesStats: null,\n      blockSizeStats: null,\n      blockchainSizeStats: null,\n      priceStats: null,\n      volume:null,\n      pieChart:null\n    };\n  }\n\n  componentDidMount() {\n    this.loadAccounts();\n    this.loadStats();\n    this.loadTxOverviewStats();\n  }\n\n  async loadAccounts() {\n\n    let {accounts} = await Client.getAccounts({\n      limit: 35,\n      sort: '-balance',\n    });\n\n    this.setState({\n      accounts: filter(accounts, account => !includes(tronAddresses, account.address))\n          .slice(0, 10)\n          .map(account => ({\n            name: account.address,\n            value: account.balance / ONE_TRX,\n          }))\n    });\n  }\n\n\n  async loadStats() {\n\n    let {intl} = this.props;\n\n    let {stats} = await Client.getTransferStats({\n      groupby: 'timestamp',\n      interval: 'hour',\n    });\n\n    let {stats: blockStats} = await Client.getBlockStats({\n      info: `avg-block-size`,\n    });\n\n    let transactionTotalStats = stats.total.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    let valueStats = stats.value.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value / ONE_TRX,\n    }));\n\n    blockStats = blockStats.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    this.setState({\n      transactionStats: transactionTotalStats,\n      transactionValueStats: valueStats,\n      blockStats,\n    });\n  }\n\n  async loadTxOverviewStats() {\n    let {intl} = this.props;\n    let today = new Date();\n    let timerToday = today.getTime();\n\n    var birthday = new Date(\"2017/10/10\");\n    var timerBirthday = birthday.getTime();\n    var dayNum = Math.floor((timerToday - timerBirthday) / 1000 / 3600 / 24);\n\n\n    let {data} = await xhr.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\" + dayNum);\n\n    let priceStatsTemp = data['Data'];\n\n    let volumeData = await xhr.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\",);\n    let volumeUSD = volumeData.data.volume_usd\n    let volume = volumeUSD.map(function (v,i) {\n        return {\n            time:v[0],\n            volume_billion:v[1]/Math.pow(10,9),\n            volume_usd:intl.formatNumber(v[1]) + ' USD'\n        }\n    })\n\n    let {statisticData} = await Client.getStatisticData()\n    let pieChartData = [];\n    if (statisticData.length > 0) {\n        statisticData.map((val,i) => {\n            pieChartData.push({\n                key: i+1,\n                name: val.name?val.name:val.url,\n                volumeValue: intl.formatNumber(val.blockProduced),\n                volumePercentage: intl.formatNumber(val.percentage*100, {\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2\n                }) + '%',\n            });\n\n        })\n    }\n    let {txOverviewStats} = await Client.getTxOverviewStats();\n    let temp = [];\n    let addressesTemp = [];\n    let blockSizeStatsTemp = [];\n    let blockchainSizeStatsTemp = [];\n    for (let txs in txOverviewStats) {\n      let tx = parseInt(txs);\n      if (tx === 0) {\n        temp.push(txOverviewStats[tx]);\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      else {\n        temp.push({\n          date: txOverviewStats[tx].date,\n          totalTransaction: (txOverviewStats[tx].totalTransaction - txOverviewStats[tx - 1].totalTransaction),\n          avgBlockTime: txOverviewStats[tx].avgBlockTime,\n          avgBlockSize: txOverviewStats[tx].avgBlockSize,\n          totalBlockCount: (txOverviewStats[tx].totalBlockCount - txOverviewStats[tx - 1].totalBlockCount),\n          newAddressSeen: txOverviewStats[tx].newAddressSeen\n        });\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen + addressesTemp[tx - 1].total,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      blockSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        avgBlockSize: txOverviewStats[tx].avgBlockSize\n      });\n      blockchainSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        blockchainSize: txOverviewStats[tx].blockchainSize\n      });\n    }\n\n    this.setState({\n      txOverviewStats: temp,\n      addressesStats: addressesTemp,\n      blockSizeStats: blockSizeStatsTemp,\n      blockchainSizeStats: blockchainSizeStatsTemp,\n      priceStats: priceStatsTemp,\n      volume:volume,\n      pieChart: pieChartData\n    });\n  }\n\n  render() {\n\n    let {txOverviewStats, addressesStats, transactionStats, transactionValueStats, blockStats, accounts, blockSizeStats, blockchainSizeStats, priceStats,volume,pieChart} = this.state;\n    let {intl} = this.props;\n\n    return (\n        <main className=\"container header-overlap\">\n          <div className=\"text-center alert alert-light alert-dismissible fade show\" role=\"alert\">\n            {tu(\"click_the_chart_title_to_find_more\")}\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 350}}>\n                    {\n                      txOverviewStats === null ?\n                          <TronLoader/> :\n                          <LineReactTx style={{height: 350}} data={txOverviewStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 350}}>\n                    {\n                      addressesStats === null ?\n                          <TronLoader/> :\n                          <LineReactAdd style={{height: 350}} data={addressesStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 350}}>\n                    {\n                      blockSizeStats === null ?\n                          <TronLoader/> :\n                          <LineReactBlockSize style={{height: 350}} data={blockSizeStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div style={{height: 350}}>\n                    {\n                      blockchainSizeStats === null ?\n                          <TronLoader/> :\n                          <LineReactBlockchainSize style={{height: 350}} data={blockchainSizeStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div style={{height: 350}}>\n                    {\n                      priceStats === null ?\n                          <TronLoader/> :\n                          <LineReactPrice style={{height: 350}} data={priceStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div style={{height: 350}}>\n                      {\n                          volume === null ?\n                              <TronLoader/> :\n                              <LineReactVolumeUsd style={{height: 350}} data={volume} intl={intl}/>\n                      }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {\n\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-3\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div style={{height: 350}}>\n                        {\n                            pieChart === null ?\n                                <TronLoader/> :\n                                <RepresentativesRingPieReact message={{id: 'produce_distribution'}} intl={intl}\n                                                             data={pieChart} style={{height: 300}}/>\n                        }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </main>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price\n  };\n}\n\nconst mapDispatchToProps = {\n  loadPriceData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Statistics))\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blockchain/Statistics/index.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1134\n// module chunks = 1 7 8 9","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1135\n// module chunks = 1 7 8 9","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data,message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if(data && data.length===0){\n      config.ringPieChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let id = ('_' + Math.random()).replace('.', '_');\n        this.state = {\n            pieId: 'ringPie' + id\n        }\n    }\n\n    initPie(id) {\n        let {intl, data,message,source} = this.props;\n        let myChart = echarts.getInstanceByDom(document.getElementById(id));\n        if (myChart === undefined) {\n            myChart = echarts.init(document.getElementById(id));\n        }\n        config.representPieChart.title.text=intl.formatMessage({id:message.id});\n        config.representPieChart.series[0].data = [];\n        config.representPieChart.legend.data = [];\n        config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n        config.representPieChart.tooltip.formatter = function (datas) {\n            return (\n                intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n                intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n                intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n            )\n\n        }\n        if(source==='singleChart'){\n            config.representPieChart.legend.show = true;\n            config.representPieChart.toolbox.feature = {\n                restore: {\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: true,\n                    title: 'save'\n                }\n            }\n        }else{\n            config.representPieChart.legend.show = false;\n            config.representPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        if (data && data.length > 0) {\n            let exchanges = []\n            let temp = [];\n            for (let index in data) {\n                if (temp.indexOf(data[index].name) < 0) {\n                    temp.push(data[index].name)\n                    exchanges.push({name: data[index].name, value: data[index].volumeValue});\n                }\n            }\n\n            exchanges.sort(compare(\"value\")).reverse();\n\n            config.representPieChart.series[0].data = [];\n            config.representPieChart.legend.data = temp;\n            config.representPieChart.series[0].data = exchanges;\n\n        }\n        if(data && data.length===0){\n            config.representPieChart.title.text=\"No data\";\n        }\n        myChart.setOption(config.representPieChart);\n    }\n\n\n    componentDidMount() {\n        this.initPie(this.state.pieId);\n    }\n\n    componentDidUpdate() {\n        this.initPie(this.state.pieId);\n    }\n\n    render() {\n        return (\n            <div>\n              <div id={this.state.pieId} style={this.props.style}></div>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1155\n// module chunks = 1 7 8 9","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1156\n// module chunks = 1 7 8 9","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1157\n// module chunks = 1 7 8 9","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1158\n// module chunks = 1 7 8 9","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1159\n// module chunks = 1 7 8 9","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1160\n// module chunks = 1 7 8 9","\n\nexport const tronAddresses = [\n  '27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS',\n  '27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj',\n  '27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx',\n  '27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tron.js"],"sourceRoot":""}