{"version":3,"sources":["../static/js/Markets.da677aad.chunk.js","components/markets/index.js","components/common/LineChart.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","components/markets/MarketOverview.js","components/common/RingPieChart.js"],"names":["webpackJsonp","2115","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","volumeGraph","volume","defineProperty","_regenerator","_regenerator2","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_reactIntl","_reactRedux","_markets","_MarketOverview","_MarketOverview2","_loaders","_api","_LineChart","_LineChart2","_RingPieChart","_RingPieChart2","Markets","_React$Component","_this2","_this","getPrototypeOf","loadMarketData","mark","_callee","wrap","_context","prev","next","loadPriceData","Client","getMarkets","sent","setState","stop","formatTableData","intl","data","sort","a","b","rank","map","val","push","name","pair","volumeNative","formatNumber","volumePercentage","maximumFractionDigits","minimumFractionDigits","slice","customizedColumn","title","formatMessage","id","dataIndex","sorter","width","filterDropdown","_props","tableData","column","createElement","className","style","height","TronLoader","message","keysData","format","time","date","Component","mapDispatchToProps","connect","pure","injectIntl","2196","LineReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","Math","random","replace","lineId","myChart","getInstanceByDom","document","getElementById","init","lineChart","text","href","link","xAxis","series","formatDate","formatTime","setOption","initLine","2197","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","get","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","hasOwnProperty","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","2198","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","Text","setTextStyle","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","2254","legendFilter","registerProcessor","registerSubTypeDefaulter","2255","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","2256","legendModels","findComponents","mainType","filterSeries","2257","mergeAndNormalizeLayoutParams","raw","getOrient","index","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","2258","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","isArray","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","setStyle","cursor","pageText","current","total","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","floor","winRect","startIdx","children","intersect","startItem","startRect","2259","subType","query","2473","_extends","assign","source","_i18n","_antd","MarketOverview","_Component","onInputChange","e","searchText","onReset","onSearch","reg","RegExp","filterDropdownVisible","filtered","record","match","split","toLowerCase","filter","setColumn","compare","property","obj1","obj2","Input","ref","ele","searchInput","placeholder","onChange","onPressEnter","Button","onClick","tu","filterIcon","Icon","onFilterDropdownVisibleChange","visible","focus","columns","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","col","temp","return","Table","dataSource","2474","_toConsumableArray","arr","Array","arr2","from","RingPieReact","pieId","ringPieChart","legend","sortObj","pairData","exchanges","subCount","finalExchanges","finalPairData","initPie"],"mappings":"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","file":"static/js/Markets.da677aad.chunk.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ 2115:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(14);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactIntl=__webpack_require__(17);var _reactRedux=__webpack_require__(16);var _markets=__webpack_require__(755);var _i18n=__webpack_require__(12);var _MarketOverview=__webpack_require__(2473);var _MarketOverview2=_interopRequireDefault(_MarketOverview);var _loaders=__webpack_require__(36);var _api=__webpack_require__(15);var _LineChart=__webpack_require__(2196);var _LineChart2=_interopRequireDefault(_LineChart);var _RingPieChart=__webpack_require__(2474);var _RingPieChart2=_interopRequireDefault(_RingPieChart);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Markets=function(_React$Component){_inherits(Markets,_React$Component);function Markets(){var _this2=this;_classCallCheck(this,Markets);var _this=_possibleConstructorReturn(this,(Markets.__proto__||Object.getPrototypeOf(Markets)).call(this));_this.loadMarketData=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var markets;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.props.loadPriceData();_context.next=3;return _api.Client.getMarkets();case 3:markets=_context.sent;_this.setState({markets:markets});case 5:case\"end\":return _context.stop();}}},_callee,_this2);}));_this.formatTableData=function(markets){var intl=_this.props.intl;var data=[];markets.sort(function(a,b){return a.rank-b.rank;});if(markets.length){markets.map(function(val){data.push({key:val.rank,rank:val.rank,name:val.name,pair:val.pair,volumeNative:intl.formatNumber(val.volumeNative)+' TRX',volumePercentage:intl.formatNumber(val.volumePercentage,{maximumFractionDigits:2,minimumFractionDigits:2})+'%',price:'$'+intl.formatNumber(val.price,{maximumFractionDigits:8})});});}return data.slice(0,99);};_this.customizedColumn=function(){var intl=_this.props.intl;var column=[{title:intl.formatMessage({id:'rank'}),dataIndex:'rank',key:'rank',sorter:true,width:'5%'},{title:intl.formatMessage({id:'exchange'}),dataIndex:'name',key:'name',filterDropdown:true},{title:intl.formatMessage({id:'pair'}),dataIndex:'pair',key:'pair',width:'12%'},{title:intl.formatMessage({id:'volume'}),dataIndex:'volumeNative',key:'volumeNative',width:'14%'},{title:'%',dataIndex:'volumePercentage',key:'volumePercentage',width:'8%'},{title:intl.formatMessage({id:'price'}),dataIndex:'price',key:'price',width:'10%'}];return column;};_this.state={priceGraph:[],volumeGraph:[],markets:[]};return _this;}_createClass(Markets,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadMarketData();}},{key:\"render\",value:function render(){var _props=this.props,intl=_props.intl,priceGraph=_props.priceGraph,volumeGraph=_props.volumeGraph;var markets=this.state.markets;var tableData=this.formatTableData(markets);var column=this.customizedColumn();return _react2.default.createElement(\"main\",{className:\"container header-overlap pb-3\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:300}},priceGraph.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_price_usd'},style:{height:300},data:priceGraph,keysData:['time','close'],format:{time:true,date:true}}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:300}},volumeGraph.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_volume_usd'},style:{height:300},data:volumeGraph,keysData:['time','volume'],format:{time:true}})))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(_RingPieChart2.default,{message:{id:'Trade Volume'},style:{height:700},data:markets}))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(_MarketOverview2.default,{tableData:tableData,column:column}))));}}]);return Markets;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price,volumeGraph:state.markets.volume};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(Markets));\n\n/***/ }),\n\n/***/ 2196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(16);var _reactIntl=__webpack_require__(17);var _chartConfig=__webpack_require__(190);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(19);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(398);__webpack_require__(191);__webpack_require__(192);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:\"initLine\",value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text=intl.formatMessage({id:message.id});if(message.href)_chartConfig2.default.lineChart.title.link='#/blockchain/stats/'+message.href;_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{if((val[keysData[0]]+\"\").length===10)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));if((val[keysData[0]]+\"\").length===13)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));}}else{_chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);}_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ }),\n\n/***/ 2197:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(19);\n\nvar zrUtil = __webpack_require__(6);\n\nvar Model = __webpack_require__(74);\n\nvar _model = __webpack_require__(28);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(32);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(19);\n\nvar zrUtil = __webpack_require__(6);\n\nvar _symbol = __webpack_require__(260);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(27);\n\nvar _listComponent = __webpack_require__(764);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(81);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2254:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(19);\n\n__webpack_require__(2197);\n\n__webpack_require__(2255);\n\n__webpack_require__(2198);\n\nvar legendFilter = __webpack_require__(2256);\n\nvar Component = __webpack_require__(90);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 2255:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(19);\n\nvar zrUtil = __webpack_require__(6);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 2256:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2257:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(2197);\n\nvar _layout = __webpack_require__(81);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2258:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(6);\n\nvar graphic = __webpack_require__(27);\n\nvar layoutUtil = __webpack_require__(81);\n\nvar LegendView = __webpack_require__(2198);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 2259:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(19);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 2473:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _i18n=__webpack_require__(12);var _api=__webpack_require__(15);var _Links=__webpack_require__(18);var _reactIntl=__webpack_require__(17);var _Price=__webpack_require__(53);var _antd=__webpack_require__(270);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var MarketOverview=function(_Component){_inherits(MarketOverview,_Component);function MarketOverview(){_classCallCheck(this,MarketOverview);var _this=_possibleConstructorReturn(this,(MarketOverview.__proto__||Object.getPrototypeOf(MarketOverview)).call(this));_this.onInputChange=function(e){_this.setState({searchText:e.target.value});};_this.onReset=function(){_this.setState({searchText:''},function(){_this.onSearch();});};_this.onSearch=function(){var tableData=_this.props.tableData;var searchText=_this.state.searchText;var reg=new RegExp(searchText,'gi');_this.setState({filterDropdownVisible:false,filtered:!!searchText,data:tableData.map(function(record){var match=record.name.match(reg);if(!match){return null;}return _extends({},record,{name:_react2.default.createElement(\"span\",null,record.name.split(new RegExp(\"(?<=\"+searchText+\")|(?=\"+searchText+\")\",'i')).map(function(text,i){return text.toLowerCase()===searchText.toLowerCase()?_react2.default.createElement(\"span\",{key:i,className:\"highlight\"},text):text// eslint-disable-line\n;}))});}).filter(function(record){return!!record;})});};_this.setColumn=function(column){function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}var filter={filterDropdown:_react2.default.createElement(\"div\",{className:\"custom-filter-dropdown\"},_react2.default.createElement(_antd.Input,{ref:function ref(ele){return _this.searchInput=ele;},placeholder:\"Search name\",value:_this.state.searchText,onChange:_this.onInputChange,onPressEnter:_this.onSearch}),_react2.default.createElement(_antd.Button,{type:\"primary\",onClick:_this.onSearch},(0,_i18n.tu)(\"search\")),_react2.default.createElement(_antd.Button,{className:\"btn-secondary ml-1\",onClick:_this.onReset},(0,_i18n.tu)(\"reset\"))),filterIcon:_react2.default.createElement(_antd.Icon,{type:\"filter\",style:{color:_this.state.filtered?'#108ee9':'#aaa'}}),filterDropdownVisible:_this.state.filterDropdownVisible,onFilterDropdownVisibleChange:function onFilterDropdownVisibleChange(visible){_this.setState({filterDropdownVisible:visible},function(){_this.searchInput&&_this.searchInput.focus();});}};var columns=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=column[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var col=_step.value;if(col.sorter&&!col.filterDropdown){var temp={sorter:compare(col.key)};columns.push(_extends({},col,temp));}else if(!col.sorter&&col.filterDropdown){var _temp=_extends({},filter);columns.push(_extends({},col,_temp));}else if(col.sorter&&col.filterDropdown){var _temp2=_extends({sorter:compare(col.key)},filter);columns.push(_extends({},col,_temp2));}else{columns.push(col);}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return columns;/*\n    const columns = [\n      {\n        title: 'rank',\n        dataIndex: 'rank',\n        key: 'rank',\n        sorter: compare('rank')\n      },\n      {\n        title: 'name',\n        dataIndex: 'name',\n        key: 'name',\n        filterDropdown: (\n            <div className=\"custom-filter-dropdown\">\n              <Input\n                  ref={ele => this.searchInput = ele}\n                  placeholder=\"Search name\"\n                  value={this.state.searchText}\n                  onChange={this.onInputChange}\n                  onPressEnter={this.onSearch}\n              />\n              <Button type=\"primary\" onClick={this.onSearch}>Search</Button>\n            </div>\n        ),\n        filterIcon: <Icon type=\"filter\" style={{color: this.state.filtered ? '#108ee9' : '#aaa'}}/>,\n        filterDropdownVisible: this.state.filterDropdownVisible,\n        onFilterDropdownVisibleChange: (visible) => {\n\n          this.setState({\n            filterDropdownVisible: visible,\n          }, () => {\n            this.searchInput && this.searchInput.focus()\n          });\n        },\n      },\n      {\n        title: 'pair',\n        dataIndex: 'pair',\n        key: 'pair'\n      },\n      {\n        title: 'volumeNative',\n        dataIndex: 'volumeNative',\n        key: 'volumeNative',\n      }\n    ];\n    return columns;\n    */};_this.state={markets:[],filterDropdownVisible:false,data:[],columns:[],searchText:'',filtered:false};return _this;}_createClass(MarketOverview,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"render\",value:function render(){var column=this.props.column;var columns=this.setColumn(column);var tableData=this.props.tableData;var data=this.state.data;if(data.length){tableData=this.state.data;}/*\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n*/// markets = markets.sort(compare(\"rank\")).slice(0, 99);\n//console.log(markets);\nreturn _react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(_antd.Table,{columns:columns,dataSource:tableData}));}}]);return MarketOverview;}(_react.Component);exports.default=MarketOverview;\n\n/***/ }),\n\n/***/ 2474:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(16);var _reactIntl=__webpack_require__(17);var _chartConfig=__webpack_require__(190);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(19);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(770);__webpack_require__(191);__webpack_require__(192);__webpack_require__(2254);__webpack_require__(2257);__webpack_require__(2258);__webpack_require__(2259);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(RingPieReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Markets.da677aad.chunk.js","import React, {Fragment} from \"react\";\nimport {injectIntl} from \"react-intl\";\nimport {connect} from \"react-redux\";\nimport {loadPriceData} from \"../../actions/markets\";\nimport {tu} from \"../../utils/i18n\";\nimport MarketOverview from \"./MarketOverview\";\nimport {TronLoader} from \"../common/loaders\";\nimport {Client} from \"../../services/api\";\nimport LineReact from \"../common/LineChart\";\nimport RingPieReact from \"../common/RingPieChart\";\n\nclass Markets extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      priceGraph: [],\n      volumeGraph: [],\n      markets: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadMarketData();\n  }\n\n  loadMarketData = async () => {\n    this.props.loadPriceData();\n\n    let markets = await Client.getMarkets();\n\n    this.setState({\n      markets,\n    });\n  };\n\n  formatTableData = (markets) => {\n    let {intl} = this.props;\n    let data = [];\n    markets.sort((a, b) => a.rank - b.rank);\n    if (markets.length) {\n      markets.map((val) => {\n        data.push({\n          key: val.rank,\n          rank: val.rank,\n          name: val.name,\n          pair: val.pair,\n          volumeNative: intl.formatNumber(val.volumeNative) + ' TRX',\n          volumePercentage: intl.formatNumber(val.volumePercentage, {\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2\n          }) + '%',\n          price: '$' + intl.formatNumber(val.price, {maximumFractionDigits: 8})\n        });\n\n      })\n    }\n    return data.slice(0, 99);\n  }\n\n\n  customizedColumn = () => {\n    let {intl} = this.props;\n    let column = [\n      {\n        title: intl.formatMessage({id: 'rank'}),\n        dataIndex: 'rank',\n        key: 'rank',\n        sorter: true,\n        width: '5%'\n      },\n      {\n        title: intl.formatMessage({id: 'exchange'}),\n        dataIndex: 'name',\n        key: 'name',\n        filterDropdown: true\n      },\n      {\n        title: intl.formatMessage({id: 'pair'}),\n        dataIndex: 'pair',\n        key: 'pair',\n        width: '12%'\n      },\n      {\n        title: intl.formatMessage({id: 'volume'}),\n        dataIndex: 'volumeNative',\n        key: 'volumeNative',\n        width: '14%'\n      },\n      {\n        title: '%',\n        dataIndex: 'volumePercentage',\n        key: 'volumePercentage',\n        width: '8%'\n      },\n      {\n        title: intl.formatMessage({id: 'price'}),\n        dataIndex: 'price',\n        key: 'price',\n        width: '10%'\n      }\n    ];\n\n    return column;\n  }\n\n  render() {\n\n    let {intl, priceGraph, volumeGraph} = this.props;\n    let {markets} = this.state;\n    let tableData = this.formatTableData(markets);\n    let column = this.customizedColumn();\n\n    return (\n        <main className=\"container header-overlap pb-3\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 300}}>\n                    {\n                      priceGraph.length === 0 ?\n                          <TronLoader/> :\n                          <LineReact message={{id: 'average_price_usd'}} style={{height: 300}}\n                                     data={priceGraph} keysData={['time', 'close']}\n                                     format={{time: true, date: true}}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 300}}>\n                    {\n                      volumeGraph.length === 0 ?\n                          <TronLoader/> :\n                          <LineReact message={{id: 'average_volume_usd'}} style={{height: 300}}\n                                     data={volumeGraph} keysData={['time', 'volume']}\n                                     format={{time: true}}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <RingPieReact message={{id:'Trade Volume'}} style={{height: 700}} data={markets}/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <MarketOverview tableData={tableData} column={column}/>\n            </div>\n          </div>\n        </main>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price,\n    volumeGraph: state.markets.volume,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadPriceData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(Markets));\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/markets/index.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format, message} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n\n    config.lineChart.title.text = intl.formatMessage({id: message.id});\n    if(message.href)\n      config.lineChart.title.link = '#/blockchain/stats/' + message.href;\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n\n    if (data && data.length > 0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            if ((val[keysData[0]] + \"\").length === 10)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n            if ((val[keysData[0]] + \"\").length === 13)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));\n          }\n        }\n        else {\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n        }\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.lineChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 2197\n// module chunks = 4 5","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 2198\n// module chunks = 4 5","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 2254\n// module chunks = 4 5","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 2255\n// module chunks = 4 5","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 2256\n// module chunks = 4 5","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 2257\n// module chunks = 4 5","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 2258\n// module chunks = 4 5","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 2259\n// module chunks = 4 5","import React, {Component} from \"react\";\nimport {tu} from \"../../utils/i18n\";\nimport {Client} from \"../../services/api\";\nimport {ExternalLink} from \"../common/Links\";\nimport {FormattedNumber} from \"react-intl\";\nimport {TRXPrice} from \"../common/Price\";\nimport {Table, Input, Button, Icon} from 'antd';\n\nexport default class MarketOverview extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      markets: [],\n      filterDropdownVisible: false,\n      data: [],\n      columns: [],\n      searchText: '',\n      filtered: false,\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  onInputChange = (e) => {\n    this.setState({searchText: e.target.value});\n  }\n  onReset = () => {\n    this.setState({searchText: ''}, () => {\n      this.onSearch();\n    });\n  }\n  onSearch = () => {\n    let {tableData} = this.props;\n    const {searchText} = this.state;\n    const reg = new RegExp(searchText, 'gi');\n    this.setState({\n      filterDropdownVisible: false,\n      filtered: !!searchText,\n      data: tableData.map((record) => {\n        const match = record.name.match(reg);\n        if (!match) {\n          return null;\n        }\n        return {\n          ...record,\n          name: (\n              <span>\n              {record.name.split(new RegExp(`(?<=${searchText})|(?=${searchText})`, 'i')).map((text, i) => (\n                  text.toLowerCase() === searchText.toLowerCase()\n                      ? <span key={i} className=\"highlight\">{text}</span> : text // eslint-disable-line\n              ))}\n            </span>\n          ),\n        };\n      }).filter(record => !!record),\n    });\n  }\n\n\n  setColumn = (column) => {\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n    let filter = {\n      filterDropdown: (\n          <div className=\"custom-filter-dropdown\">\n            <Input\n                ref={ele => this.searchInput = ele}\n                placeholder=\"Search name\"\n                value={this.state.searchText}\n                onChange={this.onInputChange}\n                onPressEnter={this.onSearch}\n            />\n            <Button type=\"primary\" onClick={this.onSearch}>{tu(\"search\")}</Button>\n            <Button className=\"btn-secondary ml-1\" onClick={this.onReset}>{tu(\"reset\")}</Button>\n          </div>\n      ),\n      filterIcon: <Icon type=\"filter\" style={{color: this.state.filtered ? '#108ee9' : '#aaa'}}/>,\n      filterDropdownVisible: this.state.filterDropdownVisible,\n      onFilterDropdownVisibleChange: (visible) => {\n\n        this.setState({\n          filterDropdownVisible: visible,\n        }, () => {\n          this.searchInput && this.searchInput.focus()\n        });\n      }\n    }\n\n    let columns=[];\n\n    for(let col of column){\n      if(col.sorter && !col.filterDropdown) {\n        let temp={sorter: compare(col.key)}\n        columns.push({...col,...temp});\n      }\n      else if(!col.sorter && col.filterDropdown){\n        let temp={...filter}\n        columns.push({...col,...temp});\n      }\n      else if(col.sorter && col.filterDropdown){\n        let temp={sorter: compare(col.key), ...filter}\n        columns.push({...col,...temp});\n      }\n      else{\n        columns.push(col);\n      }\n\n    }\n\n    return columns;\n    /*\n    const columns = [\n      {\n        title: 'rank',\n        dataIndex: 'rank',\n        key: 'rank',\n        sorter: compare('rank')\n      },\n      {\n        title: 'name',\n        dataIndex: 'name',\n        key: 'name',\n        filterDropdown: (\n            <div className=\"custom-filter-dropdown\">\n              <Input\n                  ref={ele => this.searchInput = ele}\n                  placeholder=\"Search name\"\n                  value={this.state.searchText}\n                  onChange={this.onInputChange}\n                  onPressEnter={this.onSearch}\n              />\n              <Button type=\"primary\" onClick={this.onSearch}>Search</Button>\n            </div>\n        ),\n        filterIcon: <Icon type=\"filter\" style={{color: this.state.filtered ? '#108ee9' : '#aaa'}}/>,\n        filterDropdownVisible: this.state.filterDropdownVisible,\n        onFilterDropdownVisibleChange: (visible) => {\n\n          this.setState({\n            filterDropdownVisible: visible,\n          }, () => {\n            this.searchInput && this.searchInput.focus()\n          });\n        },\n      },\n      {\n        title: 'pair',\n        dataIndex: 'pair',\n        key: 'pair'\n      },\n      {\n        title: 'volumeNative',\n        dataIndex: 'volumeNative',\n        key: 'volumeNative',\n      }\n    ];\n    return columns;\n    */\n  }\n\n\n  render() {\n    let column = this.props.column;\n    let columns = this.setColumn(column);\n    let {tableData} = this.props;\n    let {data} = this.state;\n    if(data.length){\n      tableData = this.state.data;\n    }\n/*\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n*/\n   // markets = markets.sort(compare(\"rank\")).slice(0, 99);\n    //console.log(markets);\n\n\n    return (\n\n\n        <div className=\"card\">\n          <Table columns={columns} dataSource={tableData}/>\n          {/*\n            <table className=\"table table-hover bg-white m-0 table-striped\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th style={{width: 25}}>{tu(\"rank\")}</th>\n                <th>{tu(\"exchange\")}</th>\n                <th className=\"d-none d-sm-table-cell\" style={{width: 75}}>{tu(\"pair\")}</th>\n                <th className=\"d-none d-md-table-cell\" style={{width: 100}}>{tu(\"volume\")}</th>\n                <th className=\"d-none d-md-table-cell\" style={{width: 75}}>%</th>\n                <th className=\"text-right\" style={{width: 100}}>{tu(\"price\")}</th>\n              </tr>\n            </thead>\n            <tbody>\n            {\n              markets.map(market => (\n                <tr key={market.rank}>\n                  <th>\n                    {market.rank}\n                  </th>\n                  <td>\n                    <ExternalLink url={market.link}>{market.name}</ExternalLink>\n                  </td>\n                  <td className=\"d-none d-sm-table-cell\" style={{width: 75}}>\n                    <ExternalLink url={market.link}>{market.pair}</ExternalLink>\n                  </td>\n                  <td className=\"text-nowrap d-none d-md-table-cell\">\n                    <TRXPrice amount={market.volumeNative} />\n                  </td>\n                  <td className=\"text-nowrap d-none d-md-table-cell\">\n                    <FormattedNumber value={market.volumePercentage} maximumFractionDigits={2} />%\n                  </td>\n                  <td className=\"text-right\">\n                    $<FormattedNumber value={market.price} maximumFractionDigits={8} />\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </table>\n          */}\n        </div>\n\n    )\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/markets/MarketOverview.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data,message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if(data && data.length===0){\n      config.ringPieChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js"],"sourceRoot":""}