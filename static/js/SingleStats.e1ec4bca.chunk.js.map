{"version":3,"sources":["../static/js/SingleStats.e1ec4bca.chunk.js","components/blockchain/Statistics/SingleChart.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","utils/tron.js","components/common/LineChart.js"],"names":["webpackJsonp","1089","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","defineProperty","_regenerator","_regenerator2","_extends","assign","target","i","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_index","_index2","_api","_constants","_reactRedux","_reactIntl","_lodash","_tron","_loaders","_PieChart","_PieChart2","_LineChart","_LineChart2","_LineCharts","_RingPieChart","_markets","_i18n","Statistics","_React$Component","_this","getPrototypeOf","accounts","transactionStats","blockStats","transactionValueStats","txOverviewStats","addressesStats","blockSizeStats","blockchainSizeStats","priceStats","volumeStats","summit","pieChart","loadAccounts","loadStats","loadTxOverviewStats","_ref","mark","_callee","_ref2","wrap","_context","prev","next","Client","getAccounts","limit","sort","sent","setState","filter","account","includes","tronAddresses","address","slice","map","name","balance","ONE_TRX","stop","_ref3","_callee2","_ref4","stats","_ref5","transactionTotalStats","valueStats","_context2","getTransferStats","groupby","interval","getBlockStats","total","row","timestamp","_ref6","_callee3","intl","today","timerToday","birthday","timerBirthday","dayNum","_ref7","data","priceStatsTemp","volumeData","volumeUSD","volume","_ref8","statisticData","pieChartData","_ref9","temp","addressesTemp","blockSizeStatsTemp","blockchainSizeStatsTemp","txs","_tx","compare","higest","lowest","addr","tx","bs","pr","vo","p","v","_bcs","b","_b","bcs","_context3","property","obj1","obj2","Date","getTime","Math","floor","get","volume_usd","time","volume_billion","pow","formatNumber","volume_usd_num","getStatisticData","val","push","url","volumeValue","blockProduced","volumePercentage","percentage","maximumFractionDigits","minimumFractionDigits","getTxOverviewStats","parseInt","date","newAddressSeen","increment","totalTransaction","avgBlockTime","avgBlockSize","totalBlockCount","blockchainSize","cloneDeep","addressesStats_sort","txOverviewStats_sort","blockSizeStats_sort","blockchainSizeStats_sort","priceStats_sort","close","volumeStats_sort","_props","match","_state","unit","params","chartName","createElement","className","role","t","formatDate","style","height","TronLoader","LineReactTx","LineReactAdd","LineReactBlockSize","LineReactBlockchainSize","LineReactPrice","message","id","href","keysData","format","LineReactVolumeUsd","RepresentativesRingPieReact","Component","mapDispatchToProps","loadPriceData","connect","injectIntl","1134","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","1135","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1154","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","random","pieId","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","pairData","exchanges","index","pair","subCount","finalExchanges","finalPairData","setOption","initPie","_React$Component2","_this2","_props2","representPieChart","link","datas","percent","toolbox","feature","restore","saveAsImage","reverse","1155","legendFilter","registerProcessor","registerSubTypeDefaulter","1156","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1157","legendModels","findComponents","mainType","filterSeries","1158","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1159","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","setStyle","cursor","pageText","current","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","winRect","startIdx","children","intersect","startItem","startRect","1160","subType","query","1230","1231","LineReact","lineId","lineChart","xAxis","formatTime","initLine","pure"],"mappings":"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","file":"static/js/SingleStats.e1ec4bca.chunk.js","sourcesContent":["webpackJsonp([7],{\n\n/***/ 1089:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(4);var _regenerator2=_interopRequireDefault(_regenerator);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _index=__webpack_require__(58);var _index2=_interopRequireDefault(_index);var _api=__webpack_require__(7);var _constants=__webpack_require__(36);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _lodash=__webpack_require__(18);var _tron=__webpack_require__(1230);var _loaders=__webpack_require__(26);var _PieChart=__webpack_require__(435);var _PieChart2=_interopRequireDefault(_PieChart);var _LineChart=__webpack_require__(1231);var _LineChart2=_interopRequireDefault(_LineChart);var _LineCharts=__webpack_require__(419);var _RingPieChart=__webpack_require__(1154);var _markets=__webpack_require__(417);var _i18n=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Statistics=function(_React$Component){_inherits(Statistics,_React$Component);function Statistics(){_classCallCheck(this,Statistics);var _this=_possibleConstructorReturn(this,(Statistics.__proto__||Object.getPrototypeOf(Statistics)).call(this));_this.state={accounts:null,transactionStats:null,blockStats:null,transactionValueStats:null,txOverviewStats:null,addressesStats:null,blockSizeStats:null,blockchainSizeStats:null,priceStats:null,volumeStats:null,summit:null,pieChart:null};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadAccounts();this.loadStats();this.loadTxOverviewStats();}},{key:\"loadAccounts\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var _ref2,accounts;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getAccounts({limit:35,sort:'-balance'});case 2:_ref2=_context.sent;accounts=_ref2.accounts;this.setState({accounts:(0,_lodash.filter)(accounts,function(account){return!(0,_lodash.includes)(_tron.tronAddresses,account.address);}).slice(0,10).map(function(account){return{name:account.address,value:account.balance/_constants.ONE_TRX};})});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function loadAccounts(){return _ref.apply(this,arguments);}return loadAccounts;}()},{key:\"loadStats\",value:function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var _ref4,stats,_ref5,blockStats,transactionTotalStats,valueStats;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _api.Client.getTransferStats({groupby:'timestamp',interval:'hour'});case 2:_ref4=_context2.sent;stats=_ref4.stats;_context2.next=6;return _api.Client.getBlockStats({info:\"avg-block-size\"});case 6:_ref5=_context2.sent;blockStats=_ref5.stats;transactionTotalStats=stats.total.map(function(row){return{timestamp:row.timestamp,value:row.value};});valueStats=stats.value.map(function(row){return{timestamp:row.timestamp,value:row.value/_constants.ONE_TRX};});blockStats=blockStats.map(function(row){return{timestamp:row.timestamp,value:row.value};});this.setState({transactionStats:transactionTotalStats,transactionValueStats:valueStats,blockStats:blockStats});case 12:case\"end\":return _context2.stop();}}},_callee2,this);}));function loadStats(){return _ref3.apply(this,arguments);}return loadStats;}()},{key:\"loadTxOverviewStats\",value:function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var intl,today,timerToday,birthday,timerBirthday,dayNum,_ref7,data,priceStatsTemp,volumeData,volumeUSD,volume,_ref8,statisticData,pieChartData,_ref9,txOverviewStats,temp,addressesTemp,blockSizeStatsTemp,blockchainSizeStatsTemp,txs,_tx,compare,higest,lowest,addr,tx,bs,pr,vo,p,v,_bcs,b,_b,bcs;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:compare=function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};};intl=this.props.intl;today=new Date();timerToday=today.getTime();birthday=new Date(\"2017/10/10\");timerBirthday=birthday.getTime();dayNum=Math.floor((timerToday-timerBirthday)/1000/3600/24);_context3.next=9;return _index2.default.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\"+dayNum);case 9:_ref7=_context3.sent;data=_ref7.data;priceStatsTemp=data['Data'];_context3.next=14;return _index2.default.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\");case 14:volumeData=_context3.sent;volumeUSD=volumeData.data.volume_usd;volume=volumeUSD.map(function(v,i){return{time:v[0],volume_billion:v[1]/Math.pow(10,9),volume_usd:intl.formatNumber(v[1])+' USD',volume_usd_num:v[1]};});_context3.next=19;return _api.Client.getStatisticData();case 19:_ref8=_context3.sent;statisticData=_ref8.statisticData;pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}_context3.next=25;return _api.Client.getTxOverviewStats();case 25:_ref9=_context3.sent;txOverviewStats=_ref9.txOverviewStats;temp=[];addressesTemp=[];blockSizeStatsTemp=[];blockchainSizeStatsTemp=[];for(txs in txOverviewStats){_tx=parseInt(txs);if(_tx===0){temp.push(txOverviewStats[_tx]);addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen,increment:txOverviewStats[_tx].newAddressSeen});}else{temp.push({date:txOverviewStats[_tx].date,totalTransaction:txOverviewStats[_tx].totalTransaction-txOverviewStats[_tx-1].totalTransaction,avgBlockTime:txOverviewStats[_tx].avgBlockTime,avgBlockSize:txOverviewStats[_tx].avgBlockSize,totalBlockCount:txOverviewStats[_tx].totalBlockCount-txOverviewStats[_tx-1].totalBlockCount,newAddressSeen:txOverviewStats[_tx].newAddressSeen});addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen+addressesTemp[_tx-1].total,increment:txOverviewStats[_tx].newAddressSeen});}blockSizeStatsTemp.push({date:txOverviewStats[_tx].date,avgBlockSize:txOverviewStats[_tx].avgBlockSize});blockchainSizeStatsTemp.push({date:txOverviewStats[_tx].date,blockchainSize:txOverviewStats[_tx].blockchainSize});}this.setState({txOverviewStats:temp,addressesStats:addressesTemp,blockSizeStats:blockSizeStatsTemp,blockchainSizeStats:blockchainSizeStatsTemp,priceStats:priceStatsTemp,volumeStats:volume,pieChart:pieChartData});higest={date:'',increment:''};lowest={date:'',increment:''};addr=(0,_lodash.cloneDeep)(addressesTemp).sort(compare('increment'));tx=(0,_lodash.cloneDeep)(temp).sort(compare('totalTransaction'));bs=(0,_lodash.cloneDeep)(blockSizeStatsTemp).sort(compare('avgBlockSize'));pr=(0,_lodash.cloneDeep)(priceStatsTemp).sort(compare('close'));vo=(0,_lodash.cloneDeep)(volume).sort(compare('volume_usd_num'));for(p in pr){pr[p]=_extends({date:pr[p].time},pr[p]);}for(v in vo){vo[v]=_extends({date:vo[v].time},vo[v]);}_bcs=[];for(b in blockchainSizeStatsTemp){_b=parseInt(b);if(_b===0){_bcs.push({date:blockchainSizeStatsTemp[0].date,blockchainSize:blockchainSizeStatsTemp[0].blockchainSize/1000000});}else{_bcs.push({date:blockchainSizeStatsTemp[_b].date,blockchainSize:(blockchainSizeStatsTemp[_b].blockchainSize-blockchainSizeStatsTemp[_b-1].blockchainSize)/1000000});}}bcs=_bcs.sort(compare('blockchainSize'));this.setState({summit:{addressesStats_sort:[{date:addr[addr.length-1].date,increment:addr[addr.length-1].increment},{date:addr[0].date,increment:addr[0].increment}],txOverviewStats_sort:[{date:tx[tx.length-1].date,increment:tx[tx.length-1].totalTransaction},{date:tx[0].date,increment:tx[0].totalTransaction}],blockSizeStats_sort:[{date:bs[bs.length-1].date,increment:bs[bs.length-1].avgBlockSize},{date:bs[0].date,increment:bs[0].avgBlockSize}],blockchainSizeStats_sort:[{date:bcs[bcs.length-1].date,increment:bcs[bcs.length-1].blockchainSize},{date:bcs[0].date,increment:bcs[0].blockchainSize}],priceStats_sort:[{date:pr[pr.length-1].date*1000,increment:pr[pr.length-1].close},{date:pr[0].date*1000,increment:pr[0].close}],volumeStats_sort:[{date:vo[vo.length-1].date,increment:vo[vo.length-1].volume_usd_num},{date:vo[0].date,increment:vo[0].volume_usd_num}]}});case 46:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadTxOverviewStats(){return _ref6.apply(this,arguments);}return loadTxOverviewStats;}()},{key:\"render\",value:function render(){var _props=this.props,match=_props.match,intl=_props.intl;var _state=this.state,txOverviewStats=_state.txOverviewStats,addressesStats=_state.addressesStats,blockSizeStats=_state.blockSizeStats,blockchainSizeStats=_state.blockchainSizeStats,priceStats=_state.priceStats,transactionStats=_state.transactionStats,transactionValueStats=_state.transactionValueStats,blockStats=_state.blockStats,accounts=_state.accounts,volumeStats=_state.volumeStats,pieChart=_state.pieChart,summit=_state.summit;var unit=void 0;if(match.params.chartName==='blockchainSizeStats'||match.params.chartName==='addressesStats'){unit='increase';}else{unit='number';}return _react2.default.createElement(\"main\",{className:\"container header-overlap\"},match.params.chartName!=='pieChart'?_react2.default.createElement(\"div\",{className:\"alert alert-light\",role:\"alert\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('highest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][0].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][0].date))),_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('lowest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][1].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][1].date))))):null,_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},match.params.chartName==='txOverviewStats'&&_react2.default.createElement(\"div\",{style:{height:500}},txOverviewStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactTx,{source:\"singleChart\",style:{height:500},data:txOverviewStats,intl:intl})),match.params.chartName==='addressesStats'&&_react2.default.createElement(\"div\",{style:{height:500}},addressesStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactAdd,{source:\"singleChart\",style:{height:500},data:addressesStats,intl:intl})),match.params.chartName==='blockSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockSize,{source:\"singleChart\",style:{height:500},data:blockSizeStats,intl:intl})),match.params.chartName==='blockchainSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockchainSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockchainSize,{source:\"singleChart\",style:{height:500},data:blockchainSizeStats,intl:intl})),match.params.chartName==='priceStats'&&_react2.default.createElement(\"div\",{style:{height:500}},priceStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactPrice,{source:\"singleChart\",style:{height:500},data:priceStats,intl:intl})),match.params.chartName==='accounts'&&_react2.default.createElement(\"div\",{style:{height:500}},accounts===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_PieChart2.default,{style:{height:500},data:accounts})),match.params.chartName==='transactionValueStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionValueStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'trx_transferred_past_hour',href:'transactionValueStats'},style:{height:500},data:transactionValueStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='transactionStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'transactions_past_hour',href:'transactionStats'},style:{height:500},data:transactionStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='blockStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_blocksize',href:'blockStats'},style:{height:500},data:blockStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='volumeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},volumeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactVolumeUsd,{source:\"singleChart\",style:{height:500},data:volumeStats,intl:intl})),match.params.chartName==='pieChart'&&_react2.default.createElement(\"div\",null,pieChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{source:\"singleChart\",message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:500}})))))));}}]);return Statistics;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)((0,_reactIntl.injectIntl)(Statistics));\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(9);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(12);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(146);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(8);\n\nvar _listComponent = __webpack_require__(413);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _chartConfig=__webpack_require__(222);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(412);__webpack_require__(223);__webpack_require__(224);__webpack_require__(1155);__webpack_require__(1158);__webpack_require__(1159);__webpack_require__(1160);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var index in data){if(temp.indexOf(data[index].name)<0){temp.push(data[index].name);exchanges.push({name:data[index].name,value:data[index].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1134);\n\n__webpack_require__(1156);\n\n__webpack_require__(1135);\n\nvar legendFilter = __webpack_require__(1157);\n\nvar Component = __webpack_require__(48);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1134);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(8);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1135);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1230:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var tronAddresses=exports.tronAddresses=['27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS','27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj','27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx','27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3'];\n\n/***/ }),\n\n/***/ 1231:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _chartConfig=__webpack_require__(222);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(420);__webpack_require__(223);__webpack_require__(224);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:\"initLine\",value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text=intl.formatMessage({id:message.id});if(message.href)_chartConfig2.default.lineChart.title.link='#/blockchain/stats/'+message.href;_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{if((val[keysData[0]]+\"\").length===10)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));if((val[keysData[0]]+\"\").length===13)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));}}else{_chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);}_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/SingleStats.e1ec4bca.chunk.js","import React from \"react\";\nimport xhr from \"axios/index\";\nimport {Client} from \"../../../services/api\";\nimport {ONE_TRX} from \"../../../constants\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport {filter, includes} from \"lodash\";\nimport {tronAddresses} from \"../../../utils/tron\";\nimport {TronLoader} from \"../../common/loaders\";\nimport PieReact from \"../../common/PieChart\";\nimport LineReact from \"../../common/LineChart\";\nimport {cloneDeep} from \"lodash\";\nimport {\n  LineReactAdd,\n  LineReactBlockSize,\n  LineReactBlockchainSize,\n  LineReactTx,\n  LineReactPrice,\n  LineReactVolumeUsd\n} from \"../../common/LineCharts\";\n\nimport {\n    RepresentativesRingPieReact\n} from \"../../common/RingPieChart\";\n\nimport {loadPriceData} from \"../../../actions/markets\";\nimport {t} from \"../../../utils/i18n\";\n\nclass Statistics extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      accounts: null,\n      transactionStats: null,\n      blockStats: null,\n      transactionValueStats: null,\n      txOverviewStats: null,\n      addressesStats: null,\n      blockSizeStats: null,\n      blockchainSizeStats: null,\n      priceStats: null,\n      volumeStats:null,\n      summit: null,\n      pieChart:null\n    };\n  }\n\n  componentDidMount() {\n    this.loadAccounts();\n    this.loadStats();\n    this.loadTxOverviewStats();\n  }\n\n  async loadAccounts() {\n\n    let {accounts} = await Client.getAccounts({\n      limit: 35,\n      sort: '-balance',\n    });\n\n    this.setState({\n      accounts: filter(accounts, account => !includes(tronAddresses, account.address))\n          .slice(0, 10)\n          .map(account => ({\n            name: account.address,\n            value: account.balance / ONE_TRX,\n          }))\n    });\n  }\n\n\n  async loadStats() {\n\n    let {stats} = await Client.getTransferStats({\n      groupby: 'timestamp',\n      interval: 'hour',\n    });\n\n    let {stats: blockStats} = await Client.getBlockStats({\n      info: `avg-block-size`,\n    });\n\n    let transactionTotalStats = stats.total.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    let valueStats = stats.value.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value / ONE_TRX,\n    }));\n\n    blockStats = blockStats.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    this.setState({\n      transactionStats: transactionTotalStats,\n      transactionValueStats: valueStats,\n      blockStats,\n    });\n  }\n\n  async loadTxOverviewStats() {\n    let {intl} = this.props;\n    let today = new Date();\n    let timerToday = today.getTime();\n\n    let birthday = new Date(\"2017/10/10\");\n    let timerBirthday = birthday.getTime();\n    let dayNum = Math.floor((timerToday - timerBirthday) / 1000 / 3600 / 24);\n\n\n    let {data} = await xhr.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\" + dayNum);\n    let priceStatsTemp = data['Data'];\n\n\n    let volumeData = await xhr.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\",);\n    let volumeUSD = volumeData.data.volume_usd\n\n    let volume = volumeUSD.map(function (v,i) {\n        return {\n            time:v[0],\n            volume_billion:v[1]/Math.pow(10,9),\n            volume_usd:intl.formatNumber(v[1]) + ' USD',\n            volume_usd_num:v[1]\n        }\n    })\n\n    let {statisticData} = await Client.getStatisticData()\n    let pieChartData = [];\n    if (statisticData.length > 0) {\n        statisticData.map((val,i) => {\n            pieChartData.push({\n                key: i+1,\n                name: val.name?val.name:val.url,\n                volumeValue: intl.formatNumber(val.blockProduced),\n                volumePercentage: intl.formatNumber(val.percentage*100, {\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2\n                }) + '%',\n            });\n\n        })\n    }\n    let {txOverviewStats} = await Client.getTxOverviewStats();\n    let temp = [];\n    let addressesTemp = [];\n    let blockSizeStatsTemp = [];\n    let blockchainSizeStatsTemp = [];\n    for (let txs in txOverviewStats) {\n      let tx = parseInt(txs);\n      if (tx === 0) {\n        temp.push(txOverviewStats[tx]);\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      else {\n        temp.push({\n          date: txOverviewStats[tx].date,\n          totalTransaction: (txOverviewStats[tx].totalTransaction - txOverviewStats[tx - 1].totalTransaction),\n          avgBlockTime: txOverviewStats[tx].avgBlockTime,\n          avgBlockSize: txOverviewStats[tx].avgBlockSize,\n          totalBlockCount: (txOverviewStats[tx].totalBlockCount - txOverviewStats[tx - 1].totalBlockCount),\n          newAddressSeen: txOverviewStats[tx].newAddressSeen\n        });\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen + addressesTemp[tx - 1].total,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      blockSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        avgBlockSize: txOverviewStats[tx].avgBlockSize\n      });\n      blockchainSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        blockchainSize: txOverviewStats[tx].blockchainSize\n      });\n    }\n\n    this.setState({\n      txOverviewStats: temp,\n      addressesStats: addressesTemp,\n      blockSizeStats: blockSizeStatsTemp,\n      blockchainSizeStats: blockchainSizeStatsTemp,\n      priceStats: priceStatsTemp,\n      volumeStats:volume,\n      pieChart: pieChartData\n    });\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    let higest = {date: '', increment: ''};\n    let lowest = {date: '', increment: ''};\n    let addr = cloneDeep(addressesTemp).sort(compare('increment'));\n    let tx = cloneDeep(temp).sort(compare('totalTransaction'));\n    let bs = cloneDeep(blockSizeStatsTemp).sort(compare('avgBlockSize'));\n    let pr = cloneDeep(priceStatsTemp).sort(compare('close'));\n    let vo = cloneDeep(volume).sort(compare('volume_usd_num'));\n    for (let p in pr) {\n      pr[p] = {date: pr[p].time, ...pr[p]};\n    }\n    for (let v in vo) {\n        vo[v] = {date: vo[v].time, ...vo[v]};\n    }\n    let _bcs = [];\n\n    for (let b in blockchainSizeStatsTemp) {\n      let _b = parseInt(b);\n      if (_b === 0) {\n        _bcs.push({\n          date: blockchainSizeStatsTemp[0].date,\n          blockchainSize: blockchainSizeStatsTemp[0].blockchainSize / 1000000\n        });\n      }\n      else {\n        _bcs.push({\n          date: blockchainSizeStatsTemp[_b].date,\n          blockchainSize: (blockchainSizeStatsTemp[_b].blockchainSize - blockchainSizeStatsTemp[_b - 1].blockchainSize) / 1000000\n        })\n      }\n    }\n    let bcs = _bcs.sort(compare('blockchainSize'));\n\n    this.setState({\n      summit: {\n        addressesStats_sort: [\n          {\n            date: addr[addr.length - 1].date,\n            increment: addr[addr.length - 1].increment\n          },\n          {\n            date: addr[0].date,\n            increment: addr[0].increment\n          }],\n        txOverviewStats_sort: [\n          {\n            date: tx[tx.length - 1].date,\n            increment: tx[tx.length - 1].totalTransaction\n          },\n          {\n            date: tx[0].date,\n            increment: tx[0].totalTransaction\n          }],\n        blockSizeStats_sort: [\n          {\n            date: bs[bs.length - 1].date,\n            increment: bs[bs.length - 1].avgBlockSize\n          },\n          {\n            date: bs[0].date,\n            increment: bs[0].avgBlockSize\n          }],\n        blockchainSizeStats_sort: [\n          {\n            date: bcs[bcs.length - 1].date,\n            increment: bcs[bcs.length - 1].blockchainSize\n          },\n          {\n            date: bcs[0].date,\n            increment: bcs[0].blockchainSize\n          }],\n        priceStats_sort: [\n          {\n            date: pr[pr.length - 1].date * 1000,\n            increment: pr[pr.length - 1].close\n          },\n          {\n            date: pr[0].date * 1000,\n            increment: pr[0].close\n          }],\n        volumeStats_sort: [\n          {\n              date: vo[vo.length - 1].date,\n              increment: vo[vo.length - 1].volume_usd_num\n          },\n          {\n              date: vo[0].date,\n              increment: vo[0].volume_usd_num\n          }]\n      }\n    });\n  }\n\n\n  render() {\n    let {match, intl} = this.props;\n    let {txOverviewStats, addressesStats, blockSizeStats, blockchainSizeStats, priceStats, transactionStats, transactionValueStats, blockStats, accounts,volumeStats,pieChart, summit} = this.state;\n    let unit;\n    if (match.params.chartName === 'blockchainSizeStats' ||\n        match.params.chartName === 'addressesStats') {\n      unit = 'increase';\n    } else {\n      unit = 'number';\n    }\n    return (\n        <main className=\"container header-overlap\">\n            {\n                match.params.chartName !== 'pieChart'?\n                <div className=\"alert alert-light\" role=\"alert\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6 text-center\">\n                        {\n                            summit && summit[match.params.chartName + '_sort'] &&\n                            <span>{t('highest')}{t(unit)}{t('_of')}\n                              <strong>{' ' + summit[match.params.chartName + '_sort'][0].increment + ' '}</strong>\n                                {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][0].date)}\n                            </span>\n                        }\n                    </div>\n                    <div className=\"col-md-6 text-center\">\n                        {\n                            summit && summit[match.params.chartName + '_sort'] &&\n                            <span>{t('lowest')}{t(unit)}{t('_of')}\n                              <strong>{' ' + summit[match.params.chartName + '_sort'][1].increment + ' '}</strong>\n                                {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][1].date)}\n                            </span>\n                        }\n                    </div>\n                  </div>\n                </div>\n                :null\n            }\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  {\n                    match.params.chartName === 'txOverviewStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        txOverviewStats === null ?\n                            <TronLoader/> :\n                            <LineReactTx source='singleChart' style={{height: 500}} data={txOverviewStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'addressesStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        addressesStats === null ?\n                            <TronLoader/> :\n                            <LineReactAdd source='singleChart' style={{height: 500}} data={addressesStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'blockSizeStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        blockSizeStats === null ?\n                            <TronLoader/> :\n                            <LineReactBlockSize source='singleChart' style={{height: 500}} data={blockSizeStats}\n                                                intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'blockchainSizeStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        blockchainSizeStats === null ?\n                            <TronLoader/> :\n                            <LineReactBlockchainSize source='singleChart' style={{height: 500}}\n                                                     data={blockchainSizeStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'priceStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        priceStats === null ?\n                            <TronLoader/> :\n                            <LineReactPrice source='singleChart' style={{height: 500}} data={priceStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'accounts' &&\n                    <div style={{height: 500}}>\n                      {\n                        accounts === null ?\n                            <TronLoader/> :\n                            <PieReact style={{height: 500}} data={accounts}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'transactionValueStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        transactionValueStats === null ?\n                            <TronLoader/> :\n                            <LineReact message={{id: 'trx_transferred_past_hour', href: 'transactionValueStats'}}\n                                       style={{height: 500}} data={transactionValueStats}\n                                       keysData={['timestamp', 'value']} format={{timestamp: true}}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'transactionStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        transactionStats === null ?\n                            <TronLoader/> :\n                            <LineReact message={{id: 'transactions_past_hour', href: 'transactionStats'}}\n                                       style={{height: 500}} data={transactionStats} keysData={['timestamp', 'value']}\n                                       format={{timestamp: true}}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'blockStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        blockStats === null ?\n                            <TronLoader/> :\n                            <LineReact message={{id: 'average_blocksize', href: 'blockStats'}}\n                                       style={{height: 500}} data={blockStats} keysData={['timestamp', 'value']}\n                                       format={{timestamp: true}}/>\n                      }\n                    </div>\n                  }\n                  {\n                      match.params.chartName === 'volumeStats' &&\n                      <div style={{height: 500}}>\n                          {\n                              volumeStats === null ?\n                                  <TronLoader/> :\n                                  <LineReactVolumeUsd source='singleChart' style={{height: 500}} data={volumeStats} intl={intl}/>\n                          }\n                      </div>\n                  }\n                    {\n\n                        match.params.chartName === 'pieChart' &&\n                        <div>\n                            {\n                                pieChart === null ?\n                                    <TronLoader/> :\n                                    <RepresentativesRingPieReact source='singleChart' message={{id:'produce_distribution'}} intl={intl} data={pieChart}  style={{height: 500}}/>\n\n                            }\n                        </div>\n\n                    }\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </main>\n    );\n  }\n}\n\n\nfunction\n\nmapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price\n  };\n}\n\nconst\n    mapDispatchToProps = {\n      loadPriceData,\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n\n(\n    injectIntl(Statistics)\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blockchain/Statistics/SingleChart.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1134\n// module chunks = 1 7 8 9","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1135\n// module chunks = 1 7 8 9","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data,message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if(data && data.length===0){\n      config.ringPieChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let id = ('_' + Math.random()).replace('.', '_');\n        this.state = {\n            pieId: 'ringPie' + id\n        }\n    }\n\n    initPie(id) {\n        let {intl, data,message,source} = this.props;\n        let myChart = echarts.getInstanceByDom(document.getElementById(id));\n        if (myChart === undefined) {\n            myChart = echarts.init(document.getElementById(id));\n        }\n        config.representPieChart.title.text=intl.formatMessage({id:message.id});\n        config.representPieChart.series[0].data = [];\n        config.representPieChart.legend.data = [];\n        config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n        config.representPieChart.tooltip.formatter = function (datas) {\n            return (\n                intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n                intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n                intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n            )\n\n        }\n        if(source==='singleChart'){\n            config.representPieChart.legend.show = true;\n            config.representPieChart.toolbox.feature = {\n                restore: {\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: true,\n                    title: 'save'\n                }\n            }\n        }else{\n            config.representPieChart.legend.show = false;\n            config.representPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        if (data && data.length > 0) {\n            let exchanges = []\n            let temp = [];\n            for (let index in data) {\n                if (temp.indexOf(data[index].name) < 0) {\n                    temp.push(data[index].name)\n                    exchanges.push({name: data[index].name, value: data[index].volumeValue});\n                }\n            }\n\n            exchanges.sort(compare(\"value\")).reverse();\n\n            config.representPieChart.series[0].data = [];\n            config.representPieChart.legend.data = temp;\n            config.representPieChart.series[0].data = exchanges;\n\n        }\n        if(data && data.length===0){\n            config.representPieChart.title.text=\"No data\";\n        }\n        myChart.setOption(config.representPieChart);\n    }\n\n\n    componentDidMount() {\n        this.initPie(this.state.pieId);\n    }\n\n    componentDidUpdate() {\n        this.initPie(this.state.pieId);\n    }\n\n    render() {\n        return (\n            <div>\n              <div id={this.state.pieId} style={this.props.style}></div>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1155\n// module chunks = 1 7 8 9","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1156\n// module chunks = 1 7 8 9","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1157\n// module chunks = 1 7 8 9","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1158\n// module chunks = 1 7 8 9","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1159\n// module chunks = 1 7 8 9","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1160\n// module chunks = 1 7 8 9","\n\nexport const tronAddresses = [\n  '27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS',\n  '27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj',\n  '27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx',\n  '27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tron.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format, message} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n\n    config.lineChart.title.text = intl.formatMessage({id: message.id});\n    if(message.href)\n      config.lineChart.title.link = '#/blockchain/stats/' + message.href;\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n\n    if (data && data.length > 0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            if ((val[keysData[0]] + \"\").length === 10)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n            if ((val[keysData[0]] + \"\").length === 13)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));\n          }\n        }\n        else {\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n        }\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.lineChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js"],"sourceRoot":""}