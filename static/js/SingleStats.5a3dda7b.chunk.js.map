{"version":3,"sources":["../static/js/SingleStats.5a3dda7b.chunk.js","components/blockchain/Statistics/SingleChart.js","utils/tron.js","components/common/LineChart.js"],"names":["webpackJsonp","1089","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","defineProperty","_regenerator","_regenerator2","_extends","assign","target","i","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_index","_index2","_api","_constants","_reactRedux","_reactIntl","_lodash","_tron","_loaders","_PieChart","_PieChart2","_LineChart","_LineChart2","_LineCharts","_markets","_i18n","Statistics","_React$Component","_this","getPrototypeOf","accounts","transactionStats","blockStats","transactionValueStats","txOverviewStats","addressesStats","blockSizeStats","blockchainSizeStats","priceStats","volumeStats","summit","loadAccounts","loadStats","loadTxOverviewStats","_ref","mark","_callee","_ref2","wrap","_context","prev","next","Client","getAccounts","limit","sort","sent","setState","filter","account","includes","tronAddresses","address","slice","map","name","balance","ONE_TRX","stop","_ref3","_callee2","_ref4","stats","_ref5","transactionTotalStats","valueStats","_context2","getTransferStats","groupby","interval","getBlockStats","total","row","timestamp","_ref6","_callee3","intl","today","timerToday","birthday","timerBirthday","dayNum","_ref7","data","priceStatsTemp","volumeData","volumeUSD","volume","_ref8","temp","addressesTemp","blockSizeStatsTemp","blockchainSizeStatsTemp","txs","_tx","compare","higest","lowest","addr","tx","bs","pr","vo","p","v","_bcs","b","_b","bcs","_context3","property","obj1","obj2","Date","getTime","Math","floor","get","volume_usd","time","volume_billion","pow","formatNumber","volume_usd_num","getTxOverviewStats","parseInt","push","date","newAddressSeen","increment","totalTransaction","avgBlockTime","avgBlockSize","totalBlockCount","blockchainSize","cloneDeep","addressesStats_sort","txOverviewStats_sort","blockSizeStats_sort","blockchainSizeStats_sort","priceStats_sort","close","volumeStats_sort","_props","match","_state","unit","params","chartName","createElement","className","role","t","formatDate","style","height","TronLoader","LineReactTx","LineReactAdd","LineReactBlockSize","LineReactBlockchainSize","LineReactPrice","message","id","href","keysData","format","LineReactVolumeUsd","Component","mapDispatchToProps","loadPriceData","connect","injectIntl","1217","1218","LineReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","random","replace","lineId","myChart","getInstanceByDom","document","getElementById","init","lineChart","title","text","formatMessage","link","xAxis","series","val","formatTime","setOption","initLine","pure"],"mappings":"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","file":"static/js/SingleStats.5a3dda7b.chunk.js","sourcesContent":["webpackJsonp([10],{\n\n/***/ 1089:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(4);var _regenerator2=_interopRequireDefault(_regenerator);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _index=__webpack_require__(71);var _index2=_interopRequireDefault(_index);var _api=__webpack_require__(7);var _constants=__webpack_require__(36);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _lodash=__webpack_require__(19);var _tron=__webpack_require__(1217);var _loaders=__webpack_require__(30);var _PieChart=__webpack_require__(433);var _PieChart2=_interopRequireDefault(_PieChart);var _LineChart=__webpack_require__(1218);var _LineChart2=_interopRequireDefault(_LineChart);var _LineCharts=__webpack_require__(417);var _markets=__webpack_require__(415);var _i18n=__webpack_require__(10);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Statistics=function(_React$Component){_inherits(Statistics,_React$Component);function Statistics(){_classCallCheck(this,Statistics);var _this=_possibleConstructorReturn(this,(Statistics.__proto__||Object.getPrototypeOf(Statistics)).call(this));_this.state={accounts:null,transactionStats:null,blockStats:null,transactionValueStats:null,txOverviewStats:null,addressesStats:null,blockSizeStats:null,blockchainSizeStats:null,priceStats:null,volumeStats:null,summit:null};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadAccounts();this.loadStats();this.loadTxOverviewStats();}},{key:\"loadAccounts\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var _ref2,accounts;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getAccounts({limit:35,sort:'-balance'});case 2:_ref2=_context.sent;accounts=_ref2.accounts;this.setState({accounts:(0,_lodash.filter)(accounts,function(account){return!(0,_lodash.includes)(_tron.tronAddresses,account.address);}).slice(0,10).map(function(account){return{name:account.address,value:account.balance/_constants.ONE_TRX};})});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function loadAccounts(){return _ref.apply(this,arguments);}return loadAccounts;}()},{key:\"loadStats\",value:function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var _ref4,stats,_ref5,blockStats,transactionTotalStats,valueStats;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _api.Client.getTransferStats({groupby:'timestamp',interval:'hour'});case 2:_ref4=_context2.sent;stats=_ref4.stats;_context2.next=6;return _api.Client.getBlockStats({info:\"avg-block-size\"});case 6:_ref5=_context2.sent;blockStats=_ref5.stats;transactionTotalStats=stats.total.map(function(row){return{timestamp:row.timestamp,value:row.value};});valueStats=stats.value.map(function(row){return{timestamp:row.timestamp,value:row.value/_constants.ONE_TRX};});blockStats=blockStats.map(function(row){return{timestamp:row.timestamp,value:row.value};});this.setState({transactionStats:transactionTotalStats,transactionValueStats:valueStats,blockStats:blockStats});case 12:case\"end\":return _context2.stop();}}},_callee2,this);}));function loadStats(){return _ref3.apply(this,arguments);}return loadStats;}()},{key:\"loadTxOverviewStats\",value:function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var intl,today,timerToday,birthday,timerBirthday,dayNum,_ref7,data,priceStatsTemp,volumeData,volumeUSD,volume,_ref8,txOverviewStats,temp,addressesTemp,blockSizeStatsTemp,blockchainSizeStatsTemp,txs,_tx,compare,higest,lowest,addr,tx,bs,pr,vo,p,v,_bcs,b,_b,bcs;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:compare=function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};};intl=this.props.intl;today=new Date();timerToday=today.getTime();birthday=new Date(\"2017/10/10\");timerBirthday=birthday.getTime();dayNum=Math.floor((timerToday-timerBirthday)/1000/3600/24);_context3.next=9;return _index2.default.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\"+dayNum);case 9:_ref7=_context3.sent;data=_ref7.data;priceStatsTemp=data['Data'];_context3.next=14;return _index2.default.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\");case 14:volumeData=_context3.sent;volumeUSD=volumeData.data.volume_usd;volume=volumeUSD.map(function(v,i){return{time:v[0],volume_billion:v[1]/Math.pow(10,9),volume_usd:intl.formatNumber(v[1])+' USD',volume_usd_num:v[1]};});_context3.next=19;return _api.Client.getTxOverviewStats();case 19:_ref8=_context3.sent;txOverviewStats=_ref8.txOverviewStats;temp=[];addressesTemp=[];blockSizeStatsTemp=[];blockchainSizeStatsTemp=[];for(txs in txOverviewStats){_tx=parseInt(txs);if(_tx===0){temp.push(txOverviewStats[_tx]);addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen,increment:txOverviewStats[_tx].newAddressSeen});}else{temp.push({date:txOverviewStats[_tx].date,totalTransaction:txOverviewStats[_tx].totalTransaction-txOverviewStats[_tx-1].totalTransaction,avgBlockTime:txOverviewStats[_tx].avgBlockTime,avgBlockSize:txOverviewStats[_tx].avgBlockSize,totalBlockCount:txOverviewStats[_tx].totalBlockCount-txOverviewStats[_tx-1].totalBlockCount,newAddressSeen:txOverviewStats[_tx].newAddressSeen});addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen+addressesTemp[_tx-1].total,increment:txOverviewStats[_tx].newAddressSeen});}blockSizeStatsTemp.push({date:txOverviewStats[_tx].date,avgBlockSize:txOverviewStats[_tx].avgBlockSize});blockchainSizeStatsTemp.push({date:txOverviewStats[_tx].date,blockchainSize:txOverviewStats[_tx].blockchainSize});}this.setState({txOverviewStats:temp,addressesStats:addressesTemp,blockSizeStats:blockSizeStatsTemp,blockchainSizeStats:blockchainSizeStatsTemp,priceStats:priceStatsTemp,volumeStats:volume});higest={date:'',increment:''};lowest={date:'',increment:''};addr=(0,_lodash.cloneDeep)(addressesTemp).sort(compare('increment'));tx=(0,_lodash.cloneDeep)(temp).sort(compare('totalTransaction'));bs=(0,_lodash.cloneDeep)(blockSizeStatsTemp).sort(compare('avgBlockSize'));pr=(0,_lodash.cloneDeep)(priceStatsTemp).sort(compare('close'));vo=(0,_lodash.cloneDeep)(volume).sort(compare('volume_usd_num'));for(p in pr){pr[p]=_extends({date:pr[p].time},pr[p]);}for(v in vo){vo[v]=_extends({date:vo[v].time},vo[v]);}_bcs=[];for(b in blockchainSizeStatsTemp){_b=parseInt(b);if(_b===0){_bcs.push({date:blockchainSizeStatsTemp[0].date,blockchainSize:blockchainSizeStatsTemp[0].blockchainSize/1000000});}else{_bcs.push({date:blockchainSizeStatsTemp[_b].date,blockchainSize:(blockchainSizeStatsTemp[_b].blockchainSize-blockchainSizeStatsTemp[_b-1].blockchainSize)/1000000});}}bcs=_bcs.sort(compare('blockchainSize'));this.setState({summit:{addressesStats_sort:[{date:addr[addr.length-1].date,increment:addr[addr.length-1].increment},{date:addr[0].date,increment:addr[0].increment}],txOverviewStats_sort:[{date:tx[tx.length-1].date,increment:tx[tx.length-1].totalTransaction},{date:tx[0].date,increment:tx[0].totalTransaction}],blockSizeStats_sort:[{date:bs[bs.length-1].date,increment:bs[bs.length-1].avgBlockSize},{date:bs[0].date,increment:bs[0].avgBlockSize}],blockchainSizeStats_sort:[{date:bcs[bcs.length-1].date,increment:bcs[bcs.length-1].blockchainSize},{date:bcs[0].date,increment:bcs[0].blockchainSize}],priceStats_sort:[{date:pr[pr.length-1].date*1000,increment:pr[pr.length-1].close},{date:pr[0].date*1000,increment:pr[0].close}],volumeStats_sort:[{date:vo[vo.length-1].date,increment:vo[vo.length-1].volume_usd_num},{date:vo[0].date,increment:vo[0].volume_usd_num}]}});case 40:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadTxOverviewStats(){return _ref6.apply(this,arguments);}return loadTxOverviewStats;}()},{key:\"render\",value:function render(){var _props=this.props,match=_props.match,intl=_props.intl;var _state=this.state,txOverviewStats=_state.txOverviewStats,addressesStats=_state.addressesStats,blockSizeStats=_state.blockSizeStats,blockchainSizeStats=_state.blockchainSizeStats,priceStats=_state.priceStats,transactionStats=_state.transactionStats,transactionValueStats=_state.transactionValueStats,blockStats=_state.blockStats,accounts=_state.accounts,volumeStats=_state.volumeStats,summit=_state.summit;var unit=void 0;if(match.params.chartName==='blockchainSizeStats'||match.params.chartName==='addressesStats'){unit='increase';}else{unit='number';}return _react2.default.createElement(\"main\",{className:\"container header-overlap\"},_react2.default.createElement(\"div\",{className:\"alert alert-light\",role:\"alert\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('highest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][0].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][0].date))),_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('lowest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][1].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][1].date))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},match.params.chartName==='txOverviewStats'&&_react2.default.createElement(\"div\",{style:{height:500}},txOverviewStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactTx,{source:\"singleChart\",style:{height:500},data:txOverviewStats,intl:intl})),match.params.chartName==='addressesStats'&&_react2.default.createElement(\"div\",{style:{height:500}},addressesStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactAdd,{source:\"singleChart\",style:{height:500},data:addressesStats,intl:intl})),match.params.chartName==='blockSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockSize,{source:\"singleChart\",style:{height:500},data:blockSizeStats,intl:intl})),match.params.chartName==='blockchainSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockchainSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockchainSize,{source:\"singleChart\",style:{height:500},data:blockchainSizeStats,intl:intl})),match.params.chartName==='priceStats'&&_react2.default.createElement(\"div\",{style:{height:500}},priceStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactPrice,{source:\"singleChart\",style:{height:500},data:priceStats,intl:intl})),match.params.chartName==='accounts'&&_react2.default.createElement(\"div\",{style:{height:500}},accounts===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_PieChart2.default,{style:{height:500},data:accounts})),match.params.chartName==='transactionValueStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionValueStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'trx_transferred_past_hour',href:'transactionValueStats'},style:{height:500},data:transactionValueStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='transactionStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'transactions_past_hour',href:'transactionStats'},style:{height:500},data:transactionStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='blockStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_blocksize',href:'blockStats'},style:{height:500},data:blockStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='volumeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},volumeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactVolumeUsd,{source:\"singleChart\",style:{height:500},data:volumeStats,intl:intl})))))));}}]);return Statistics;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)((0,_reactIntl.injectIntl)(Statistics));\n\n/***/ }),\n\n/***/ 1217:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var tronAddresses=exports.tronAddresses=['27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS','27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj','27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx','27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3'];\n\n/***/ }),\n\n/***/ 1218:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _chartConfig=__webpack_require__(222);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(418);__webpack_require__(223);__webpack_require__(224);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:\"initLine\",value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text=intl.formatMessage({id:message.id});if(message.href)_chartConfig2.default.lineChart.title.link='#/blockchain/stats/'+message.href;_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{if((val[keysData[0]]+\"\").length===10)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));if((val[keysData[0]]+\"\").length===13)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));}}else{_chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);}_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/SingleStats.5a3dda7b.chunk.js","import React from \"react\";\nimport xhr from \"axios/index\";\nimport {Client} from \"../../../services/api\";\nimport {ONE_TRX} from \"../../../constants\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport {filter, includes} from \"lodash\";\nimport {tronAddresses} from \"../../../utils/tron\";\nimport {TronLoader} from \"../../common/loaders\";\nimport PieReact from \"../../common/PieChart\";\nimport LineReact from \"../../common/LineChart\";\nimport {cloneDeep} from \"lodash\";\nimport {\n  LineReactAdd,\n  LineReactBlockSize,\n  LineReactBlockchainSize,\n  LineReactTx,\n  LineReactPrice,\n  LineReactVolumeUsd\n} from \"../../common/LineCharts\";\nimport {loadPriceData} from \"../../../actions/markets\";\nimport {t} from \"../../../utils/i18n\";\n\nclass Statistics extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      accounts: null,\n      transactionStats: null,\n      blockStats: null,\n      transactionValueStats: null,\n      txOverviewStats: null,\n      addressesStats: null,\n      blockSizeStats: null,\n      blockchainSizeStats: null,\n      priceStats: null,\n      volumeStats:null,\n      summit: null\n    };\n  }\n\n  componentDidMount() {\n\n    this.loadAccounts();\n    this.loadStats();\n    this.loadTxOverviewStats();\n  }\n\n  async loadAccounts() {\n\n    let {accounts} = await Client.getAccounts({\n      limit: 35,\n      sort: '-balance',\n    });\n\n    this.setState({\n      accounts: filter(accounts, account => !includes(tronAddresses, account.address))\n          .slice(0, 10)\n          .map(account => ({\n            name: account.address,\n            value: account.balance / ONE_TRX,\n          }))\n    });\n  }\n\n\n  async loadStats() {\n\n    let {stats} = await Client.getTransferStats({\n      groupby: 'timestamp',\n      interval: 'hour',\n    });\n\n    let {stats: blockStats} = await Client.getBlockStats({\n      info: `avg-block-size`,\n    });\n\n    let transactionTotalStats = stats.total.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    let valueStats = stats.value.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value / ONE_TRX,\n    }));\n\n    blockStats = blockStats.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    this.setState({\n      transactionStats: transactionTotalStats,\n      transactionValueStats: valueStats,\n      blockStats,\n    });\n  }\n\n  async loadTxOverviewStats() {\n    let {intl} = this.props;\n    let today = new Date();\n    let timerToday = today.getTime();\n\n    var birthday = new Date(\"2017/10/10\");\n    var timerBirthday = birthday.getTime();\n    var dayNum = Math.floor((timerToday - timerBirthday) / 1000 / 3600 / 24);\n\n\n    let {data} = await xhr.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\" + dayNum);\n    let priceStatsTemp = data['Data'];\n\n\n    let volumeData = await xhr.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\",);\n    let volumeUSD = volumeData.data.volume_usd\n\n    let volume = volumeUSD.map(function (v,i) {\n        return {\n            time:v[0],\n            volume_billion:v[1]/Math.pow(10,9),\n            volume_usd:intl.formatNumber(v[1]) + ' USD',\n            volume_usd_num:v[1]\n        }\n    })\n    let {txOverviewStats} = await Client.getTxOverviewStats();\n    let temp = [];\n    let addressesTemp = [];\n    let blockSizeStatsTemp = [];\n    let blockchainSizeStatsTemp = [];\n    for (let txs in txOverviewStats) {\n      let tx = parseInt(txs);\n      if (tx === 0) {\n        temp.push(txOverviewStats[tx]);\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      else {\n        temp.push({\n          date: txOverviewStats[tx].date,\n          totalTransaction: (txOverviewStats[tx].totalTransaction - txOverviewStats[tx - 1].totalTransaction),\n          avgBlockTime: txOverviewStats[tx].avgBlockTime,\n          avgBlockSize: txOverviewStats[tx].avgBlockSize,\n          totalBlockCount: (txOverviewStats[tx].totalBlockCount - txOverviewStats[tx - 1].totalBlockCount),\n          newAddressSeen: txOverviewStats[tx].newAddressSeen\n        });\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen + addressesTemp[tx - 1].total,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      blockSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        avgBlockSize: txOverviewStats[tx].avgBlockSize\n      });\n      blockchainSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        blockchainSize: txOverviewStats[tx].blockchainSize\n      });\n    }\n\n    this.setState({\n      txOverviewStats: temp,\n      addressesStats: addressesTemp,\n      blockSizeStats: blockSizeStatsTemp,\n      blockchainSizeStats: blockchainSizeStatsTemp,\n      priceStats: priceStatsTemp,\n      volumeStats:volume\n    });\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    let higest = {date: '', increment: ''};\n    let lowest = {date: '', increment: ''};\n    let addr = cloneDeep(addressesTemp).sort(compare('increment'));\n    let tx = cloneDeep(temp).sort(compare('totalTransaction'));\n    let bs = cloneDeep(blockSizeStatsTemp).sort(compare('avgBlockSize'));\n    let pr = cloneDeep(priceStatsTemp).sort(compare('close'));\n    let vo = cloneDeep(volume).sort(compare('volume_usd_num'));\n    for (let p in pr) {\n      pr[p] = {date: pr[p].time, ...pr[p]};\n    }\n    for (let v in vo) {\n        vo[v] = {date: vo[v].time, ...vo[v]};\n    }\n    let _bcs = [];\n\n    for (let b in blockchainSizeStatsTemp) {\n      let _b = parseInt(b);\n      if (_b === 0) {\n        _bcs.push({\n          date: blockchainSizeStatsTemp[0].date,\n          blockchainSize: blockchainSizeStatsTemp[0].blockchainSize / 1000000\n        });\n      }\n      else {\n        _bcs.push({\n          date: blockchainSizeStatsTemp[_b].date,\n          blockchainSize: (blockchainSizeStatsTemp[_b].blockchainSize - blockchainSizeStatsTemp[_b - 1].blockchainSize) / 1000000\n        })\n      }\n    }\n    let bcs = _bcs.sort(compare('blockchainSize'));\n\n    this.setState({\n      summit: {\n        addressesStats_sort: [\n          {\n            date: addr[addr.length - 1].date,\n            increment: addr[addr.length - 1].increment\n          },\n          {\n            date: addr[0].date,\n            increment: addr[0].increment\n          }],\n        txOverviewStats_sort: [\n          {\n            date: tx[tx.length - 1].date,\n            increment: tx[tx.length - 1].totalTransaction\n          },\n          {\n            date: tx[0].date,\n            increment: tx[0].totalTransaction\n          }],\n        blockSizeStats_sort: [\n          {\n            date: bs[bs.length - 1].date,\n            increment: bs[bs.length - 1].avgBlockSize\n          },\n          {\n            date: bs[0].date,\n            increment: bs[0].avgBlockSize\n          }],\n        blockchainSizeStats_sort: [\n          {\n            date: bcs[bcs.length - 1].date,\n            increment: bcs[bcs.length - 1].blockchainSize\n          },\n          {\n            date: bcs[0].date,\n            increment: bcs[0].blockchainSize\n          }],\n        priceStats_sort: [\n          {\n            date: pr[pr.length - 1].date * 1000,\n            increment: pr[pr.length - 1].close\n          },\n          {\n            date: pr[0].date * 1000,\n            increment: pr[0].close\n          }],\n        volumeStats_sort: [\n          {\n              date: vo[vo.length - 1].date,\n              increment: vo[vo.length - 1].volume_usd_num\n          },\n          {\n              date: vo[0].date,\n              increment: vo[0].volume_usd_num\n          }]\n      }\n    });\n  }\n\n\n  render() {\n    let {match, intl} = this.props;\n    let {txOverviewStats, addressesStats, blockSizeStats, blockchainSizeStats, priceStats, transactionStats, transactionValueStats, blockStats, accounts,volumeStats, summit} = this.state;\n    let unit;\n    if (match.params.chartName === 'blockchainSizeStats' ||\n        match.params.chartName === 'addressesStats') {\n      unit = 'increase';\n    } else {\n      unit = 'number';\n    }\n    return (\n        <main className=\"container header-overlap\">\n\n          <div className=\"alert alert-light\" role=\"alert\">\n            <div className=\"row\">\n\n              <div className=\"col-md-6 text-center\">\n                {\n                  summit && summit[match.params.chartName + '_sort'] &&\n                  <span>{t('highest')}{t(unit)}{t('_of')}\n                    <strong>{' ' + summit[match.params.chartName + '_sort'][0].increment + ' '}</strong>\n                    {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][0].date)}\n                  </span>\n                }\n              </div>\n              <div className=\"col-md-6 text-center\">\n                {\n                  summit && summit[match.params.chartName + '_sort'] &&\n                  <span>{t('lowest')}{t(unit)}{t('_of')}\n                    <strong>{' ' + summit[match.params.chartName + '_sort'][1].increment + ' '}</strong>\n                    {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][1].date)}\n                  </span>\n                }\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  {\n                    match.params.chartName === 'txOverviewStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        txOverviewStats === null ?\n                            <TronLoader/> :\n                            <LineReactTx source='singleChart' style={{height: 500}} data={txOverviewStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'addressesStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        addressesStats === null ?\n                            <TronLoader/> :\n                            <LineReactAdd source='singleChart' style={{height: 500}} data={addressesStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'blockSizeStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        blockSizeStats === null ?\n                            <TronLoader/> :\n                            <LineReactBlockSize source='singleChart' style={{height: 500}} data={blockSizeStats}\n                                                intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'blockchainSizeStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        blockchainSizeStats === null ?\n                            <TronLoader/> :\n                            <LineReactBlockchainSize source='singleChart' style={{height: 500}}\n                                                     data={blockchainSizeStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'priceStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        priceStats === null ?\n                            <TronLoader/> :\n                            <LineReactPrice source='singleChart' style={{height: 500}} data={priceStats} intl={intl}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'accounts' &&\n                    <div style={{height: 500}}>\n                      {\n                        accounts === null ?\n                            <TronLoader/> :\n                            <PieReact style={{height: 500}} data={accounts}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'transactionValueStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        transactionValueStats === null ?\n                            <TronLoader/> :\n                            <LineReact message={{id: 'trx_transferred_past_hour', href: 'transactionValueStats'}}\n                                       style={{height: 500}} data={transactionValueStats}\n                                       keysData={['timestamp', 'value']} format={{timestamp: true}}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'transactionStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        transactionStats === null ?\n                            <TronLoader/> :\n                            <LineReact message={{id: 'transactions_past_hour', href: 'transactionStats'}}\n                                       style={{height: 500}} data={transactionStats} keysData={['timestamp', 'value']}\n                                       format={{timestamp: true}}/>\n                      }\n                    </div>\n                  }\n                  {\n                    match.params.chartName === 'blockStats' &&\n                    <div style={{height: 500}}>\n                      {\n                        blockStats === null ?\n                            <TronLoader/> :\n                            <LineReact message={{id: 'average_blocksize', href: 'blockStats'}}\n                                       style={{height: 500}} data={blockStats} keysData={['timestamp', 'value']}\n                                       format={{timestamp: true}}/>\n                      }\n                    </div>\n                  }\n                    {\n                        match.params.chartName === 'volumeStats' &&\n                        <div style={{height: 500}}>\n                            {\n                                volumeStats === null ?\n                                    <TronLoader/> :\n                                    <LineReactVolumeUsd source='singleChart' style={{height: 500}} data={volumeStats} intl={intl}/>\n                            }\n                        </div>\n                    }\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </main>\n    );\n  }\n}\n\n\nfunction\n\nmapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price\n  };\n}\n\nconst\n    mapDispatchToProps = {\n      loadPriceData,\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n\n(\n    injectIntl(Statistics)\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blockchain/Statistics/SingleChart.js","\n\nexport const tronAddresses = [\n  '27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS',\n  '27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj',\n  '27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx',\n  '27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tron.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format, message} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n\n    config.lineChart.title.text = intl.formatMessage({id: message.id});\n    if(message.href)\n      config.lineChart.title.link = '#/blockchain/stats/' + message.href;\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n\n    if (data && data.length > 0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            if ((val[keysData[0]] + \"\").length === 10)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n            if ((val[keysData[0]] + \"\").length === 13)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));\n          }\n        }\n        else {\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n        }\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.lineChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js"],"sourceRoot":""}