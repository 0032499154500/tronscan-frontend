{"version":3,"sources":["../static/js/SingleStats.a78e813e.chunk.js","components/blockchain/Statistics/SingleChart.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","utils/tron.js","components/common/LineChart.js"],"names":["webpackJsonp","1092","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","defineProperty","_regenerator","_regenerator2","_extends","assign","target","i","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_index","_index2","_api","_constants","_reactRedux","_reactIntl","_lodash","_tron","_loaders","_PieChart","_PieChart2","_LineChart","_LineChart2","_i18n","_reactCountup","_reactCountup2","_reactRouterDom","_LineCharts","_RingPieChart","_markets","Statistics","_React$Component","_this","getPrototypeOf","accounts","transactionStats","blockStats","transactionValueStats","txOverviewStats","addressesStats","blockSizeStats","blockchainSizeStats","priceStats","volumeStats","summit","pieChart","supplyTypesChart","genesisNum","blockProduceRewardsNum","nodeRewardsNum","independenceDayBurned","feeBurnedNum","currentTotalSupply","priceUSD","priceBTC","marketCapitalization","foundationFreeze","circulatingNum","_this2","loadAccounts","loadStats","setInterval","loadTxOverviewStats","_ref","mark","_callee","_ref2","wrap","_context","prev","next","Client","getAccounts","limit","sort","sent","setState","filter","account","includes","tronAddresses","address","slice","map","name","balance","ONE_TRX","stop","_ref3","_callee2","_ref4","stats","_ref5","transactionTotalStats","valueStats","_context2","getTransferStats","groupby","interval","getBlockStats","total","row","timestamp","_ref6","_callee3","intl","today","timerToday","birthday","timerBirthday","dayNum","_ref7","data","priceStatsTemp","volumeData","volumeUSD","volume","_ref8","statisticData","pieChartData","random","balanceData","TRONFoundationTotal","_ref9","blocks","blockHeight","startFeeBurnedNum","supplyTypesChartData","trxPriceData","_ref10","temp","addressesTemp","blockSizeStatsTemp","blockchainSizeStatsTemp","txs","_tx","compare","higest","lowest","addr","tx","bs","pr","vo","p","v","_bcs","b","_b","bcs","_context3","property","obj1","obj2","Date","getTime","Math","floor","get","volume_usd","time","volume_billion","pow","formatNumber","volume_usd_num","getStatisticData","val","push","url","volumeValue","blockProduced","volumePercentage","percentage","maximumFractionDigits","minimumFractionDigits","getBlocks","number","getAddress","abs","toFixed","selected","parseFloat","price_usd","price_btc","getTxOverviewStats","parseInt","date","newAddressSeen","increment","totalTransaction","avgBlockTime","avgBlockSize","totalBlockCount","blockchainSize","cloneDeep","addressesStats_sort","txOverviewStats_sort","blockSizeStats_sort","blockchainSizeStats_sort","priceStats_sort","close","volumeStats_sort","_props","match","_state","unit","params","chartName","createElement","className","role","t","formatDate","style","height","TronLoader","LineReactTx","LineReactAdd","LineReactBlockSize","LineReactBlockchainSize","LineReactPrice","message","id","href","keysData","format","LineReactVolumeUsd","RepresentativesRingPieReact","fontSize","marginRight","marginTop","border","tu","color","Link","to","marginBottom","whiteSpace","textAlign","padding","borderTop","verticalAlign","transform","marginLeft","backgroundColor","paddingBottom","start","end","duration","separator","decimals","SupplyTypesTRXPieChart","Component","mapDispatchToProps","loadPriceData","connect","injectIntl","1148","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","selectedMode","tooltip","_default","1149","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1178","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","pieId","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","pairData","exchanges","index","pair","subCount","finalExchanges","finalPairData","setOption","initPie","_React$Component2","_props2","substring","split","representPieChart","link","datas","percent","toolbox","feature","restore","saveAsImage","reverse","_React$Component3","_this3","_props3","supplyTypesTRXPieChart","seriesCenter","center","1179","legendFilter","registerProcessor","registerSubTypeDefaulter","1180","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1181","legendModels","findComponents","mainType","filterSeries","1182","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1183","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","legendId","canJump","childOfName","setStyle","cursor","pageText","current","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","winRect","startIdx","children","intersect","startItem","startRect","1184","subType","query","1280","1281","LineReact","lineId","lineChart","xAxis","formatTime","initLine","pure"],"mappings":"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","file":"static/js/SingleStats.a78e813e.chunk.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 1092:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(4);var _regenerator2=_interopRequireDefault(_regenerator);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _index=__webpack_require__(60);var _index2=_interopRequireDefault(_index);var _api=__webpack_require__(7);var _constants=__webpack_require__(35);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(12);var _lodash=__webpack_require__(18);var _tron=__webpack_require__(1280);var _loaders=__webpack_require__(26);var _PieChart=__webpack_require__(436);var _PieChart2=_interopRequireDefault(_PieChart);var _LineChart=__webpack_require__(1281);var _LineChart2=_interopRequireDefault(_LineChart);var _i18n=__webpack_require__(8);var _reactCountup=__webpack_require__(229);var _reactCountup2=_interopRequireDefault(_reactCountup);var _reactRouterDom=__webpack_require__(31);var _LineCharts=__webpack_require__(422);var _RingPieChart=__webpack_require__(1178);var _markets=__webpack_require__(420);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Statistics=function(_React$Component){_inherits(Statistics,_React$Component);function Statistics(){_classCallCheck(this,Statistics);var _this=_possibleConstructorReturn(this,(Statistics.__proto__||Object.getPrototypeOf(Statistics)).call(this));_this.state={accounts:null,transactionStats:null,blockStats:null,transactionValueStats:null,txOverviewStats:null,addressesStats:null,blockSizeStats:null,blockchainSizeStats:null,priceStats:null,volumeStats:null,summit:null,pieChart:null,supplyTypesChart:null,genesisNum:null,blockProduceRewardsNum:null,nodeRewardsNum:null,independenceDayBurned:null,feeBurnedNum:null,currentTotalSupply:null,priceUSD:null,priceBTC:null,marketCapitalization:null,foundationFreeze:null,circulatingNum:null};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.loadAccounts();this.loadStats();setInterval(function(){_this2.loadTxOverviewStats();},15000);}},{key:\"loadAccounts\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var _ref2,accounts;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getAccounts({limit:35,sort:'-balance'});case 2:_ref2=_context.sent;accounts=_ref2.accounts;this.setState({accounts:(0,_lodash.filter)(accounts,function(account){return!(0,_lodash.includes)(_tron.tronAddresses,account.address);}).slice(0,10).map(function(account){return{name:account.address,value:account.balance/_constants.ONE_TRX};})});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function loadAccounts(){return _ref.apply(this,arguments);}return loadAccounts;}()},{key:\"loadStats\",value:function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var _ref4,stats,_ref5,blockStats,transactionTotalStats,valueStats;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _api.Client.getTransferStats({groupby:'timestamp',interval:'hour'});case 2:_ref4=_context2.sent;stats=_ref4.stats;_context2.next=6;return _api.Client.getBlockStats({info:\"avg-block-size\"});case 6:_ref5=_context2.sent;blockStats=_ref5.stats;transactionTotalStats=stats.total.map(function(row){return{timestamp:row.timestamp,value:row.value};});valueStats=stats.value.map(function(row){return{timestamp:row.timestamp,value:row.value/_constants.ONE_TRX};});blockStats=blockStats.map(function(row){return{timestamp:row.timestamp,value:row.value};});this.setState({transactionStats:transactionTotalStats,transactionValueStats:valueStats,blockStats:blockStats});case 12:case\"end\":return _context2.stop();}}},_callee2,this);}));function loadStats(){return _ref3.apply(this,arguments);}return loadStats;}()},{key:\"loadTxOverviewStats\",value:function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var intl,today,timerToday,birthday,timerBirthday,dayNum,_ref7,data,priceStatsTemp,volumeData,volumeUSD,volume,_ref8,statisticData,pieChartData,random,balanceData,TRONFoundationTotal,_ref9,blocks,blockHeight,nodeRewardsNum,blockProduceRewardsNum,address,startFeeBurnedNum,feeBurnedNum,genesisNum,independenceDayBurned,currentTotalSupply,circulatingNum,supplyTypesChartData,trxPriceData,priceUSD,priceBTC,marketCapitalization,_ref10,txOverviewStats,temp,addressesTemp,blockSizeStatsTemp,blockchainSizeStatsTemp,txs,_tx,compare,higest,lowest,addr,tx,bs,pr,vo,p,v,_bcs,b,_b,bcs;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:compare=function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};};intl=this.props.intl;today=new Date();timerToday=today.getTime();birthday=new Date(\"2017/10/10\");timerBirthday=birthday.getTime();dayNum=Math.floor((timerToday-timerBirthday)/1000/3600/24);_context3.next=9;return _index2.default.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\"+dayNum);case 9:_ref7=_context3.sent;data=_ref7.data;priceStatsTemp=data['Data'];_context3.next=14;return _index2.default.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\");case 14:volumeData=_context3.sent;volumeUSD=volumeData.data.volume_usd;volume=volumeUSD.map(function(v,i){return{time:v[0],volume_billion:v[1]/Math.pow(10,9),volume_usd:intl.formatNumber(v[1])+' USD',volume_usd_num:v[1]};});_context3.next=19;return _api.Client.getStatisticData();case 19:_ref8=_context3.sent;statisticData=_ref8.statisticData;pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}random=Math.random();_context3.next=26;return _index2.default.get(\"https://tron.network/api/v2/node/balance_info?random=\"+random);case 26:balanceData=_context3.sent;TRONFoundationTotal=balanceData.data.total;_context3.next=30;return _api.Client.getBlocks({limit:1,sort:'-number'});case 30:_ref9=_context3.sent;blocks=_ref9.blocks;blockHeight=blocks[0]?blocks[0].number:0;nodeRewardsNum=blockHeight*16;blockProduceRewardsNum=blockHeight*32;_context3.next=37;return _api.Client.getAddress('TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy');case 37:address=_context3.sent;startFeeBurnedNum=Math.abs(-9223372036854.775808);feeBurnedNum=(startFeeBurnedNum-Math.abs(address.balance/_constants.ONE_TRX)).toFixed(2);genesisNum=100000000000;independenceDayBurned=1000000000;currentTotalSupply=genesisNum+blockProduceRewardsNum+nodeRewardsNum-independenceDayBurned-feeBurnedNum;circulatingNum=(currentTotalSupply-TRONFoundationTotal).toFixed(2);supplyTypesChartData=[{value:TRONFoundationTotal,name:'foundation_freeze',selected:true},{value:circulatingNum,name:'circulating_supply',selected:true}];_context3.next=47;return _index2.default.get(\"https://api.coinmarketcap.com/v1/ticker/tronix/?convert=EUR\");case 47:trxPriceData=_context3.sent;priceUSD=(parseFloat(trxPriceData.data[0].price_usd)*1000).toFixed(2);priceBTC=(parseFloat(trxPriceData.data[0].price_btc)*1000).toFixed(5);marketCapitalization=(parseFloat(trxPriceData.data[0].price_usd)*currentTotalSupply).toFixed(2);_context3.next=53;return _api.Client.getTxOverviewStats();case 53:_ref10=_context3.sent;txOverviewStats=_ref10.txOverviewStats;temp=[];addressesTemp=[];blockSizeStatsTemp=[];blockchainSizeStatsTemp=[];for(txs in txOverviewStats){_tx=parseInt(txs);if(_tx===0){temp.push(txOverviewStats[_tx]);addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen,increment:txOverviewStats[_tx].newAddressSeen});}else{temp.push({date:txOverviewStats[_tx].date,totalTransaction:txOverviewStats[_tx].totalTransaction-txOverviewStats[_tx-1].totalTransaction,avgBlockTime:txOverviewStats[_tx].avgBlockTime,avgBlockSize:txOverviewStats[_tx].avgBlockSize,totalBlockCount:txOverviewStats[_tx].totalBlockCount-txOverviewStats[_tx-1].totalBlockCount,newAddressSeen:txOverviewStats[_tx].newAddressSeen});addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen+addressesTemp[_tx-1].total,increment:txOverviewStats[_tx].newAddressSeen});}blockSizeStatsTemp.push({date:txOverviewStats[_tx].date,avgBlockSize:txOverviewStats[_tx].avgBlockSize});blockchainSizeStatsTemp.push({date:txOverviewStats[_tx].date,blockchainSize:txOverviewStats[_tx].blockchainSize});}this.setState({txOverviewStats:temp,addressesStats:addressesTemp,blockSizeStats:blockSizeStatsTemp,blockchainSizeStats:blockchainSizeStatsTemp,priceStats:priceStatsTemp,volumeStats:volume,pieChart:pieChartData,supplyTypesChart:supplyTypesChartData,genesisNum:intl.formatNumber(genesisNum),blockProduceRewardsNum:intl.formatNumber(blockProduceRewardsNum),nodeRewardsNum:intl.formatNumber(nodeRewardsNum),independenceDayBurned:intl.formatNumber(independenceDayBurned),feeBurnedNum:intl.formatNumber(feeBurnedNum),currentTotalSupply:currentTotalSupply,priceUSD:priceUSD,priceBTC:priceBTC,marketCapitalization:marketCapitalization,foundationFreeze:intl.formatNumber(TRONFoundationTotal),circulatingNum:intl.formatNumber(circulatingNum)});higest={date:'',increment:''};lowest={date:'',increment:''};addr=(0,_lodash.cloneDeep)(addressesTemp).sort(compare('increment'));tx=(0,_lodash.cloneDeep)(temp).sort(compare('totalTransaction'));bs=(0,_lodash.cloneDeep)(blockSizeStatsTemp).sort(compare('avgBlockSize'));pr=(0,_lodash.cloneDeep)(priceStatsTemp).sort(compare('close'));vo=(0,_lodash.cloneDeep)(volume).sort(compare('volume_usd_num'));for(p in pr){pr[p]=_extends({date:pr[p].time},pr[p]);}for(v in vo){vo[v]=_extends({date:vo[v].time},vo[v]);}_bcs=[];for(b in blockchainSizeStatsTemp){_b=parseInt(b);if(_b===0){_bcs.push({date:blockchainSizeStatsTemp[0].date,blockchainSize:blockchainSizeStatsTemp[0].blockchainSize/1000000});}else{_bcs.push({date:blockchainSizeStatsTemp[_b].date,blockchainSize:(blockchainSizeStatsTemp[_b].blockchainSize-blockchainSizeStatsTemp[_b-1].blockchainSize)/1000000});}}bcs=_bcs.sort(compare('blockchainSize'));this.setState({summit:{addressesStats_sort:[{date:addr[addr.length-1].date,increment:addr[addr.length-1].increment},{date:addr[0].date,increment:addr[0].increment}],txOverviewStats_sort:[{date:tx[tx.length-1].date,increment:tx[tx.length-1].totalTransaction},{date:tx[0].date,increment:tx[0].totalTransaction}],blockSizeStats_sort:[{date:bs[bs.length-1].date,increment:bs[bs.length-1].avgBlockSize},{date:bs[0].date,increment:bs[0].avgBlockSize}],blockchainSizeStats_sort:[{date:bcs[bcs.length-1].date,increment:bcs[bcs.length-1].blockchainSize},{date:bcs[0].date,increment:bcs[0].blockchainSize}],priceStats_sort:[{date:pr[pr.length-1].date*1000,increment:pr[pr.length-1].close},{date:pr[0].date*1000,increment:pr[0].close}],volumeStats_sort:[{date:vo[vo.length-1].date,increment:vo[vo.length-1].volume_usd_num},{date:vo[0].date,increment:vo[0].volume_usd_num}]}});case 74:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadTxOverviewStats(){return _ref6.apply(this,arguments);}return loadTxOverviewStats;}()},{key:\"render\",value:function render(){var _props=this.props,match=_props.match,intl=_props.intl;var _state=this.state,txOverviewStats=_state.txOverviewStats,addressesStats=_state.addressesStats,blockSizeStats=_state.blockSizeStats,blockchainSizeStats=_state.blockchainSizeStats,priceStats=_state.priceStats,transactionStats=_state.transactionStats,transactionValueStats=_state.transactionValueStats,blockStats=_state.blockStats,accounts=_state.accounts,volumeStats=_state.volumeStats,pieChart=_state.pieChart,supplyTypesChart=_state.supplyTypesChart,summit=_state.summit,genesisNum=_state.genesisNum,blockProduceRewardsNum=_state.blockProduceRewardsNum,nodeRewardsNum=_state.nodeRewardsNum,independenceDayBurned=_state.independenceDayBurned,feeBurnedNum=_state.feeBurnedNum,currentTotalSupply=_state.currentTotalSupply,priceUSD=_state.priceUSD,priceBTC=_state.priceBTC,marketCapitalization=_state.marketCapitalization,foundationFreeze=_state.foundationFreeze,circulatingNum=_state.circulatingNum;var unit=void 0;if(match.params.chartName==='blockchainSizeStats'||match.params.chartName==='addressesStats'){unit='increase';}else{unit='number';}return _react2.default.createElement(\"main\",{className:\"container header-overlap\"},match.params.chartName!='pieChart'&&match.params.chartName!='supply'?_react2.default.createElement(\"div\",{className:\"alert alert-light\",role:\"alert\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('highest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][0].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][0].date))),_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('lowest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][1].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][1].date))))):null,_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},match.params.chartName==='txOverviewStats'&&_react2.default.createElement(\"div\",{style:{height:500}},txOverviewStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactTx,{source:\"singleChart\",style:{height:500},data:txOverviewStats,intl:intl})),match.params.chartName==='addressesStats'&&_react2.default.createElement(\"div\",{style:{height:500}},addressesStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactAdd,{source:\"singleChart\",style:{height:500},data:addressesStats,intl:intl})),match.params.chartName==='blockSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockSize,{source:\"singleChart\",style:{height:500},data:blockSizeStats,intl:intl})),match.params.chartName==='blockchainSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockchainSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockchainSize,{source:\"singleChart\",style:{height:500},data:blockchainSizeStats,intl:intl})),match.params.chartName==='priceStats'&&_react2.default.createElement(\"div\",{style:{height:500}},priceStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactPrice,{source:\"singleChart\",style:{height:500},data:priceStats,intl:intl})),match.params.chartName==='accounts'&&_react2.default.createElement(\"div\",{style:{height:500}},accounts===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_PieChart2.default,{style:{height:500},data:accounts})),match.params.chartName==='transactionValueStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionValueStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'trx_transferred_past_hour',href:'transactionValueStats'},style:{height:500},data:transactionValueStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='transactionStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'transactions_past_hour',href:'transactionStats'},style:{height:500},data:transactionStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='blockStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_blocksize',href:'blockStats'},style:{height:500},data:blockStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='volumeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},volumeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactVolumeUsd,{source:\"singleChart\",style:{height:500},data:volumeStats,intl:intl})),match.params.chartName==='pieChart'&&_react2.default.createElement(\"div\",null,pieChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{source:\"singleChart\",message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:500}})),match.params.chartName==='supply'&&_react2.default.createElement(\"div\",null,supplyTypesChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(\"div\",{className:\"row\",style:{fontSize:12,marginRight:0}},_react2.default.createElement(\"div\",{className:\"col-md-5\"},_react2.default.createElement(\"div\",{className:\"table-responsive\"},_react2.default.createElement(\"table\",{className:\"table\",style:{marginTop:10}},_react2.default.createElement(\"thead\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{style:{border:0}},_react2.default.createElement(\"i\",{className:\"fa fa-puzzle-piece\"}),_react2.default.createElement(\"span\",{style:{marginTop:2}},(0,_i18n.tu)('TRX_distribution_overview'))))),_react2.default.createElement(\"tbody\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('genesis'),\":\"),_react2.default.createElement(\"td\",null,genesisNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"+  \",(0,_i18n.tu)('block_produce_rewards'),\":\"),_react2.default.createElement(\"td\",null,blockProduceRewardsNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"+ \",(0,_i18n.tu)('node_rewards'),\":\"),_react2.default.createElement(\"td\",null,nodeRewardsNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"- \",(0,_i18n.tu)('independence_day_burned'),\":\"),_react2.default.createElement(\"td\",null,independenceDayBurned,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"- \",(0,_i18n.tu)('fee_burned'),\":\"),_react2.default.createElement(\"td\",null,feeBurnedNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"= \",_react2.default.createElement(\"b\",null,(0,_i18n.tu)('current_total_supply'),\":\"),_react2.default.createElement(\"br\",null)),_react2.default.createElement(\"td\",null,_react2.default.createElement(\"b\",null,intl.formatNumber(currentTotalSupply),\" TRX\"))),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",{style:{color:'red'},className:\"go-foundation\"},_react2.default.createElement(_reactRouterDom.Link,{to:\"/blockchain/foundation\",style:{color:'red'}},(0,_i18n.tu)(\"foundation_freeze\"))),_react2.default.createElement(\"td\",null,foundationFreeze,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('circulating_supply'),\":\"),_react2.default.createElement(\"td\",null,circulatingNum,\" TRX\"))))),_react2.default.createElement(\"br\",null),_react2.default.createElement(\"div\",{className:\"table-responsive\"},_react2.default.createElement(\"table\",{className:\"table\",style:{marginBottom:0}},_react2.default.createElement(\"thead\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{style:{border:0}},_react2.default.createElement(\"br\",null),_react2.default.createElement(\"i\",{className:\"fa fa-coins\"}),\" \",(0,_i18n.tu)('price_per_1000_trx')))),_react2.default.createElement(\"tbody\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('in_USD'),\":\"),_react2.default.createElement(\"td\",null,\"$\",priceUSD)),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('in_BTC'),\":\"),_react2.default.createElement(\"td\",null,priceBTC)))),_react2.default.createElement(\"div\",{style:{fontSize:12,color:'#999',whiteSpace:'nowrap',textAlign:'left',padding:'0.75rem',borderTop:'1px solid #DFD7CA',verticalAlign:'top'}},_react2.default.createElement(\"div\",{style:{transform:'scale(.9)',marginLeft:'-1.3rem'}},\"*\",(0,_i18n.tu)('supply_notes'))))),_react2.default.createElement(\"div\",{className:\"col-md-7\",style:{backgroundColor:'#F5F5F5',marginTop:0,paddingBottom:15}},_react2.default.createElement(\"div\",{className:\"main-counters row\"},_react2.default.createElement(\"div\",{className:\"counters col-md-6 col-sm-6\"},_react2.default.createElement(\"span\",{className:\"counter\"},_react2.default.createElement(_reactCountup2.default,{start:0,end:currentTotalSupply,duration:2,separator:\",\",decimals:2})),_react2.default.createElement(\"h4\",null,(0,_i18n.tu)('total_TRX_supply'))),_react2.default.createElement(\"div\",{className:\"counters col-md-6 col-sm-6\"},_react2.default.createElement(\"span\",{className:\"counter\"},\"$\",_react2.default.createElement(_reactCountup2.default,{start:0,end:marketCapitalization,duration:2,separator:\",\",decimals:2})),_react2.default.createElement(\"h4\",null,(0,_i18n.tu)('market_capitalization')))),_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(_RingPieChart.SupplyTypesTRXPieChart,{message:{id:'breakdown_supply_types'},intl:intl,data:supplyTypesChart,style:{height:400},source:\"singleChart\"})))))))))));}}]);return Statistics;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)((0,_reactIntl.injectIntl)(Statistics));\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(10);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(13);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(147);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(9);\n\nvar _listComponent = __webpack_require__(415);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.SupplyTypesTRXPieChart=exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(12);var _chartConfig=__webpack_require__(223);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(414);__webpack_require__(224);__webpack_require__(225);__webpack_require__(1179);__webpack_require__(1182);__webpack_require__(1183);__webpack_require__(1184);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;if(data.length){for(var index in data){if(data[index].name.indexOf(\"http://\")>-1){data[index].name=data[index].name.substring(7).split('.com')[0];}}}var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var _index3 in data){if(temp.indexOf(data[_index3].name)<0){temp.push(data[_index3].name);exchanges.push({name:data[_index3].name,value:data[_index3].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);var SupplyTypesTRXPieChart=exports.SupplyTypesTRXPieChart=function(_React$Component3){_inherits(SupplyTypesTRXPieChart,_React$Component3);function SupplyTypesTRXPieChart(props){_classCallCheck(this,SupplyTypesTRXPieChart);var _this3=_possibleConstructorReturn(this,(SupplyTypesTRXPieChart.__proto__||Object.getPrototypeOf(SupplyTypesTRXPieChart)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this3.state={pieId:'ringPie'+id};return _this3;}_createClass(SupplyTypesTRXPieChart,[{key:\"initPie\",value:function initPie(id){var _props3=this.props,intl=_props3.intl,data=_props3.data,message=_props3.message,source=_props3.source;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.supplyTypesTRXPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=[];_chartConfig2.default.supplyTypesTRXPieChart.legend.data=[];_chartConfig2.default.supplyTypesTRXPieChart.title.link='#/blockchain/stats/supply';_chartConfig2.default.supplyTypesTRXPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:datas.name})+' ('+intl.formatNumber(datas.value)+' TRX'+')<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){var seriesCenter=['50%','50%'];_chartConfig2.default.supplyTypesTRXPieChart.legend.show=true;_chartConfig2.default.supplyTypesTRXPieChart.series[0].center=seriesCenter;_chartConfig2.default.supplyTypesTRXPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}else{var _seriesCenter=['50%','60%'];_chartConfig2.default.supplyTypesTRXPieChart.legend.show=false;_chartConfig2.default.supplyTypesTRXPieChart.series[0].center=_seriesCenter;_chartConfig2.default.supplyTypesTRXPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var index in data){if(temp.indexOf(data[index].name)<0){temp.push(intl.formatMessage({id:data[index].name}));exchanges.push({name:intl.formatMessage({id:data[index].name}),value:data[index].value,selected:data[index].selected});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=[];_chartConfig2.default.supplyTypesTRXPieChart.legend.data=temp;_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.supplyTypesTRXPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.supplyTypesTRXPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return SupplyTypesTRXPieChart;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1148);\n\n__webpack_require__(1180);\n\n__webpack_require__(1149);\n\nvar legendFilter = __webpack_require__(1181);\n\nvar Component = __webpack_require__(50);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1148);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(9);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1149);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1280:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var tronAddresses=exports.tronAddresses=['27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS','27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj','27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx','27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3'];\n\n/***/ }),\n\n/***/ 1281:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(12);var _chartConfig=__webpack_require__(223);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(423);__webpack_require__(224);__webpack_require__(225);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:\"initLine\",value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text=intl.formatMessage({id:message.id});if(message.href)_chartConfig2.default.lineChart.title.link='#/blockchain/stats/'+message.href;_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{if((val[keysData[0]]+\"\").length===10)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));if((val[keysData[0]]+\"\").length===13)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));}}else{_chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);}_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/SingleStats.a78e813e.chunk.js","import React from \"react\";\nimport xhr from \"axios/index\";\nimport {Client} from \"../../../services/api\";\nimport {ONE_TRX} from \"../../../constants\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport {filter, includes} from \"lodash\";\nimport {tronAddresses} from \"../../../utils/tron\";\nimport {TronLoader} from \"../../common/loaders\";\nimport PieReact from \"../../common/PieChart\";\nimport LineReact from \"../../common/LineChart\";\nimport {cloneDeep} from \"lodash\";\nimport {tu} from \"../../../utils/i18n\";\nimport CountUp from 'react-countup';\nimport {Link} from \"react-router-dom\"\n\nimport {\n    LineReactAdd,\n    LineReactBlockSize,\n    LineReactBlockchainSize,\n    LineReactTx,\n    LineReactPrice,\n    LineReactVolumeUsd\n} from \"../../common/LineCharts\";\n\nimport {\n    RepresentativesRingPieReact,\n    SupplyTypesTRXPieChart\n} from \"../../common/RingPieChart\";\n\nimport {loadPriceData} from \"../../../actions/markets\";\nimport {t} from \"../../../utils/i18n\";\n\nclass Statistics extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            accounts: null,\n            transactionStats: null,\n            blockStats: null,\n            transactionValueStats: null,\n            txOverviewStats: null,\n            addressesStats: null,\n            blockSizeStats: null,\n            blockchainSizeStats: null,\n            priceStats: null,\n            volumeStats: null,\n            summit: null,\n            pieChart: null,\n            supplyTypesChart: null,\n            genesisNum:null,\n            blockProduceRewardsNum:null,\n            nodeRewardsNum:null,\n            independenceDayBurned:null,\n            feeBurnedNum:null,\n            currentTotalSupply:null,\n            priceUSD:null,\n            priceBTC:null,\n            marketCapitalization:null,\n            foundationFreeze:null,\n            circulatingNum:null\n        };\n    }\n\n    componentDidMount() {\n        this.loadAccounts();\n        this.loadStats();\n        setInterval(() => {\n            this.loadTxOverviewStats();\n        }, 15000);\n\n    }\n\n    async loadAccounts() {\n\n        let {accounts} = await Client.getAccounts({\n            limit: 35,\n            sort: '-balance',\n        });\n\n        this.setState({\n            accounts: filter(accounts, account => !includes(tronAddresses, account.address))\n                .slice(0, 10)\n                .map(account => ({\n                    name: account.address,\n                    value: account.balance / ONE_TRX,\n                }))\n        });\n    }\n\n\n    async loadStats() {\n\n        let {stats} = await Client.getTransferStats({\n            groupby: 'timestamp',\n            interval: 'hour',\n        });\n\n        let {stats: blockStats} = await Client.getBlockStats({\n            info: `avg-block-size`,\n        });\n\n        let transactionTotalStats = stats.total.map(row => ({\n            timestamp: row.timestamp,\n            value: row.value,\n        }));\n\n        let valueStats = stats.value.map(row => ({\n            timestamp: row.timestamp,\n            value: row.value / ONE_TRX,\n        }));\n\n        blockStats = blockStats.map(row => ({\n            timestamp: row.timestamp,\n            value: row.value,\n        }));\n\n        this.setState({\n            transactionStats: transactionTotalStats,\n            transactionValueStats: valueStats,\n            blockStats,\n        });\n    }\n\n    async loadTxOverviewStats() {\n        let {intl} = this.props;\n        let today = new Date();\n        let timerToday = today.getTime();\n\n        let birthday = new Date(\"2017/10/10\");\n        let timerBirthday = birthday.getTime();\n        let dayNum = Math.floor((timerToday - timerBirthday) / 1000 / 3600 / 24);\n\n\n        let {data} = await xhr.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\" + dayNum);\n        let priceStatsTemp = data['Data'];\n\n\n        let volumeData = await xhr.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\",);\n        let volumeUSD = volumeData.data.volume_usd\n\n        let volume = volumeUSD.map(function (v, i) {\n            return {\n                time: v[0],\n                volume_billion: v[1] / Math.pow(10, 9),\n                volume_usd: intl.formatNumber(v[1]) + ' USD',\n                volume_usd_num: v[1]\n            }\n        })\n\n        let {statisticData} = await Client.getStatisticData()\n        let pieChartData = [];\n        if (statisticData.length > 0) {\n            statisticData.map((val, i) => {\n                pieChartData.push({\n                    key: i + 1,\n                    name: val.name ? val.name : val.url,\n                    volumeValue: intl.formatNumber(val.blockProduced),\n                    volumePercentage: intl.formatNumber(val.percentage * 100, {\n                        maximumFractionDigits: 2,\n                        minimumFractionDigits: 2\n                    }) + '%',\n                });\n\n            })\n        }\n\n        let random = Math.random();\n        let balanceData = await xhr.get(\"https://tron.network/api/v2/node/balance_info?random=\" + random);\n        let TRONFoundationTotal = balanceData.data.total;\n        let {blocks} = await Client.getBlocks({\n            limit: 1,\n            sort: '-number',\n        });\n        let blockHeight = blocks[0] ? blocks[0].number : 0;\n        let nodeRewardsNum = blockHeight * 16;\n        let blockProduceRewardsNum = blockHeight * 32;\n        let address = await Client.getAddress('TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy');\n        let startFeeBurnedNum = Math.abs(-9223372036854.775808)\n        let feeBurnedNum = (startFeeBurnedNum - Math.abs(address.balance / ONE_TRX)).toFixed(2);\n        let genesisNum = 100000000000;\n        let independenceDayBurned = 1000000000;\n        let currentTotalSupply = genesisNum + blockProduceRewardsNum + nodeRewardsNum - independenceDayBurned - feeBurnedNum;\n        let circulatingNum = (currentTotalSupply  - TRONFoundationTotal).toFixed(2);\n        let supplyTypesChartData = [\n            {value: TRONFoundationTotal, name: 'foundation_freeze', selected: true},\n            {value: circulatingNum, name: 'circulating_supply', selected: true},\n        ]\n        let trxPriceData = await xhr.get(`https://api.coinmarketcap.com/v1/ticker/tronix/?convert=EUR`);\n        let priceUSD = ((parseFloat(trxPriceData.data[0].price_usd))*1000).toFixed(2);\n        let priceBTC = ((parseFloat(trxPriceData.data[0].price_btc))*1000).toFixed(5);\n        let marketCapitalization = ((parseFloat(trxPriceData.data[0].price_usd)*currentTotalSupply)).toFixed(2);\n        let {txOverviewStats} = await Client.getTxOverviewStats();\n        let temp = [];\n        let addressesTemp = [];\n        let blockSizeStatsTemp = [];\n        let blockchainSizeStatsTemp = [];\n        for (let txs in txOverviewStats) {\n            let tx = parseInt(txs);\n            if (tx === 0) {\n                temp.push(txOverviewStats[tx]);\n                addressesTemp.push({\n                    date: txOverviewStats[tx].date,\n                    total: txOverviewStats[tx].newAddressSeen,\n                    increment: txOverviewStats[tx].newAddressSeen\n                });\n            }\n            else {\n                temp.push({\n                    date: txOverviewStats[tx].date,\n                    totalTransaction: (txOverviewStats[tx].totalTransaction - txOverviewStats[tx - 1].totalTransaction),\n                    avgBlockTime: txOverviewStats[tx].avgBlockTime,\n                    avgBlockSize: txOverviewStats[tx].avgBlockSize,\n                    totalBlockCount: (txOverviewStats[tx].totalBlockCount - txOverviewStats[tx - 1].totalBlockCount),\n                    newAddressSeen: txOverviewStats[tx].newAddressSeen\n                });\n                addressesTemp.push({\n                    date: txOverviewStats[tx].date,\n                    total: txOverviewStats[tx].newAddressSeen + addressesTemp[tx - 1].total,\n                    increment: txOverviewStats[tx].newAddressSeen\n                });\n            }\n            blockSizeStatsTemp.push({\n                date: txOverviewStats[tx].date,\n                avgBlockSize: txOverviewStats[tx].avgBlockSize\n            });\n            blockchainSizeStatsTemp.push({\n                date: txOverviewStats[tx].date,\n                blockchainSize: txOverviewStats[tx].blockchainSize\n            });\n        }\n\n        this.setState({\n            txOverviewStats: temp,\n            addressesStats: addressesTemp,\n            blockSizeStats: blockSizeStatsTemp,\n            blockchainSizeStats: blockchainSizeStatsTemp,\n            priceStats: priceStatsTemp,\n            volumeStats: volume,\n            pieChart: pieChartData,\n            supplyTypesChart: supplyTypesChartData,\n            genesisNum:intl.formatNumber(genesisNum),\n            blockProduceRewardsNum:intl.formatNumber(blockProduceRewardsNum),\n            nodeRewardsNum:intl.formatNumber(nodeRewardsNum),\n            independenceDayBurned:intl.formatNumber(independenceDayBurned),\n            feeBurnedNum:intl.formatNumber(feeBurnedNum),\n            currentTotalSupply:currentTotalSupply,\n            priceUSD:priceUSD,\n            priceBTC:priceBTC,\n            marketCapitalization:marketCapitalization,\n            foundationFreeze:intl.formatNumber(TRONFoundationTotal),\n            circulatingNum:intl.formatNumber(circulatingNum)\n        });\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        let higest = {date: '', increment: ''};\n        let lowest = {date: '', increment: ''};\n        let addr = cloneDeep(addressesTemp).sort(compare('increment'));\n        let tx = cloneDeep(temp).sort(compare('totalTransaction'));\n        let bs = cloneDeep(blockSizeStatsTemp).sort(compare('avgBlockSize'));\n        let pr = cloneDeep(priceStatsTemp).sort(compare('close'));\n        let vo = cloneDeep(volume).sort(compare('volume_usd_num'));\n        for (let p in pr) {\n            pr[p] = {date: pr[p].time, ...pr[p]};\n        }\n        for (let v in vo) {\n            vo[v] = {date: vo[v].time, ...vo[v]};\n        }\n        let _bcs = [];\n\n        for (let b in blockchainSizeStatsTemp) {\n            let _b = parseInt(b);\n            if (_b === 0) {\n                _bcs.push({\n                    date: blockchainSizeStatsTemp[0].date,\n                    blockchainSize: blockchainSizeStatsTemp[0].blockchainSize / 1000000\n                });\n            }\n            else {\n                _bcs.push({\n                    date: blockchainSizeStatsTemp[_b].date,\n                    blockchainSize: (blockchainSizeStatsTemp[_b].blockchainSize - blockchainSizeStatsTemp[_b - 1].blockchainSize) / 1000000\n                })\n            }\n        }\n        let bcs = _bcs.sort(compare('blockchainSize'));\n\n        this.setState({\n            summit: {\n                addressesStats_sort: [\n                    {\n                        date: addr[addr.length - 1].date,\n                        increment: addr[addr.length - 1].increment\n                    },\n                    {\n                        date: addr[0].date,\n                        increment: addr[0].increment\n                    }],\n                txOverviewStats_sort: [\n                    {\n                        date: tx[tx.length - 1].date,\n                        increment: tx[tx.length - 1].totalTransaction\n                    },\n                    {\n                        date: tx[0].date,\n                        increment: tx[0].totalTransaction\n                    }],\n                blockSizeStats_sort: [\n                    {\n                        date: bs[bs.length - 1].date,\n                        increment: bs[bs.length - 1].avgBlockSize\n                    },\n                    {\n                        date: bs[0].date,\n                        increment: bs[0].avgBlockSize\n                    }],\n                blockchainSizeStats_sort: [\n                    {\n                        date: bcs[bcs.length - 1].date,\n                        increment: bcs[bcs.length - 1].blockchainSize\n                    },\n                    {\n                        date: bcs[0].date,\n                        increment: bcs[0].blockchainSize\n                    }],\n                priceStats_sort: [\n                    {\n                        date: pr[pr.length - 1].date * 1000,\n                        increment: pr[pr.length - 1].close\n                    },\n                    {\n                        date: pr[0].date * 1000,\n                        increment: pr[0].close\n                    }],\n                volumeStats_sort: [\n                    {\n                        date: vo[vo.length - 1].date,\n                        increment: vo[vo.length - 1].volume_usd_num\n                    },\n                    {\n                        date: vo[0].date,\n                        increment: vo[0].volume_usd_num\n                    }]\n            }\n        });\n    }\n\n\n    render() {\n        let {match, intl} = this.props;\nlet {txOverviewStats, addressesStats, blockSizeStats, blockchainSizeStats, priceStats, transactionStats, transactionValueStats, blockStats, accounts, volumeStats, pieChart, supplyTypesChart, summit,genesisNum,blockProduceRewardsNum,nodeRewardsNum,independenceDayBurned,feeBurnedNum,currentTotalSupply,priceUSD,priceBTC,marketCapitalization,foundationFreeze,circulatingNum} = this.state;\n\n        let unit;\n        if (match.params.chartName === 'blockchainSizeStats' ||\n            match.params.chartName === 'addressesStats') {\n            unit = 'increase';\n        } else {\n            unit = 'number';\n        }\n        return (\n            <main className=\"container header-overlap\">\n                {\n                    match.params.chartName != 'pieChart' && match.params.chartName != 'supply' ?\n                        <div className=\"alert alert-light\" role=\"alert\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6 text-center\">\n                                    {\n                                        summit && summit[match.params.chartName + '_sort'] &&\n                                        <span>{t('highest')}{t(unit)}{t('_of')}\n                                            <strong>{' ' + summit[match.params.chartName + '_sort'][0].increment + ' '}</strong>\n                                            {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][0].date)}\n                            </span>\n                                    }\n                                </div>\n                                <div className=\"col-md-6 text-center\">\n                                    {\n                                        summit && summit[match.params.chartName + '_sort'] &&\n                                        <span>{t('lowest')}{t(unit)}{t('_of')}\n                                            <strong>{' ' + summit[match.params.chartName + '_sort'][1].increment + ' '}</strong>\n                                            {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][1].date)}\n                            </span>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        : null\n                }\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                {\n                                    match.params.chartName === 'txOverviewStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            txOverviewStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactTx source='singleChart' style={{height: 500}}\n                                                             data={txOverviewStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'addressesStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            addressesStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactAdd source='singleChart' style={{height: 500}}\n                                                              data={addressesStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'blockSizeStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            blockSizeStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactBlockSize source='singleChart' style={{height: 500}}\n                                                                    data={blockSizeStats}\n                                                                    intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'blockchainSizeStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            blockchainSizeStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactBlockchainSize source='singleChart' style={{height: 500}}\n                                                                         data={blockchainSizeStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'priceStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            priceStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactPrice source='singleChart' style={{height: 500}}\n                                                                data={priceStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'accounts' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            accounts === null ?\n                                                <TronLoader/> :\n                                                <PieReact style={{height: 500}} data={accounts}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'transactionValueStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            transactionValueStats === null ?\n                                                <TronLoader/> :\n                                                <LineReact message={{\n                                                    id: 'trx_transferred_past_hour',\n                                                    href: 'transactionValueStats'\n                                                }}\n                                                           style={{height: 500}} data={transactionValueStats}\n                                                           keysData={['timestamp', 'value']}\n                                                           format={{timestamp: true}}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'transactionStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            transactionStats === null ?\n                                                <TronLoader/> :\n                                                <LineReact\n                                                    message={{id: 'transactions_past_hour', href: 'transactionStats'}}\n                                                    style={{height: 500}} data={transactionStats}\n                                                    keysData={['timestamp', 'value']}\n                                                    format={{timestamp: true}}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'blockStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            blockStats === null ?\n                                                <TronLoader/> :\n                                                <LineReact message={{id: 'average_blocksize', href: 'blockStats'}}\n                                                           style={{height: 500}} data={blockStats}\n                                                           keysData={['timestamp', 'value']}\n                                                           format={{timestamp: true}}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'volumeStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            volumeStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactVolumeUsd source='singleChart' style={{height: 500}}\n                                                                    data={volumeStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n\n                                    match.params.chartName === 'pieChart' &&\n                                    <div>\n                                        {\n                                            pieChart === null ?\n                                                <TronLoader/> :\n                                                <RepresentativesRingPieReact source='singleChart'\n                                                                             message={{id: 'produce_distribution'}}\n                                                                             intl={intl} data={pieChart}\n                                                                             style={{height: 500}}/>\n\n                                        }\n                                    </div>\n\n                                }\n                                {\n                                    match.params.chartName === 'supply' &&\n                                    <div>\n                                        {\n                                            supplyTypesChart === null ?\n                                                <TronLoader/> :\n                                                <div className=\"row\" style={{fontSize : 12,marginRight:0}}>\n                                                    <div className=\"col-md-5\">\n                                                        <div className=\"table-responsive\">\n                                                            <table className=\"table\" style={{marginTop : 10}}>\n                                                            <thead>\n                                                            <tr>\n                                                                <th style={{border:0}}>\n                                                                    <i className=\"fa fa-puzzle-piece\" ></i>\n                                                                    <span style={{marginTop:2}}>{tu('TRX_distribution_overview')}</span>\n                                                                </th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr>\n                                                                <td>\n                                                                    {tu('genesis')}:\n                                                                </td>\n                                                                <td>\n                                                                    {genesisNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>+  {tu('block_produce_rewards')}:\n                                                                </td>\n                                                                <td>\n                                                                    {blockProduceRewardsNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>+ {tu('node_rewards')}:\n                                                                </td>\n                                                                <td>\n                                                                    {nodeRewardsNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>- {tu('independence_day_burned')}:\n                                                                </td>\n                                                                <td>\n                                                                    {independenceDayBurned} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>- {tu('fee_burned')}:\n                                                                </td>\n                                                                <td>\n                                                                    {feeBurnedNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>= <b>{tu('current_total_supply')}:</b><br/>\n                                                                </td>\n                                                                <td>\n                                                                    <b>{intl.formatNumber(currentTotalSupply)} TRX</b>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td style={{color:'red'}} className=\"go-foundation\">\n                                                                    <Link to=\"/blockchain/foundation\" style={{color:'red',}}>{tu(\"foundation_freeze\")}</Link>\n                                                                </td>\n                                                                <td>\n                                                                    {foundationFreeze} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>{tu('circulating_supply')}:\n                                                                </td>\n                                                                <td>\n                                                                    {circulatingNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                        </table>\n                                                        </div>\n                                                        <br/>\n                                                        <div className=\"table-responsive\">\n                                                            <table className=\"table\" style={{marginBottom:0}}>\n                                                                <thead>\n                                                                <tr>\n                                                                    <th style={{border:0}}><br/><i className=\"fa fa-coins\" ></i> {tu('price_per_1000_trx')}</th>\n                                                                </tr>\n                                                                </thead>\n                                                                <tbody><tr>\n                                                                    <td>{tu('in_USD')}:\n                                                                    </td>\n                                                                    <td>\n                                                                        ${priceUSD}\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>{tu('in_BTC')}:\n                                                                    </td>\n                                                                    <td>\n                                                                        {priceBTC}\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody></table>\n                                                                <div style={{fontSize:12,color:'#999',whiteSpace: 'nowrap',textAlign:'left', padding: '0.75rem',borderTop: '1px solid #DFD7CA',verticalAlign: 'top'}}>\n                                                                    <div style={{transform:'scale(.9)',marginLeft: '-1.3rem'}}>\n                                                                        *{tu('supply_notes')}\n                                                                    </div>\n                                                                </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-7\" style={{backgroundColor: '#F5F5F5',marginTop:0,paddingBottom:15}}>\n                                                        <div className=\"main-counters row\">\n                                                            <div className=\"counters col-md-6 col-sm-6\">\n                                                                <span className=\"counter\">\n                                                                    <CountUp start={0} end={currentTotalSupply} duration={2}  separator=\",\" decimals={2} />\n                                                                </span>\n                                                                <h4>{tu('total_TRX_supply')}</h4>\n                                                            </div>\n                                                            <div className=\"counters col-md-6 col-sm-6\">\n                                                                <span className=\"counter\">\n                                                                    $<CountUp start={0} end={marketCapitalization} duration={2}  separator=\",\" decimals={2}/>\n                                                                </span>\n                                                                <h4>{tu('market_capitalization')}</h4>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"card\">\n                                                            <div className=\"card-body\">\n                                                                <SupplyTypesTRXPieChart\n                                                                    message={{id: 'breakdown_supply_types'}}\n                                                                    intl={intl}\n                                                                    data={supplyTypesChart}\n                                                                    style={{height: 400}}\n                                                                    source='singleChart'\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            }\n                                    </div>\n\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </main>\n        );\n    }\n}\n\n\nfunction\n\nmapStateToProps(state) {\n    return {\n        priceGraph: state.markets.price\n    };\n}\n\nconst\n    mapDispatchToProps = {\n        loadPriceData,\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n\n(\n    injectIntl(Statistics)\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blockchain/Statistics/SingleChart.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1148\n// module chunks = 1 8 9 10","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1149\n// module chunks = 1 8 9 10","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text = intl.formatMessage({id: message.id}) + ' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if (data && data.length === 0) {\n      config.ringPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message, source} = this.props;\n    if (data.length) {\n      for (let index in data) {\n        if (data[index].name.indexOf(\"http://\") > -1) {\n          data[index].name = data[index].name.substring(7).split('.com')[0];\n        }\n      }\n    }\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.representPieChart.title.text = intl.formatMessage({id: message.id});\n    config.representPieChart.series[0].data = [];\n    config.representPieChart.legend.data = [];\n    config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n    config.representPieChart.tooltip.formatter = function (datas) {\n      return (\n          intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n          intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n          intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n      )\n\n    }\n    if (source === 'singleChart') {\n      config.representPieChart.legend.show = true;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: true,\n          title: 'save'\n        }\n      }\n    } else {\n      config.representPieChart.legend.show = false;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          show: false,\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: false,\n          title: 'save'\n        }\n      }\n    }\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let exchanges = []\n      let temp = [];\n      for (let index in data) {\n        if (temp.indexOf(data[index].name) < 0) {\n          temp.push(data[index].name)\n          exchanges.push({name: data[index].name, value: data[index].volumeValue});\n        }\n      }\n\n      exchanges.sort(compare(\"value\")).reverse();\n\n      config.representPieChart.series[0].data = [];\n      config.representPieChart.legend.data = temp;\n      config.representPieChart.series[0].data = exchanges;\n\n    }\n    if (data && data.length === 0) {\n      config.representPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.representPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\n\n\nexport class SupplyTypesTRXPieChart extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let id = ('_' + Math.random()).replace('.', '_');\n        this.state = {\n            pieId: 'ringPie' + id\n        }\n    }\n\n    initPie(id) {\n        let {intl, data,message,source} = this.props;\n        let myChart = echarts.getInstanceByDom(document.getElementById(id));\n        if (myChart === undefined) {\n            myChart = echarts.init(document.getElementById(id));\n        }\n        config.supplyTypesTRXPieChart.title.text=intl.formatMessage({id:message.id});\n        config.supplyTypesTRXPieChart.series[0].data = [];\n        config.supplyTypesTRXPieChart.legend.data = [];\n        config.supplyTypesTRXPieChart.title.link = '#/blockchain/stats/supply';\n        config.supplyTypesTRXPieChart.tooltip.formatter = function (datas) {\n            return (\n                intl.formatMessage({id: datas.name}) + ' (' + intl.formatNumber(datas.value) + ' TRX' + ')<br/>' +\n                intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n            )\n        }\n        if(source==='singleChart'){\n            let seriesCenter = ['50%', '50%'];\n            config.supplyTypesTRXPieChart.legend.show = true;\n            config.supplyTypesTRXPieChart.series[0].center = seriesCenter;\n            config.supplyTypesTRXPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }else{\n            let seriesCenter = ['50%', '60%'];\n            config.supplyTypesTRXPieChart.legend.show = false;\n            config.supplyTypesTRXPieChart.series[0].center = seriesCenter;\n            config.supplyTypesTRXPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        if (data && data.length > 0) {\n            let exchanges = []\n            let temp = [];\n            for (let index in data) {\n                if (temp.indexOf(data[index].name) < 0) {\n                    temp.push(intl.formatMessage({id: data[index].name}) )\n                    exchanges.push({name: intl.formatMessage({id: data[index].name}), value: data[index].value,selected:data[index].selected});\n                }\n            }\n\n            exchanges.sort(compare(\"value\")).reverse();\n            config.supplyTypesTRXPieChart.series[0].data = [];\n            config.supplyTypesTRXPieChart.legend.data = temp;\n            config.supplyTypesTRXPieChart.series[0].data = exchanges;\n\n        }\n        if(data && data.length===0){\n            config.supplyTypesTRXPieChart.title.text=\"No data\";\n        }\n        myChart.setOption(config.supplyTypesTRXPieChart);\n    }\n\n\n    componentDidMount() {\n        this.initPie(this.state.pieId);\n    }\n\n    componentDidUpdate() {\n        this.initPie(this.state.pieId);\n    }\n\n    render() {\n        return (\n            <div>\n                <div id={this.state.pieId} style={this.props.style}></div>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1179\n// module chunks = 1 8 9 10","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1180\n// module chunks = 1 8 9 10","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1181\n// module chunks = 1 8 9 10","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1182\n// module chunks = 1 8 9 10","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1183\n// module chunks = 1 8 9 10","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1184\n// module chunks = 1 8 9 10","\n\nexport const tronAddresses = [\n  '27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS',\n  '27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj',\n  '27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx',\n  '27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tron.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format, message} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n\n    config.lineChart.title.text = intl.formatMessage({id: message.id});\n    if(message.href)\n      config.lineChart.title.link = '#/blockchain/stats/' + message.href;\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n\n    if (data && data.length > 0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            if ((val[keysData[0]] + \"\").length === 10)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n            if ((val[keysData[0]] + \"\").length === 13)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));\n          }\n        }\n        else {\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n        }\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.lineChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js"],"sourceRoot":""}