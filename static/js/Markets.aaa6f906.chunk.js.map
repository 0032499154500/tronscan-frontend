{"version":3,"sources":["../static/js/Markets.aaa6f906.chunk.js","components/markets/index.js","../node_modules/zrender/lib/core/util.js","../node_modules/echarts/lib/util/model.js","../node_modules/echarts/lib/util/graphic.js","../node_modules/echarts/lib/echarts.js","../node_modules/echarts/lib/config.js","../node_modules/echarts/lib/util/number.js","../node_modules/zrender/lib/core/vector.js","../node_modules/zrender/lib/core/env.js","../node_modules/zrender/lib/graphic/Path.js","../node_modules/zrender/lib/core/BoundingRect.js","../node_modules/echarts/lib/util/format.js","../node_modules/echarts/lib/util/layout.js","../node_modules/echarts/lib/model/Model.js","../node_modules/echarts/lib/util/clazz.js","../node_modules/echarts/lib/model/Component.js","../node_modules/zrender/lib/contain/text.js","../node_modules/zrender/lib/core/matrix.js","../node_modules/zrender/lib/core/curve.js","../node_modules/echarts/lib/coord/axisHelper.js","../node_modules/echarts/lib/data/helper/dataProvider.js","../node_modules/zrender/lib/mixin/Eventful.js","../node_modules/zrender/lib/tool/color.js","../node_modules/zrender/lib/core/event.js","../node_modules/echarts/lib/data/Source.js","../node_modules/echarts/lib/data/helper/dataStackHelper.js","../node_modules/zrender/lib/container/Group.js","../node_modules/zrender/lib/config.js","../node_modules/zrender/lib/graphic/Displayable.js","../node_modules/zrender/lib/core/PathProxy.js","../node_modules/echarts/lib/util/component.js","../node_modules/echarts/lib/data/helper/sourceType.js","../node_modules/echarts/lib/scale/Scale.js","../node_modules/echarts/lib/component/axisPointer/modelHelper.js","../node_modules/echarts/lib/util/symbol.js","../node_modules/zrender/lib/core/timsort.js","../node_modules/zrender/lib/graphic/helper/image.js","../node_modules/echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/zrender/lib/graphic/Gradient.js","../node_modules/echarts/lib/data/helper/sourceHelper.js","../node_modules/echarts/lib/CoordinateSystem.js","../node_modules/echarts/lib/stream/task.js","../node_modules/echarts/lib/util/throttle.js","../node_modules/echarts/lib/data/helper/dimensionHelper.js","../node_modules/echarts/lib/scale/Interval.js","../node_modules/echarts/lib/view/Chart.js","../node_modules/echarts/lib/data/List.js","../node_modules/echarts/lib/data/helper/createDimensions.js","../node_modules/zrender/lib/zrender.js","../node_modules/zrender/lib/core/guid.js","../node_modules/zrender/lib/Element.js","../node_modules/zrender/lib/mixin/Transformable.js","../node_modules/zrender/lib/animation/Animator.js","../node_modules/zrender/lib/core/LRU.js","../node_modules/zrender/lib/core/log.js","../node_modules/zrender/lib/graphic/Style.js","../node_modules/zrender/lib/graphic/helper/fixShadow.js","../node_modules/zrender/lib/graphic/Pattern.js","../node_modules/zrender/lib/animation/requestAnimationFrame.js","../node_modules/zrender/lib/graphic/Image.js","../node_modules/zrender/lib/graphic/helper/text.js","../node_modules/zrender/lib/graphic/helper/roundRect.js","../node_modules/echarts/lib/model/Global.js","../node_modules/zrender/lib/core/bbox.js","../node_modules/zrender/lib/contain/util.js","../node_modules/zrender/lib/contain/windingLine.js","../node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/zrender/lib/graphic/helper/poly.js","../node_modules/echarts/lib/model/mixin/colorPalette.js","../node_modules/echarts/lib/model/referHelper.js","../node_modules/echarts/lib/ExtensionAPI.js","../node_modules/echarts/lib/model/Series.js","../node_modules/echarts/lib/chart/helper/createRenderPlanner.js","../node_modules/echarts/lib/chart/helper/createListFromArray.js","../node_modules/echarts/lib/data/helper/completeDimensions.js","../node_modules/echarts/lib/data/OrdinalMeta.js","../node_modules/echarts/lib/scale/helper.js","../node_modules/echarts/lib/coord/axisModelCommonMixin.js","../node_modules/echarts/lib/coord/Axis.js","../node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/echarts/lib/component/axisPointer/globalListener.js","../node_modules/echarts/lib/component/axisPointer/viewHelper.js","../node_modules/echarts/lib/component/axis/AxisBuilder.js","../node_modules/echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/echarts/lib/component/axis/AxisView.js","../node_modules/echarts/lib/chart/helper/Symbol.js","../node_modules/echarts/lib/chart/line/helper.js","../node_modules/echarts/lib/coord/cartesian/AxisModel.js","components/common/chart.config.js","../node_modules/echarts/lib/component/title.js","../node_modules/echarts/lib/component/tooltip.js","../node_modules/zrender/lib/Handler.js","../node_modules/zrender/lib/mixin/Draggable.js","../node_modules/zrender/lib/Storage.js","../node_modules/zrender/lib/mixin/Animatable.js","../node_modules/zrender/lib/animation/Clip.js","../node_modules/zrender/lib/animation/easing.js","../node_modules/zrender/lib/Painter.js","../node_modules/zrender/lib/Layer.js","../node_modules/zrender/lib/graphic/mixin/RectText.js","../node_modules/zrender/lib/animation/Animation.js","../node_modules/zrender/lib/dom/HandlerProxy.js","../node_modules/zrender/lib/core/GestureMgr.js","../node_modules/echarts/lib/model/mixin/lineStyle.js","../node_modules/echarts/lib/model/mixin/areaStyle.js","../node_modules/echarts/lib/model/mixin/textStyle.js","../node_modules/zrender/lib/tool/path.js","../node_modules/zrender/lib/contain/path.js","../node_modules/zrender/lib/contain/line.js","../node_modules/zrender/lib/contain/cubic.js","../node_modules/zrender/lib/contain/quadratic.js","../node_modules/zrender/lib/contain/arc.js","../node_modules/zrender/lib/tool/transformPath.js","../node_modules/zrender/lib/graphic/Text.js","../node_modules/zrender/lib/graphic/shape/Circle.js","../node_modules/zrender/lib/graphic/shape/Sector.js","../node_modules/zrender/lib/graphic/shape/Ring.js","../node_modules/zrender/lib/graphic/shape/Polygon.js","../node_modules/zrender/lib/graphic/helper/smoothSpline.js","../node_modules/zrender/lib/graphic/helper/smoothBezier.js","../node_modules/zrender/lib/graphic/shape/Polyline.js","../node_modules/zrender/lib/graphic/shape/Rect.js","../node_modules/zrender/lib/graphic/shape/Line.js","../node_modules/zrender/lib/graphic/shape/BezierCurve.js","../node_modules/zrender/lib/graphic/shape/Arc.js","../node_modules/zrender/lib/graphic/CompoundPath.js","../node_modules/zrender/lib/graphic/LinearGradient.js","../node_modules/zrender/lib/graphic/RadialGradient.js","../node_modules/zrender/lib/graphic/IncrementalDisplayable.js","../node_modules/echarts/lib/model/mixin/itemStyle.js","../node_modules/echarts/lib/model/mixin/boxLayout.js","../node_modules/echarts/lib/model/globalDefault.js","../node_modules/echarts/lib/model/OptionManager.js","../node_modules/echarts/lib/preprocessor/backwardCompat.js","../node_modules/echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/echarts/lib/processor/dataStack.js","../node_modules/echarts/lib/model/mixin/dataFormat.js","../node_modules/echarts/lib/view/Component.js","../node_modules/echarts/lib/visual/seriesColor.js","../node_modules/echarts/lib/visual/aria.js","../node_modules/echarts/lib/lang.js","../node_modules/echarts/lib/loading/default.js","../node_modules/echarts/lib/stream/Scheduler.js","../node_modules/echarts/lib/theme/light.js","../node_modules/echarts/lib/theme/dark.js","../node_modules/echarts/lib/export.js","../node_modules/echarts/lib/helper.js","../node_modules/echarts/lib/data/DataDiffer.js","../node_modules/echarts/lib/scale/Ordinal.js","../node_modules/echarts/lib/layout/barGrid.js","../node_modules/echarts/lib/scale/Time.js","../node_modules/echarts/lib/scale/Log.js","../node_modules/echarts/lib/coord/geo/parseGeoJson.js","../node_modules/echarts/lib/coord/geo/Region.js","../node_modules/zrender/lib/contain/polygon.js","../node_modules/echarts/lib/component/axisPointer.js","../node_modules/echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/echarts/lib/component/tooltip/TooltipModel.js","../node_modules/echarts/lib/component/tooltip/TooltipView.js","../node_modules/echarts/lib/component/tooltip/TooltipContent.js","../node_modules/echarts/lib/chart/line.js","../node_modules/echarts/lib/chart/line/LineSeries.js","../node_modules/echarts/lib/chart/line/LineView.js","../node_modules/echarts/lib/chart/helper/SymbolDraw.js","../node_modules/echarts/lib/chart/helper/labelHelper.js","../node_modules/echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/echarts/lib/chart/line/poly.js","../node_modules/echarts/lib/visual/symbol.js","../node_modules/echarts/lib/layout/points.js","../node_modules/echarts/lib/processor/dataSample.js","../node_modules/echarts/lib/component/gridSimple.js","../node_modules/echarts/lib/coord/cartesian/Grid.js","../node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/echarts/lib/coord/cartesian/Cartesian.js","../node_modules/echarts/lib/coord/cartesian/Axis2D.js","../node_modules/echarts/lib/coord/cartesian/GridModel.js","../node_modules/echarts/lib/coord/axisModelCreator.js","../node_modules/echarts/lib/coord/axisDefault.js","../node_modules/echarts/lib/component/axis.js","../node_modules/echarts/lib/component/axis/CartesianAxisView.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","../node_modules/echarts/lib/chart/pie.js","../node_modules/echarts/lib/chart/pie/PieSeries.js","../node_modules/echarts/lib/chart/helper/createListSimply.js","../node_modules/echarts/lib/component/helper/selectableMixin.js","../node_modules/echarts/lib/chart/pie/PieView.js","../node_modules/echarts/lib/action/createDataSelectAction.js","../node_modules/echarts/lib/visual/dataColor.js","../node_modules/echarts/lib/chart/pie/pieLayout.js","../node_modules/echarts/lib/chart/pie/labelLayout.js","../node_modules/echarts/lib/processor/dataFilter.js","components/common/LineChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/helper/listComponent.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","components/markets/MarketOverview.js","components/common/RingPieChart.js"],"names":["webpackJsonp","1003","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","volumeGraph","volume","defineProperty","_regenerator","_regenerator2","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_reactIntl","_reactRedux","_markets","_i18n","_MarketOverview","_MarketOverview2","_loaders","_api","_LineChart","_LineChart2","_RingPieChart","_RingPieChart2","Markets","_React$Component","_this2","_this","getPrototypeOf","loadMarketData","mark","_callee","wrap","_context","prev","next","loadPriceData","Client","getMarkets","sent","setState","stop","_props","intl","createElement","className","tu","style","height","TronLoader","data","keysData","format","time","date","Component","mapDispatchToProps","connect","pure","injectIntl","1008","$override","name","_ctx","methods","clone","source","result","typeStr","objToString","isPrimitive","len","TYPED_ARRAY","Ctor","from","BUILTIN_OBJECT","isDom","hasOwnProperty","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","createCanvas","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prop","mixin","isArrayLike","each","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","concat","curry","isFunction","isString","type","isTypedArray","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","trim","str","replace","setAsPrimitive","primitiveKey","HashMap","visit","isArr","thisMap","set","createHashMap","concatArray","a","b","newArray","offset","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","Array","document","get","removeKey","1010","normalizeToArray","defaultEmphasis","opt","subOpts","emphasis","subOptName","getDataItemValue","dataItem","Date","isDataItemOption","mappingToExists","exists","newCptOptions","zrUtil","index","exist","cptOption","option","id","isIdInner","makeIdAndName","mapResult","idMap","item","existCpt","keyInfo","DUMMY_COMPONENT_NAME_PREFIX","idNum","isNameSpecified","componentModel","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","dataIndex","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","makeInner","innerUniqueIndex","Math","random","toFixed","hostObj","parseFinder","ecModel","finder","defaultMainType","has","parsedKey","match","mainType","queryType","toLowerCase","includeMainTypes","queryParam","models","queryComponents","setAttribute","dom","getAttribute","TEXT_STYLE_OPTIONS","1011","extendShape","opts","Path","extendPath","pathData","pathTool","extendFromString","makePath","rect","layout","path","createFromString","boundingRect","getBoundingRect","centerGraphic","resizePath","makeImage","imageUrl","ZImage","image","x","y","width","onload","img","setStyle","aspect","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","lineWidth","round","x1","x2","subPixelOptimize","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","max","position","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","colorTool","lift","cacheElementStl","el","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","useHoverLayer","__zr","addHover","insideRollbackOpt","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","textFill","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","traverse","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","e","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setHoverStyle","hoverSilentOnTouch","on","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","EMPTY_OBJ","baseText","labelFetcher","labelDataIndex","labelDimIndex","showNormal","getShallow","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","setTextStyle","text","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","setText","labelModel","defaultColor","isRectText","textPosition","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","getModel","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","originalTextPosition","insideRollback","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","getFont","gTextStyleModel","join","animateOrSetProps","isUpdate","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","stopAnimation","attr","updateProps","initProps","getTransform","ancestor","mat","matrix","identity","mul","getLocalTransform","parent","transform","invert","Transformable","vector","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","isGroup","anid","oldEl","newProp","clipPointsByRect","points","point","mathMax","mathMin","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","Image","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","IncrementalDisplayable","min","mergePath","1012","createRegisterEventWithLowercaseName","method","eventName","handler","Eventful","MessageCenter","ECharts","theme","prioritySortFunc","__prio","themeStorage","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","backwardCompat","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","api","createExtensionAPI","timsort","visualFuncs","dataProcessorFuncs","_scheduler","Scheduler","_messageCenter","_initEvents","resize","_pendingActions","animation","_onframe","bindRenderedEvent","doConvertPixel","methodName","_model","coordSysList","getCoordinateSystems","modelUtil","coordSys","prepare","ecIns","scheduler","restorePipelines","prepareStageTasks","prepareView","plan","updateDirectly","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","updateStreamModes","chartsMap","eachSeries","seriesModel","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","isFinished","unfinished","doPrepare","viewId","viewMap","classType","isComponent","ComponentView","getClass","ChartView","viewList","add","__id","__ecComponentInfo","componentIndex","componentType","renderTask","dispose","remove","splice","clearColorPalette","render","renderComponents","chart","renderSeries","dirtyList","componentView","updateZ","dirtyMap","chartView","updatePayload","uid","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","aria","performPostUpdateFuncs","postUpdateFuncs","storage","elCount","env","node","blendMode","blend","eachPendingDisplayable","displayable","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","existInstance","getInstanceByDom","idBase","DOM_ATTRIBUTE_KEY","groupId","groupIdBase","disConnect","isDisposed","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","optionPreprocessorFuncs","registerProcessor","priority","processor","normalizeRegister","PRIORITY_PROCESSOR_FILTER","registerPostUpdate","postUpdateFunc","registerAction","ACTION_REG","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","PRIORITY_VISUAL_LAYOUT","registerVisual","visualTask","PRIORITY_VISUAL_CHART","targetList","defaultPriority","visualType","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","loadingEffects","extendComponentModel","ComponentModel","extendComponentView","extendSeriesModel","SeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","parse","mapDataStores","getMap","_config","__DEV__","GlobalModel","OptionManager","dataStack","graphic","_throttle","seriesColor","loadingDefault","lightTheme","darkTheme","dependencies","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","off","one","echartsProto","_disposed","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","setTheme","console","log","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataUrl","svgSupported","list","getDisplayList","pathToDataUrl","getDataURL","excludeComponents","excludesComponentViews","component","ignore","url","getType","toDataURL","getConnectedDataURL","left","Infinity","top","right","bottom","canvasList","canvas","getBoundingClientRect","targetCanvas","refreshImmediately","convertToPixel","convertFromPixel","containPixel","coordinateSystem","containPoint","getVisual","getData","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","setBackgroundColor","colorArr","stringify","updateTransform","componentDirtyList","seriesDirtyMap","setDirty","updateView","markUpdateMethod","updateVisual","updateLayout","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","browser","weChat","appendData","params","seriesIndex","getSeriesByIndex","MOUSE_EVENT_NAMES","eveName","dataModel","getDataParams","dataType","eventData","clear","series","disconnect","dataTool","version","___ec_export","1013","global","dev","1014","_trim","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","NaN","precision","returnStr","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","floor","sizeQuantity","isFinite","getPercentWithPrecision","valueList","idx","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","remRadian","radian","pi2","isRadianAroundZero","RADIAN_EPSILON","parseDate","TIME_REG","exec","hour","toUpperCase","UTC","quantity","quantityExponent","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","MAX_SAFE_INTEGER","1015","out","ArrayCtor","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","Float32Array","lengthSquare","dist","distSquare","1016","wx","os","wxa","touchEventsSupported","worker","navigator","ua","firefox","ie","edge","SVGRect","pointerEventsSupported","userAgent","_default","1017","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","1018","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","1021","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","TPL_VAR_ALIAS","wrapVar","seriesIdx","k","formatTplSimple","getTooltipMarker","extraCssText","pad","substr","formatTime","isUTC","numberUtil","utc","M","h","S","capitalFirst","textContain","varName","truncateText","getTextRect","1024","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","formatUtil","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","HV_NAMES","mergeLayoutParam","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","getLayoutParams","copyLayoutParams","LOCATION_PARAMS","_number","box","vbox","hbox","1027","Model","doGet","pathArr","getParent","getParentMethod","inner","_clazz","enableClassExtend","enableClassCheck","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","1029","ret","TYPE_DELIMITER","checkClassType","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","superCall","superApply","Clz","classAttr","classBase","isInstance","enableClassManagement","entity","options","makeContainer","container","IS_CONTAINER","registerClass","Clazz","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","1031","getDependencies","deps","unshift","componentUtil","boxLayoutMixin","defaultOption","dependentModels","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","newCptOption","isInit","fields","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","1033","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","_util","1038","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","1039","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","1040","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","getCategories","setBlank","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","eachSeriesByType","getBaseAxis","axis","adjustedScale","adjustScaleForOverflow","axisExtent","axisLength","barWidthAndOffset","calBarWidthAndOffset","baseAxisKey","dim","barsOnCurrentAxis","undefined","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","OrdinalScale","getOrdinalMeta","IntervalScale","Scale","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","_barGrid","1042","DefaultDataProvider","dimSize","Source","seriesDataToSource","_source","_data","sourceFormat","SOURCE_FORMAT_TYPED_ARRAY","_offset","_dimSize","providerMethods","SOURCE_FORMAT_ARRAY_ROWS","seriesLayoutBy","countSimply","getItemSimply","appendDataSimply","newData","getRawValueSimply","dimIndex","dimName","getDimValueSimply","converDataValue","_dimensionInfos","dimInfo","dimType","ordinalMeta","parseAndCollect","retrieveRawValue","getRawDataItem","getProvider","getSource","getDimensionInfo","rawValueGetters","retrieveRawAttr","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_OBJECT_ROWS","_sourceType","providerProto","persistent","arrayRows_column","startIndex","getItem","arrayRows_row","row","objectRows","keyedColumns","dimensionsDefine","col","dims","newCol","oldCol","original","typedArray","clean","arrayRows","defaultDimValueGetters","_rawData","hasItemOption","1044","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","1045","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","1046","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","preventDefault","stopPropagation","cancelBubble","returnValue","1047","fromDataset","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SERIES_LAYOUT_BY_COLUMN","encodeDefine","dimensionsDetectCount","1048","enableDataStack","dimensionInfoList","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","dimensionInfo","isExtraCoord","coordDim","createInvertedIndices","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","coordDimIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","stackedDim","stackedByDim","getCalculationInfo","1053","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","1054","debugMode","1055","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","progressive","incremental","inplace","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","1056","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","cx","cy","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","dash","dashSum","nDash","bezierLen","tmpLen","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","1057","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","stack","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","1058","SERIES_LAYOUT_BY_ROW","1059","setting","_setting","_extent","_interval","clazzUtil","getSetting","unionExtent","unionExtentFromData","getApproximateExtent","start","end","thisExtent","isBlank","_isBlank","1060","collect","axesInfo","seriesInvolved","coordSysAxesInfo","coordSysMap","collectAxesInfo","collectSeriesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","useHandle","seriesModels","axesInfoInCoordSys","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","tooltipAxisPointerLabelShow","crossStyle","lineStyle","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","fixValue","getAxisInfo","reverse","getAxisPointerModel","1061","symbolPathSetColor","innerColor","symbolStyle","symbolShape","symbolType","__isEmptyBrush","createSymbol","keepAspect","symbolPath","SymbolClz","setColor","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","size","symbolBuildProxies","proxySymbol","1071","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","1072","newImageOrSrc","cachedImgObj","globalImageCache","createOrUpdateImage","hostEl","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","src","1073","excludes","includes","propName","1074","Gradient","addColorStop","1075","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","sourceHeader","getDatasetModel","datasetOption","completeResult","completeBySourceData","makeDefaultEncode","normalizeDimensionsDefine","findPotentialName","arrayRowsTravelFirst","objectRowsCollectDimensions","colArr","potentialNameDimIndex","nameMap","displayName","maxLoop","firstIndex","coordSysDefine","getCoordSysDefineBySeries","encodeItemName","encodeSeriesName","seriesType","nSeriesMap","cSeriesMap","datasetRecord","categoryWayDim","valueWayDim","coordSysDims","firstCategoryDimIndex","dataDim","categoryAxisMap","firstNotOrdinal","doGuessOrdinal","nameDimIndex","itemName","seriesName","datasetIndex","guessOrdinal","detectValue","sample","_referHelper","1076","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","1077","createTask","define","Task","_reset","reset","_plan","_count","_onDirty","onDirty","_dirty","taskIns","skip","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","progress","forceFirstProgress","_progress","downstream","_downstream","taskProto","performArgs","upTask","_upstream","outputData","__pipeline","currentTask","planResult","outputDueEnd","pipe","downTask","getUpstream","getDownstream","setOutputEnd","1078","delay","debounce","lastExec","getTime","timer","scope","currCall","diff","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","ORIGIN_METHOD","lastThrottleType","THROTTLE_TYPE","RATE","1079","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","dimItem","coordDimArr","mayLabelDimType","OTHER_DIMENSIONS","otherDim","otherDimArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","encodeLabel","defaultedTooltip","encodeTooltip","tooltip","getDimensionTypeByAxis","1080","helper","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","1085","Chart","renderTaskPlan","renderTaskReset","elSetState","toggleHighlight","dataIdx","getItemGraphicEl","eachItemGraphicEl","renderPlanner","canProgressiveRender","pipelineContext","progressMethodMap","_task","createRenderPlanner","highlight","downplay","incrementalPrepareRender","incrementalRender","chartProto","1086","getIndicesCtor","_rawCount","CtorUint32Array","CtorUint16Array","cloneChunk","originalChunk","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","prepareInvertedIndex","invertedIndicesMap","_invertedIndicesMap","invertedIndices","categories","getRawIndexWithoutIndices","getRawIndexWithIndices","_indices","getId","rawIndex","_idList","_getIdFromStore","ID_PREFIX","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","List","hostModel","_storage","originalStorage","rawExtent","_rawExtent","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","DataDiffer","_dataProvider","_dimensionHelper","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","Uint32Array","Uint16Array","dimensionInfos","dimensionNames","dimensionName","_nameList","_optionModels","_visual","_layout","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_approximateExtent","_dimensionsSummary","_calculationInfo","listProto","getDimension","getDimensionsOnCoord","mapDimension","dimensionsSummary","initData","nameList","dimValueGetter","_nameRepeatCount","defaultDimValueGetter","_dimValueGetter","_initDataFromProvider","rawData","nameDimIdx","chunkSize","dimensionInfoMap","idList","nameRepeatCount","chunkCount","lastChunkIndex","_nameDimIdx","itemId","_idDimIdx","DataCtor","resizeChunkArray","newStore","chunkIndex","chunkOffset","dimStorage","_getNameFromStore","chunk","idDimIdx","getIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","setApproximateExtent","setCalculationInfo","getSum","rawIndexOf","getName","indices","rawDataIndex","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","contextCompat","filterSelf","newIndices","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","getItemModel","otherList","thisList","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","setItemGraphicEl","cloneShallow","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","1087","completeDimensions","coordDimensions","dimsDef","encodeDef","dimCount","dimensionsCount","generateCoord","generateCoordCount","1103","ZRender","guid","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","configLayer","zLevel","config","triggerRendered","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","1104","idStart","1105","Animatable","clipPath","drift","decomposeTransform","beforeUpdate","afterUpdate","hide","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","1106","mIdentity","origin","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","1107","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","getClips","1108","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","1109","1110","createLinearGradient","createRadialGradient","fixShadow","STYLE_COMMON_PROPS","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","textRect","transformText","textOrigin","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","1111","SHADOW_PROPS","1112","repeat","createPattern","1113","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","1114","_image","sWidth","sHeight","drawImage","1115","normalizeTextStyle","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderText","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","isPlainBg","roundRectHelper","onBgImageLoaded","blockHeiht","maxValue","lastIndexOf","needDrawText","center","middle","1116","r1","r2","r3","r4","total","1117","isNotTargetSeries","seiresIndex","mergeTheme","notMergeColorLayer","colorLayer","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","_seriesIndicesMap","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","colorPaletteMixin","_sourceHelper","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","getCurrentSeriesIndices","filterSeries","componentTypes","1118","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","PI2","extremity","1119","normalizeRadian","1120","windingLine","dir","1121","orignalBrush","modified","clipPaths","shadowTemp","1122","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","1123","getNearestColorPalette","requestColorNum","paletteNum","colorIdx","colorNameMap","getColorFromPalette","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","1124","coordSysName","axisMap","fetch","fetchers","isCategory","cartesian2d","xAxisModel","yAxisModel","singleAxis","singleAxisModel","polar","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","geo","parallel","parallelModel","parallelAxisIndex","axisIndex","axisDim","1125","chartInstance","echartsAPIList","1126","autoSeriesName","getSeriesAutoName","getRawData","dataDims","nameArr","dataTaskCount","dataTaskReset","dataTaskProgress","wrapData","onDataSelfChange","task","getCurrentTask","pipeline","getPipeline","agentStubMap","_format","dataFormatMixin","legendDataProvider","visualColorAccessPath","dataTask","getInitialData","dataBeforeProcessed","themeSubType","fillDataTextStyle","newSeriesOption","getLinkedData","isOverallFilter","formatTooltip","multipleSeries","formatSingleValue","tooltipDims","tooltipDimLen","getRawValue","isValueArr","formattedValue","setEachItem","dimHead","valStr","vertially","colorEl","animationEnabled","coordDimToDataDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","1127","originalLarge","large","originalProgressive","1128","createListFromArray","coordSysDimDefs","registeredCoordSys","hasNameEncode","dimInfoList","createDimensions","categoryAxisModel","stackCalculationInfo","isNeedCompleteOrdinalData","itemOpt","sampleItem","firstDataNotNull","_dataStackHelper","1129","sysDims","applyDim","coordDimNameMap","dataDimNameMap","getDimCount","dimDefItem","userDimName","validDataDims","resultDimIdx","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","fromZero","extra","genName","optDimCount","1130","OrdinalMeta","_needCollect","needCollect","_deduplication","deduplication","getOrCreateMap","createByAxisModel","dedplication","getOrdinal","category","1131","fixExtent","1132","axisHelper","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","1133","fixExtentWithBands","nTick","normalizedExtent","Axis","inverse","onBand","_labelInterval","containData","dataToCoord","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","isHorizontal","getRotate","getLabelInterval","labelInterval","1134","dataToPoint","1135","records","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","unregister","1136","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","formatter","paddings","align","verticalAlign","confineInContainer","bgColor","getTextColor","shadowColor","viewWidth","viewHeight","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","labelOffset","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","AxisBuilder","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","1137","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","onLeft","tooltipOpt","fixMinMaxLabelShow","labelEls","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","matrixUtil","isNameLocationCenter","nameLocation","buildAxisTick","axisBuilder","tickModel","lineStyleModel","tickLen","tickInterval","ticksCoords","pt1","pt2","_transform","ticksCnt","ifIgnoreOnTick","tickDirection","tickEl","buildAxisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","pos","labelStr","textEl","targetType","_dumbGroup","_symbol","nameDirection","dumbGroup","hasBuilder","builders","getGroup","axisLine","lineCap","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","symbol","axisTickLabel","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","1138","gridModel","grid","rawAxisPosition","axisPosition","onZero","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","1139","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","echarts","axisPointerClazz","registerAxisPointerClass","1140","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","_labelHelper","getDefaultLabel","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","getLabelDefaultText","useNameLabel","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","itemModel","getItemStyle","elStyle","symbolInnerColor","onEmphasis","ratio","onNormal","fadeOut","keepLabel","1141","prepareDataCoordInfo","valueOrigin","baseAxis","valueAxis","getOtherAxis","valueStart","getValueStart","baseAxisDim","valueAxisDim","valueDim","baseDim","baseDataOffset","stacked","dataDimsForPoint","getStackedOnPoint","dataCoordInfo","stackedData","1142","getAxisType","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","extraOption","1151","_defineProperty","_selected","pieChart","title","lineChart","containLabel","xAxis","yAxis","ringPieChart","legend","selected","Bancor Network","Gatecoin","BitFlip","Braziliex","Cobinhood","CoinExchange","CoinFalcon","Cryptomate","selectedMode","normal","labelLine","multiLineChart","1152","subtext","subtarget","borderColor","borderWidth","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","getBoxLayoutParams","layoutRect","alignStyle","1153","1183","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","SILENT","util","Draggable","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","setHandlerProxy","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","dispatch","eventArgs","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","1184","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","_x","_y","dropTarget","lastDropTarget","_dropTarget","1185","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","1186","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","1187","_life","_initialized","onrestart","_pausedTime","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","1188","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1189","parseInt10","isLayerValid","__builtin__","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","cssText","Layer","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_needsManuallyCompositing","_width","_height","mainLayer","initContext","_domRoot","_getSize","appendChild","_hoverlayer","_hoverElements","isSingleCanvas","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_redrawId","_paintList","clearColor","_backgroundColor","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","save","originalEl","_doPaintEl","restore","getHoverLayer","redrawId","_updateLayerStatus","finished","_doPaintList","_compositeManually","clearRect","eachBuiltinLayer","virtual","layerList","zi","__startIndex","__drawIndex","useTimer","now","__endIndex","firstEl","notClear","prevElClipPaths","draw","currentLayer","forcePaint","insertLayer","layersMap","prevLayer","prevDom","insertBefore","firstChild","eachLayer","getLayers","updatePrevLayer","__used","incrementalLayerCount","getElementCount","_clearLayer","layerConfig","_zlevel","delLayer","removeChild","display","_progressiveLayers","clearLayer","imageLayer","renderToCanvas","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","1190","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","createBackBuffer","clearAll","haveMotionBLur","clearColorGradientOrPattern","__canvasGradient","fillRect","1191","textHelper","1192","_event","_clips","_running","_time","_pauseStart","clips","_update","deferredEvents","deferredClips","_startLoop","1193","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","GestureMgr","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","1194","pointPair","eventUtil","_track","_doTrack","_recognize","touches","trackItem","recognizers","pinch","track","pinchEnd","pinchPre","pinchCenter","1195","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","1196","1197","graphicUtil","PATH_COLOR","1198","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","1199","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","cubic","quadratic","1200","_l","_a","_b","1201","1202","_curve","1203","1204","nPoint","mathAtan2","1205","1206","1207","fixClipWithShadow","unitX","unitY","1208","1209","polyHelper","1210","interpolate","isLoop","v2Distance","segs","w2","w3","1211","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","cp0","v2Add","1212","1213","1214","pointAt","1215","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","tangentAt","1216","1217","paths","_updatePathDirty","1218","globalCoord","1219","1220","IncrementalDisplayble","Displayble","_displayables","_temporaryDisplayables","_cursor","clearDisplaybles","addDisplayable","notPersistent","addDisplayables","displayables","1221","getBorderLineDash","1222","1223","platform","gradientColor","animationDuration","animationDurationUpdate","animationEasingUpdate","animationThreshold","progressiveThreshold","hoverLayerThreshold","useUTC","1224","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","1225","compatLayoutProperties","LAYOUT_PROPERTIES","isTheme","compatStyle","seriesOpt","clockWise","pointerColor","dataRange","visualMap","COMPATITABLE_COMPONENTS","componentName","1226","compatEC2ItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","processSeries","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","toArr","toObj","axes","axisOpt","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regions","regionObj","toolbox","toolboxOpt","feature","featureOpt","1227","stackInfoMap","stackInfoList","stackInfo","calculateStack","targetStackInfo","idxInStack","resultVal","resultNaN","targetData","byValue","stackedDataRawIndex","stackedOver","1228","DIMENSION_LABEL_REG","rawValue","componentSubType","marker","labelProp","1229","componentProto","1230","createOnAllSeries","performRawSeries","colorAccessPath","dataEach","1231","keyValues","getConfig","userConfig","ariaModel","lang","getSeriesTypeName","typeNames","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","1232","polygon","lineX","lineY","dataView","dataZoom","zoom","back","magicType","bar","tiled","saveAsImage","pie","scatter","effectScatter","tree","treemap","boxplot","candlestick","heatmap","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","allData","partialData","1233","maskColor","mask","labelRect","1234","dataProcessorHandlers","visualHandlers","_dataProcessorHandlers","_visualHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","pipelineId","createSeriesStageTask","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","getTargetSeries","pipelineMap","_pipelineMap","createOverallStageTask","createStub","stubReset","stubOnDirty","overallProgress","agent","__block","overallTaskReset","overallReset","upstreamContext","stubProgress","resetDefines","seriesTaskProgress","resetDefine","__idxInPipeline","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","_component","pCtx","progressiveEnabled","bockIndex","dataLen","threshold","stageTaskMap","cond","1235","colorAll","1236","axisCommon","axisTick","axisLabel","splitLine","splitArea","areaStyle","iconStyle","controlStyle","timeAxis","logAxis","categoryAxis","color0","borderColor0","1237","ecHelper","parseGeoJSON","_List","_Model","_Axis","_env","parseGeoJson","ecUtil","1238","createList","createScale","mixinAxisModelCommonMethods","_completeDimensions","_createDimensions","1239","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","1240","scaleProto","_ordinalMeta","rank","1241","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","bandWidth","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","barSeries","cartesian","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","barMinHeight","isValueAxisH","valueAxisStart","getGlobalExtent","baseValue","sign","baseCoord","1242","scaleHelper","intervalScaleProto","mathCeil","mathFloor","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","1243","fixRoundingError","originalVal","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","1244","decode","json","UTF8Encoding","encodeScale","UTF8Scale","geometry","coordinates","encodeOffsets","coordinate","decodePolygon","c2","prevX","prevY","featureObj","geometries","exterior","interiors","region","Region","cp","1245","polygonContain","MAX_NUMBER","loopGeo","transformTo","1246","1247","axisTrigger","1248","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","payloadInfo","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","tooltipOption","lastHighlights","newHighlights","toHighlight","toDownplay","1249","AxisPointerModel","triggerOn","shadowStyle","handle","icon","1250","globalListener","AxisPointerView","1251","getCartesian","getAxisDimIndex","BaseAxisPointer","viewHelper","cartesianAxisHelper","CartesianAxisPointer","makeElOption","otherExtent","pixelValue","pointerOption","pointerShapeBuilder","graphicKey","pointer","getHandleTransform","updateHandleTransform","currPosition","cursorOtherValue","cursorPoint","tooltipOptions","targetShape","shadow","1252","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","throttleUtil","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerEl","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","_doDispatchAxisPointer","doClear","buildLabel","1253","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","borderRadius","1254","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","TooltipContent","layoutUtil","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","tooltipModel","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","setContent","getSize","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","1255","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","zrColor","borderName","camelCase","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","isShow","1256","visualSymbol","layoutPoints","dataSample","1257","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","1258","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","getStackedOnPoints","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","SymbolDraw","lineAnimationDiff","_poly","_helper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","oldData","__temp","_step","_newPolygon","coordSysClipShape","isIgnore","clipShape","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSeries","stackedOnSmooth","_valueOrigin","getAxesByScale","isLabelIgnored","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","1259","symbolCtor","_symbolCtor","symbolNeedsDraw","normalizeUpdateOpt","makeSeriesScope","symbolDrawProto","SymbolCtor","newIdx","symbolEl","oldIdx","isPersistent","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","enableAnimation","1260","labelDims","vals","1261","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","1262","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","isMono","drawMono","drawNonMono","last","lastDiff","prevIdx","prevP","ctrlLen","v2Copy","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","1263","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","hasCallback","1264","segCount","isLargeRender","dimLen","tmpIn","tmpOut","1265","sampler","samplers","indexSampler","average","nearest","1266","1267","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","getLabelUnionRect","axisLabelModel","labelCount","unrotatedSingleRect","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","canNotOnZeroToAxis","updateAxisTransform","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","labelUnionRect","axesMapOnDim","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","axesModels","grids","1268","Cartesian","axisX","axisY","reserved","clampData","xAxisExtent","yAxisExtent","1269","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","1270","coordExtent","1271","1272","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AXIS_TYPES","__ordinalMeta","axisDefault","1273","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","logBase","1274","1275","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","1276","LegendModel","_updateData","legendData","hasSelected","isSelected","select","potentialData","availableNames","isPotential","_availableNames","unSelect","toggleSelected","itemWidth","itemHeight","inactiveColor","1277","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","_listComponent","makeBackground","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","viewportSize","mainRect","layoutInner","contentGroup","legendDrawnMap","selectMode","legendSymbolType","itemGroup","_createItem","itemIcon","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","1339","createDataSelectAction","dataColor","pieLayout","dataFilter","1340","createListSimply","dataSelectableMixin","PieSeries","updateSelectedMap","_createSelectableList","_defaultLabelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","1341","dimensionsInfo","1342","_targetList","_selectTargetMap","targetMap","1343","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","sector","piePieceProto","firstCreate","sectorShape","_updateLabel","labelText","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","PieView","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","itemLayout","1344","actionInfos","1345","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","1346","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","1347","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","1348","legendModels","1349","LineReact","_chartConfig","_chartConfig2","_echarts","_echarts2","lineId","myChart","getElementById","formatDate","initLine","1350","legendFilter","1351","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","1352","boxLayoutParams","layoutBox","1353","1354","mergeAndNormalizeLayoutParams","raw","getOrient","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","1355","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","__rectSize","createPageButton","iconIdx","pageDataIndexName","onclick","me","_pageGo","controllerGroup","pageTextStyleModel","containerGroup","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","legendId","canJump","pageText","pageCount","getItemRect","itemRect","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemLoc","winRect","startIdx","startItem","startRect","1356","1605","_Links","_Price","MarketOverview","_Component","load","_ref","market","ExternalLink","pair","TRXPrice","amount","volumeNative","FormattedNumber","volumePercentage","maximumFractionDigits","1606","_toConsumableArray","arr2","RingPieReact","pieId","property","obj1","obj2","sortObj","pairData","exchanges","temp","subCount","finalExchanges","finalPairData","initPie"],"mappings":"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","file":"static/js/Markets.aaa6f906.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1003:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(3);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactIntl=__webpack_require__(7);var _reactRedux=__webpack_require__(6);var _markets=__webpack_require__(346);var _i18n=__webpack_require__(4);var _MarketOverview=__webpack_require__(1605);var _MarketOverview2=_interopRequireDefault(_MarketOverview);var _loaders=__webpack_require__(17);var _api=__webpack_require__(5);var _LineChart=__webpack_require__(1349);var _LineChart2=_interopRequireDefault(_LineChart);var _RingPieChart=__webpack_require__(1606);var _RingPieChart2=_interopRequireDefault(_RingPieChart);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Markets=function(_React$Component){_inherits(Markets,_React$Component);function Markets(){var _this2=this;_classCallCheck(this,Markets);var _this=_possibleConstructorReturn(this,(Markets.__proto__||Object.getPrototypeOf(Markets)).call(this));_this.loadMarketData=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var markets;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.props.loadPriceData();_context.next=3;return _api.Client.getMarkets();case 3:markets=_context.sent;_this.setState({markets:markets});case 5:case\"end\":return _context.stop();}}},_callee,_this2);}));_this.state={priceGraph:[],volumeGraph:[],markets:[]};return _this;}_createClass(Markets,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadMarketData();}},{key:\"render\",value:function render(){var _props=this.props,intl=_props.intl,priceGraph=_props.priceGraph,volumeGraph=_props.volumeGraph;var markets=this.state.markets;return _react2.default.createElement(\"main\",{className:\"container header-overlap pb-3\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"h5\",{className:\"card-title text-center\"},(0,_i18n.tu)(\"average_price_usd\")),_react2.default.createElement(\"div\",{style:{height:300}},priceGraph.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{style:{height:300},data:priceGraph,keysData:['time','close'],format:{time:true,date:true}}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"h5\",{className:\"card-title text-center\"},(0,_i18n.tu)(\"average_volume_usd\")),_react2.default.createElement(\"div\",{style:{height:300}},volumeGraph.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{style:{height:300},data:volumeGraph,keysData:['time','volume'],format:{time:true}})))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"h5\",{className:\"card-title text-center\"},(0,_i18n.tu)(\"Trade Volume\"),' Top 10'),_react2.default.createElement(_RingPieChart2.default,{style:{height:700},data:markets}))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(_MarketOverview2.default,{markets:markets}))));}}]);return Markets;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price,volumeGraph:state.markets.volume};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(Markets));\n\n/***/ }),\n\n/***/ 1008:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n/***/ }),\n\n/***/ 1010:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n/***/ }),\n\n/***/ 1011:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar pathTool = __webpack_require__(1198);\n\nvar colorTool = __webpack_require__(1045);\n\nvar matrix = __webpack_require__(1038);\n\nvar vector = __webpack_require__(1015);\n\nvar Path = __webpack_require__(1017);\n\nvar Transformable = __webpack_require__(1106);\n\nvar ZImage = __webpack_require__(1114);\n\nexports.Image = ZImage;\n\nvar Group = __webpack_require__(1053);\n\nexports.Group = Group;\n\nvar Text = __webpack_require__(1205);\n\nexports.Text = Text;\n\nvar Circle = __webpack_require__(1206);\n\nexports.Circle = Circle;\n\nvar Sector = __webpack_require__(1207);\n\nexports.Sector = Sector;\n\nvar Ring = __webpack_require__(1208);\n\nexports.Ring = Ring;\n\nvar Polygon = __webpack_require__(1209);\n\nexports.Polygon = Polygon;\n\nvar Polyline = __webpack_require__(1212);\n\nexports.Polyline = Polyline;\n\nvar Rect = __webpack_require__(1213);\n\nexports.Rect = Rect;\n\nvar Line = __webpack_require__(1214);\n\nexports.Line = Line;\n\nvar BezierCurve = __webpack_require__(1215);\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = __webpack_require__(1216);\n\nexports.Arc = Arc;\n\nvar CompoundPath = __webpack_require__(1217);\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = __webpack_require__(1218);\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = __webpack_require__(1219);\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = __webpack_require__(1018);\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = __webpack_require__(1220);\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n/***/ }),\n\n/***/ 1012:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = __webpack_require__(1103);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar colorTool = __webpack_require__(1045);\n\nvar env = __webpack_require__(1016);\n\nvar timsort = __webpack_require__(1071);\n\nvar Eventful = __webpack_require__(1044);\n\nvar GlobalModel = __webpack_require__(1117);\n\nvar ExtensionAPI = __webpack_require__(1125);\n\nvar CoordinateSystemManager = __webpack_require__(1076);\n\nvar OptionManager = __webpack_require__(1224);\n\nvar backwardCompat = __webpack_require__(1225);\n\nvar dataStack = __webpack_require__(1227);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar SeriesModel = __webpack_require__(1126);\n\nvar ComponentView = __webpack_require__(1229);\n\nvar ChartView = __webpack_require__(1085);\n\nvar graphic = __webpack_require__(1011);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _throttle = __webpack_require__(1078);\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = __webpack_require__(1230);\n\nvar aria = __webpack_require__(1231);\n\nvar loadingDefault = __webpack_require__(1233);\n\nvar Scheduler = __webpack_require__(1234);\n\nvar lightTheme = __webpack_require__(1235);\n\nvar darkTheme = __webpack_require__(1236);\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.4';\nvar dependencies = {\n  zrender: '4.0.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // stackSeriesData(ecModel);\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = __webpack_require__(1237);\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n/***/ }),\n\n/***/ 1013:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n\n/***/ 1014:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n/***/ }),\n\n/***/ 1015:\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n\n/***/ 1016:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1017:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1055);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar PathProxy = __webpack_require__(1056);\n\nvar pathContain = __webpack_require__(1199);\n\nvar Pattern = __webpack_require__(1112);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1018:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1015);\n\nvar matrix = __webpack_require__(1038);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1021:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar textContain = __webpack_require__(1033);\n\nvar numberUtil = __webpack_require__(1014);\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n/***/ }),\n\n/***/ 1024:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = __webpack_require__(1021);\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n/***/ }),\n\n/***/ 1027:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = __webpack_require__(1029);\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = __webpack_require__(1195);\n\nvar areaStyleMixin = __webpack_require__(1196);\n\nvar textStyleMixin = __webpack_require__(1197);\n\nvar itemStyleMixin = __webpack_require__(1221);\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n/***/ }),\n\n/***/ 1031:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar componentUtil = __webpack_require__(1057);\n\nvar _clazz = __webpack_require__(1029);\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\nvar layout = __webpack_require__(1024);\n\nvar boxLayoutMixin = __webpack_require__(1222);\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1033:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar imageHelper = __webpack_require__(1072);\n\nvar _util = __webpack_require__(1008);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n\n/***/ 1038:\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n/***/ }),\n\n/***/ 1039:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1015);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n\n/***/ 1040:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar textContain = __webpack_require__(1033);\n\nvar OrdinalScale = __webpack_require__(1240);\n\nvar IntervalScale = __webpack_require__(1080);\n\nvar Scale = __webpack_require__(1059);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar _barGrid = __webpack_require__(1241);\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\n__webpack_require__(1242);\n\n__webpack_require__(1243);\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `calBarWidthAndOffset` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = [];\n    var isBaseAxisAndHasBarSeries;\n    ecModel.eachSeriesByType('bar', function (seriesModel) {\n      if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n        barSeriesModels.push(seriesModel);\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      }\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barSeriesModels);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barSeriesModels) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(barSeriesModels); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n/***/ }),\n\n/***/ 1042:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1008);\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = __webpack_require__(1010);\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = __webpack_require__(1014);\n\nvar parseDate = _number.parseDate;\n\nvar Source = __webpack_require__(1047);\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1045:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1108);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n\n/***/ 1046:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(1044);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(1016);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = __webpack_require__(1029);\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  }); // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n  if (stackedDimInfo && (byIndex || stackedByDimInfo)) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n */\n\n\nfunction isDimensionStacked(data, stackedDim, stackedByDim) {\n  return stackedDim && stackedDim === data.getCalculationInfo('stackedDimension') && (stackedByDim != null ? stackedByDim === data.getCalculationInfo('stackedByDimension') : data.getCalculationInfo('isStackedByIndex'));\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\n\n/***/ }),\n\n/***/ 1053:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Element = __webpack_require__(1105);\n\nvar BoundingRect = __webpack_require__(1018);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1054:\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n\n/***/ 1055:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Style = __webpack_require__(1110);\n\nvar Element = __webpack_require__(1105);\n\nvar RectText = __webpack_require__(1191);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1039);\n\nvar vec2 = __webpack_require__(1015);\n\nvar bbox = __webpack_require__(1118);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar _config = __webpack_require__(1054);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _clazz = __webpack_require__(1029);\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports) {\n\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar clazzUtil = __webpack_require__(1029);\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar BoundingRect = __webpack_require__(1018);\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n/***/ }),\n\n/***/ 1071:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n\n/***/ 1072:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(1108);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n\n/***/ 1073:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1074:\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1075:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = __webpack_require__(1124);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = __webpack_require__(1047);\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n/***/ }),\n\n/***/ 1076:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1077:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && (forceFirstProgress || start < end) && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    }\n  }\n\n  taskIns._progress = progress;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;\n\n/***/ }),\n\n/***/ 1078:\n/***/ (function(module, exports) {\n\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n/***/ }),\n\n/***/ 1079:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n/***/ }),\n\n/***/ 1080:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1014);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar Scale = __webpack_require__(1059);\n\nvar helper = __webpack_require__(1131);\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1085:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\n\nvar Group = __webpack_require__(1053);\n\nvar componentUtil = __webpack_require__(1057);\n\nvar clazzUtil = __webpack_require__(1029);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _task = __webpack_require__(1077);\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = __webpack_require__(1127);\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var canProgressiveRender = seriesModel.pipelineContext.canProgressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = canProgressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1086:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar DataDiffer = __webpack_require__(1239);\n\nvar Source = __webpack_require__(1047);\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = __webpack_require__(1079);\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\nvar CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_calculationInfo', '_invertedIndicesMap', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n} // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range\n/*, stack */\n) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  } // stack = stack || false;\n\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices\n  /* && !stack */\n  ) {\n      // Extreme optimization for common case. About 2x faster in chrome.\n      var idx = 0;\n\n      if (dimSize === 1) {\n        var dimStorage = this._storage[dimensions[0]];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n\n            if (val >= min && val <= max) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      } else if (dimSize === 2) {\n        var dimStorage = this._storage[dim0];\n        var dimStorage2 = this._storage[dimensions[1]];\n        var min2 = range[dimensions[1]][0];\n        var max2 = range[dimensions[1]][1];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var chunkStorage2 = dimStorage2[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n            var val2 = chunkStorage2[i];\n\n            if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      }\n    }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      // stack = stack || !!this.getCalculationInfo(dim0);\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i); // var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        var val = this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k]; // var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          var val = this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage;\n  var rawExtent = zrUtil.extend({}, original._rawExtent); // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        rawExtent[dim] = getInitialExtent();\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))\n\n/***/ }),\n\n/***/ 1087:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar completeDimensions = __webpack_require__(1129);\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1103:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1104);\n\nvar env = __webpack_require__(1016);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Handler = __webpack_require__(1183);\n\nvar Storage = __webpack_require__(1185);\n\nvar Painter = __webpack_require__(1189);\n\nvar Animation = __webpack_require__(1192);\n\nvar HandlerProxy = __webpack_require__(1193);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.3';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n\n/***/ 1104:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1105:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(1104);\n\nvar Eventful = __webpack_require__(1044);\n\nvar Transformable = __webpack_require__(1106);\n\nvar Animatable = __webpack_require__(1186);\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1106:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(1038);\n\nvar vector = __webpack_require__(1015);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1107:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(1187);\n\nvar color = __webpack_require__(1045);\n\nvar _util = __webpack_require__(1008);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1108:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1109:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1054);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar fixShadow = __webpack_require__(1111);\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1111:\n/***/ (function(module, exports) {\n\nvar SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1112:\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1113:\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1114:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1055);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar imageHelper = __webpack_require__(1072);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1115:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(1033);\n\nvar roundRectHelper = __webpack_require__(1116);\n\nvar imageHelper = __webpack_require__(1072);\n\nvar fixShadow = __webpack_require__(1111);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n\n/***/ 1116:\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1117:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = __webpack_require__(1010);\n\nvar Model = __webpack_require__(1027);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar globalDefault = __webpack_require__(1223);\n\nvar colorPaletteMixin = __webpack_require__(1123);\n\nvar _sourceHelper = __webpack_require__(1075);\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1118:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(1015);\n\nvar curve = __webpack_require__(1039);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n\n/***/ 1119:\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n\n/***/ 1120:\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n\n/***/ 1121:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(1016);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1122:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(1210);\n\nvar smoothBezier = __webpack_require__(1211);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n\n/***/ 1123:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1124:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n/***/ }),\n\n/***/ 1125:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1126:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar _format = __webpack_require__(1021);\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = __webpack_require__(1010);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar colorPaletteMixin = __webpack_require__(1123);\n\nvar dataFormatMixin = __webpack_require__(1228);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = __webpack_require__(1077);\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = __webpack_require__(1075);\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1127:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.canProgressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.canProgressiveRender = pipelineContext.canProgressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1128:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar List = __webpack_require__(1086);\n\nvar createDimensions = __webpack_require__(1087);\n\nvar _sourceType = __webpack_require__(1058);\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = __webpack_require__(1079);\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = __webpack_require__(1010);\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = __webpack_require__(1076);\n\nvar _referHelper = __webpack_require__(1124);\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = __webpack_require__(1047);\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1129:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = __webpack_require__(1010);\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = __webpack_require__(1075);\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = __webpack_require__(1047);\n\nvar _dimensionHelper = __webpack_require__(1079);\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1130:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1131:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar numberUtil = __webpack_require__(1014);\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n/***/ }),\n\n/***/ 1132:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1133:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar textContain = __webpack_require__(1033);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar matrix = __webpack_require__(1038);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar AxisBuilder = __webpack_require__(1137);\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = __webpack_require__(1021);\n\nvar graphic = __webpack_require__(1011);\n\nvar Model = __webpack_require__(1027);\n\nvar _number = __webpack_require__(1014);\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = __webpack_require__(1061);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = __webpack_require__(1038);\n\nvar _vector = __webpack_require__(1015);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1138:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1139:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1012);\n\nvar axisPointerModelHelper = __webpack_require__(1060);\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _symbol = __webpack_require__(1061);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1011);\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = __webpack_require__(1260);\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = __webpack_require__(1008);\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar axisModelCreator = __webpack_require__(1272);\n\nvar axisModelCommonMixin = __webpack_require__(1132);\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1151:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _selected;function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}module.exports={pieChart:{title:{text:'',x:'center'},tooltip:{trigger:'item',formatter:\"{b}<br> {c} ({d}%)\"},series:[{name:'',type:'pie',radius:'55%',center:['50%','55%'],data:[],itemStyle:{emphasis:{shadowBlur:10,shadowOffsetX:0,shadowColor:'rgba(0, 0, 0, 0.5)'}}}]},lineChart:{title:{text:'',x:'center'},grid:{left:'3%',right:'3%',bottom:'5%',containLabel:true},tooltip:{trigger:'axis'},xAxis:{type:'category',data:[]},yAxis:{type:'value'},series:[{data:[],type:'line',smooth:true}]},ringPieChart:{title:{text:'',x:'center'},legend:{type:'scroll',orient:'vertical',x:'right',selected:(_selected={'Bancor Network':false,'Gatecoin':false,'BitFlip':false,'Braziliex':false,'Cobinhood':false,'CoinExchange':false,'CoinFalcon':false,'Cryptomate':false},_defineProperty(_selected,'Gatecoin',false),_defineProperty(_selected,'IDEX',false),_defineProperty(_selected,'LiteBit.eu',false),_defineProperty(_selected,'Stocks.Exchange',false),_defineProperty(_selected,'Tidex',false),_selected)},tooltip:{trigger:'item',formatter:\"{b}: {c} ({d}%)\"},series:[{name:'',type:'pie',selectedMode:'single',radius:[0,'30%'],center:['50%','50%'],label:{normal:{position:'inner'}},labelLine:{normal:{show:false}},data:[]},{name:'',type:'pie',radius:['40%','55%'],center:['50%','50%'],data:[]}]},multiLineChart:{title:{text:'',x:'center'},legend:{type:'scroll',data:[]},grid:{left:'3%',right:'3%',bottom:'5%',containLabel:true},tooltip:{trigger:'axis'// position:function(p){   //其中p为当前鼠标的位置\n//   return [p[0] + 10, p[1] - 10];\n//  }\n},xAxis:{type:'category',boundaryGap:false,data:[]},yAxis:{type:'value'},series:[]}};\n\n/***/ }),\n\n/***/ 1152:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar graphic = __webpack_require__(1011);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n/***/ }),\n\n/***/ 1153:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n__webpack_require__(1247);\n\n__webpack_require__(1253);\n\n__webpack_require__(1254);\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar vec2 = __webpack_require__(1015);\n\nvar Draggable = __webpack_require__(1184);\n\nvar Eventful = __webpack_require__(1044);\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar Group = __webpack_require__(1053);\n\nvar timsort = __webpack_require__(1071);\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1186:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(1107);\n\nvar log = __webpack_require__(1109);\n\nvar _util = __webpack_require__(1008);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1187:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(1188);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1188:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1054);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(1008);\n\nvar log = __webpack_require__(1109);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar timsort = __webpack_require__(1071);\n\nvar Layer = __webpack_require__(1190);\n\nvar requestAnimationFrame = __webpack_require__(1113);\n\nvar Image = __webpack_require__(1114);\n\nvar env = __webpack_require__(1016);\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar _config = __webpack_require__(1054);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(1110);\n\nvar Pattern = __webpack_require__(1112);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(1115);\n\nvar BoundingRect = __webpack_require__(1018);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(1008);\n\nvar _event = __webpack_require__(1046);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(1113);\n\nvar Animator = __webpack_require__(1107);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1193:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(1046);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Eventful = __webpack_require__(1044);\n\nvar env = __webpack_require__(1016);\n\nvar GestureMgr = __webpack_require__(1194);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1194:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(1046);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1195:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1073);\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1196:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1073);\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1033);\n\nvar graphicUtil = __webpack_require__(1011);\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1198:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar PathProxy = __webpack_require__(1056);\n\nvar transformPath = __webpack_require__(1204);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n\n/***/ 1199:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1056);\n\nvar line = __webpack_require__(1200);\n\nvar cubic = __webpack_require__(1201);\n\nvar quadratic = __webpack_require__(1202);\n\nvar arc = __webpack_require__(1203);\n\nvar _util = __webpack_require__(1119);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(1039);\n\nvar windingLine = __webpack_require__(1120);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1200:\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1201:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(1039);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1202:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(1039);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1203:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1119);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n\n/***/ 1204:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(1056);\n\nvar _vector = __webpack_require__(1015);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1205:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(1055);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar textContain = __webpack_require__(1033);\n\nvar textHelper = __webpack_require__(1115);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1206:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1207:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar fixClipWithShadow = __webpack_require__(1121);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1208:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1209:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar polyHelper = __webpack_require__(1122);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1210:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1015);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1211:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(1015);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1212:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar polyHelper = __webpack_require__(1122);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1213:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar roundRectHelper = __webpack_require__(1116);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1214:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1215:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar vec2 = __webpack_require__(1015);\n\nvar _curve = __webpack_require__(1039);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1216:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1217:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1218:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Gradient = __webpack_require__(1074);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1219:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Gradient = __webpack_require__(1074);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1220:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar inherits = _util.inherits;\n\nvar Displayble = __webpack_require__(1055);\n\nvar BoundingRect = __webpack_require__(1018);\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1221:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar makeStyleMapper = __webpack_require__(1073);\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1222:\n/***/ (function(module, exports) {\n\nvar _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1223:\n/***/ (function(module, exports) {\n\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1224:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar ComponentModel = __webpack_require__(1031);\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1225:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = __webpack_require__(1226);\n\nvar _model = __webpack_require__(1010);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1226:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1227:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1228:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = __webpack_require__(1021);\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1229:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Group = __webpack_require__(1053);\n\nvar componentUtil = __webpack_require__(1057);\n\nvar clazzUtil = __webpack_require__(1029);\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1230:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Gradient = __webpack_require__(1074);\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1231:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar lang = __webpack_require__(1232);\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1232:\n/***/ (function(module, exports) {\n\nvar _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1233:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1234:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = __webpack_require__(1077);\n\nvar createTask = _task.createTask;\n\nvar _component = __webpack_require__(1057);\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = __webpack_require__(1117);\n\nvar ExtensionAPI = __webpack_require__(1125);\n\nvar _model = __webpack_require__(1010);\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  this._visualHandlers = visualHandlers.slice();\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.canProgressiveRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `canProgressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var canProgressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    canProgressiveRender: canProgressiveRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each([this._dataProcessorHandlers, this._visualHandlers], function (stageHandlers) {\n    each(stageHandlers, function (handler) {\n      var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n      handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n      handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n    }, this);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1235:\n/***/ (function(module, exports) {\n\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1236:\n/***/ (function(module, exports) {\n\nvar contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1237:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrender = __webpack_require__(1103);\n\nexports.zrender = zrender;\n\nvar matrix = __webpack_require__(1038);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(1015);\n\nexports.vector = vector;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar colorTool = __webpack_require__(1045);\n\nexports.color = colorTool;\n\nvar graphic = __webpack_require__(1011);\n\nexports.graphic = graphic;\n\nvar numberUtil = __webpack_require__(1014);\n\nexports.number = numberUtil;\n\nvar formatUtil = __webpack_require__(1021);\n\nexports.format = formatUtil;\n\nvar _throttle = __webpack_require__(1078);\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = __webpack_require__(1238);\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = __webpack_require__(1244);\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = __webpack_require__(1086);\n\nexports.List = _List;\n\nvar _Model = __webpack_require__(1027);\n\nexports.Model = _Model;\n\nvar _Axis = __webpack_require__(1133);\n\nexports.Axis = _Axis;\n\nvar _env = __webpack_require__(1016);\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n/***/ }),\n\n/***/ 1238:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar createListFromArray = __webpack_require__(1128);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar axisModelCommonMixin = __webpack_require__(1132);\n\nvar Model = __webpack_require__(1027);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _completeDimensions = __webpack_require__(1129);\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = __webpack_require__(1087);\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = __webpack_require__(1061);\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n/***/ }),\n\n/***/ 1239:\n/***/ (function(module, exports) {\n\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1240:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Scale = __webpack_require__(1059);\n\nvar OrdinalMeta = __webpack_require__(1130);\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1241:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n      seriesModels.push(seriesModel);\n    }\n  });\n  var barWidthAndOffset = calBarWidthAndOffset(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = baseAxis.onZero || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n/***/ }),\n\n/***/ 1242:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar scaleHelper = __webpack_require__(1131);\n\nvar IntervalScale = __webpack_require__(1080);\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1243:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Scale = __webpack_require__(1059);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar IntervalScale = __webpack_require__(1080);\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1244:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Region = __webpack_require__(1245);\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1245:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar bbox = __webpack_require__(1118);\n\nvar vec2 = __webpack_require__(1015);\n\nvar polygonContain = __webpack_require__(1246);\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1246:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar windingLine = __webpack_require__(1120);\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n/***/ }),\n\n/***/ 1247:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar axisPointerModelHelper = __webpack_require__(1060);\n\nvar axisTrigger = __webpack_require__(1248);\n\n__webpack_require__(1249);\n\n__webpack_require__(1250);\n\n__webpack_require__(1251);\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n/***/ }),\n\n/***/ 1248:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = __webpack_require__(1060);\n\nvar findPointFromSeries = __webpack_require__(1134);\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1249:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1250:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar globalListener = __webpack_require__(1135);\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1251:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1011);\n\nvar BaseAxisPointer = __webpack_require__(1252);\n\nvar viewHelper = __webpack_require__(1136);\n\nvar cartesianAxisHelper = __webpack_require__(1138);\n\nvar AxisView = __webpack_require__(1139);\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1252:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar clazzUtil = __webpack_require__(1029);\n\nvar graphic = __webpack_require__(1011);\n\nvar axisPointerModelHelper = __webpack_require__(1060);\n\nvar eventTool = __webpack_require__(1046);\n\nvar throttleUtil = __webpack_require__(1078);\n\nvar _model = __webpack_require__(1010);\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1253:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1254:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar env = __webpack_require__(1016);\n\nvar TooltipContent = __webpack_require__(1255);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar numberUtil = __webpack_require__(1014);\n\nvar graphic = __webpack_require__(1011);\n\nvar findPointFromSeries = __webpack_require__(1134);\n\nvar layoutUtil = __webpack_require__(1024);\n\nvar Model = __webpack_require__(1027);\n\nvar globalListener = __webpack_require__(1135);\n\nvar axisHelper = __webpack_require__(1040);\n\nvar axisPointerViewHelper = __webpack_require__(1136);\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1255:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar zrColor = __webpack_require__(1045);\n\nvar eventUtil = __webpack_require__(1046);\n\nvar env = __webpack_require__(1016);\n\nvar formatUtil = __webpack_require__(1021);\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1256:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n__webpack_require__(1257);\n\n__webpack_require__(1258);\n\nvar visualSymbol = __webpack_require__(1263);\n\nvar layoutPoints = __webpack_require__(1264);\n\nvar dataSample = __webpack_require__(1265);\n\n__webpack_require__(1266);\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n/***/ }),\n\n/***/ 1257:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = __webpack_require__(1128);\n\nvar SeriesModel = __webpack_require__(1126);\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1258:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar SymbolDraw = __webpack_require__(1259);\n\nvar SymbolClz = __webpack_require__(1140);\n\nvar lineAnimationDiff = __webpack_require__(1261);\n\nvar graphic = __webpack_require__(1011);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _poly = __webpack_require__(1262);\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = __webpack_require__(1085);\n\nvar _helper = __webpack_require__(1141);\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1259:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar graphic = __webpack_require__(1011);\n\nvar SymbolClz = __webpack_require__(1140);\n\nvar _util = __webpack_require__(1008);\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1260:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n/***/ }),\n\n/***/ 1261:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _helper = __webpack_require__(1141);\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1262:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1017);\n\nvar vec2 = __webpack_require__(1015);\n\nvar fixClipWithShadow = __webpack_require__(1121);\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n/***/ }),\n\n/***/ 1263:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1264:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar map = _util.map;\n\nvar createRenderPlanner = __webpack_require__(1127);\n\nvar _dataStackHelper = __webpack_require__(1048);\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1265:\n/***/ (function(module, exports) {\n\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1266:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\n__webpack_require__(1267);\n\n__webpack_require__(1274);\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n/***/ }),\n\n/***/ 1267:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = __webpack_require__(1008);\n\nvar BoundingRect = __webpack_require__(1018);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = __webpack_require__(1040);\n\nvar Cartesian2D = __webpack_require__(1268);\n\nvar Axis2D = __webpack_require__(1270);\n\nvar CoordinateSystem = __webpack_require__(1076);\n\n__webpack_require__(1271);\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1268:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Cartesian = __webpack_require__(1269);\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1269:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1270:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Axis = __webpack_require__(1133);\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1271:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1142);\n\nvar ComponentModel = __webpack_require__(1031);\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1272:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar axisDefault = __webpack_require__(1273);\n\nvar ComponentModel = __webpack_require__(1031);\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = __webpack_require__(1130);\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1273:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1274:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(1142);\n\n__webpack_require__(1275);\n\n/***/ }),\n\n/***/ 1275:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar AxisBuilder = __webpack_require__(1137);\n\nvar AxisView = __webpack_require__(1139);\n\nvar cartesianAxisHelper = __webpack_require__(1138);\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n/***/ }),\n\n/***/ 1276:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar Model = __webpack_require__(1027);\n\nvar _model = __webpack_require__(1010);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1277:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(1013);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar _symbol = __webpack_require__(1061);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(1011);\n\nvar _listComponent = __webpack_require__(1352);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(1024);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1339:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\n__webpack_require__(1340);\n\n__webpack_require__(1343);\n\nvar createDataSelectAction = __webpack_require__(1344);\n\nvar dataColor = __webpack_require__(1345);\n\nvar pieLayout = __webpack_require__(1346);\n\nvar dataFilter = __webpack_require__(1348);\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n/***/ }),\n\n/***/ 1340:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar createListSimply = __webpack_require__(1341);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar modelUtil = __webpack_require__(1010);\n\nvar _number = __webpack_require__(1014);\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = __webpack_require__(1342);\n\nvar _dataProvider = __webpack_require__(1042);\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1341:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createDimensions = __webpack_require__(1087);\n\nvar List = __webpack_require__(1086);\n\nvar _util = __webpack_require__(1008);\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1342:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1343:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar ChartView = __webpack_require__(1085);\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1344:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1345:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(1008);\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1346:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _number = __webpack_require__(1014);\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = __webpack_require__(1347);\n\nvar zrUtil = __webpack_require__(1008);\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1347:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textContain = __webpack_require__(1033);\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1348:\n/***/ (function(module, exports) {\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1349:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactIntl=__webpack_require__(7);var _chartConfig=__webpack_require__(1151);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(1012);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(1256);__webpack_require__(1152);__webpack_require__(1153);var _reactRedux=__webpack_require__(6);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:'initLine',value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text='';_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));}}else _chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:'componentDidMount',value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:'render',value:function render(){return _react2.default.createElement('div',null,_react2.default.createElement('div',{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ }),\n\n/***/ 1350:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n__webpack_require__(1276);\n\n__webpack_require__(1351);\n\n__webpack_require__(1277);\n\nvar legendFilter = __webpack_require__(1353);\n\nvar Component = __webpack_require__(1031);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1351:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\nvar zrUtil = __webpack_require__(1008);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1352:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _layout = __webpack_require__(1024);\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = __webpack_require__(1021);\n\nvar graphic = __webpack_require__(1011);\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n/***/ }),\n\n/***/ 1353:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1354:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1276);\n\nvar _layout = __webpack_require__(1024);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1355:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1008);\n\nvar graphic = __webpack_require__(1011);\n\nvar layoutUtil = __webpack_require__(1024);\n\nvar LegendView = __webpack_require__(1277);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1356:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(1012);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1605:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(3);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _i18n=__webpack_require__(4);var _api=__webpack_require__(5);var _Links=__webpack_require__(9);var _reactIntl=__webpack_require__(7);var _Price=__webpack_require__(27);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var MarketOverview=function(_Component){_inherits(MarketOverview,_Component);function MarketOverview(){_classCallCheck(this,MarketOverview);var _this=_possibleConstructorReturn(this,(MarketOverview.__proto__||Object.getPrototypeOf(MarketOverview)).call(this));_this.state={markets:[]};return _this;}_createClass(MarketOverview,[{key:\"componentDidMount\",value:function componentDidMount(){// this.load();\n}},{key:\"load\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var markets;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getMarkets();case 2:markets=_context.sent;this.setState({markets:markets});case 4:case\"end\":return _context.stop();}}},_callee,this);}));function load(){return _ref.apply(this,arguments);}return load;}()},{key:\"render\",value:function render(){var markets=this.props.markets;markets=markets.slice(0,15);return _react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"table\",{className:\"table table-hover bg-white m-0 table-striped\"},_react2.default.createElement(\"thead\",{className:\"thead-dark\"},_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{style:{width:25}},(0,_i18n.tu)(\"rank\")),_react2.default.createElement(\"th\",null,(0,_i18n.tu)(\"exchange\")),_react2.default.createElement(\"th\",{className:\"d-none d-sm-table-cell\",style:{width:75}},(0,_i18n.tu)(\"pair\")),_react2.default.createElement(\"th\",{className:\"d-none d-md-table-cell\",style:{width:100}},(0,_i18n.tu)(\"volume\")),_react2.default.createElement(\"th\",{className:\"d-none d-md-table-cell\",style:{width:75}},\"%\"),_react2.default.createElement(\"th\",{className:\"text-right\",style:{width:100}},(0,_i18n.tu)(\"price\")))),_react2.default.createElement(\"tbody\",null,markets.map(function(market){return _react2.default.createElement(\"tr\",{key:market.rank},_react2.default.createElement(\"th\",null,market.rank),_react2.default.createElement(\"td\",null,_react2.default.createElement(_Links.ExternalLink,{url:market.link},market.name)),_react2.default.createElement(\"td\",{className:\"d-none d-sm-table-cell\",style:{width:75}},_react2.default.createElement(_Links.ExternalLink,{url:market.link},market.pair)),_react2.default.createElement(\"td\",{className:\"text-nowrap d-none d-md-table-cell\"},_react2.default.createElement(_Price.TRXPrice,{amount:market.volumeNative})),_react2.default.createElement(\"td\",{className:\"text-nowrap d-none d-md-table-cell\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:market.volumePercentage,maximumFractionDigits:2}),\"%\"),_react2.default.createElement(\"td\",{className:\"text-right\"},\"$\",_react2.default.createElement(_reactIntl.FormattedNumber,{value:market.price,maximumFractionDigits:8})));}))));}}]);return MarketOverview;}(_react.Component);exports.default=MarketOverview;\n\n/***/ }),\n\n/***/ 1606:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _chartConfig=__webpack_require__(1151);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(1012);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(1339);__webpack_require__(1152);__webpack_require__(1153);__webpack_require__(1350);__webpack_require__(1354);__webpack_require__(1355);__webpack_require__(1356);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'pie'+id};return _this;}_createClass(RingPieReact,[{key:'initPie',value:function initPie(id){var data=this.props.data;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];_chartConfig2.default.ringPieChart.title.text=\"\";function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:'componentDidMount',value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:'render',value:function render(){return _react2.default.createElement('div',null,_react2.default.createElement('div',{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);exports.default=RingPieReact;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Markets.aaa6f906.chunk.js","import React, {Fragment} from \"react\";\nimport {injectIntl} from \"react-intl\";\nimport {connect} from \"react-redux\";\nimport {loadPriceData} from \"../../actions/markets\";\nimport {tu} from \"../../utils/i18n\";\nimport MarketOverview from \"./MarketOverview\";\nimport {TronLoader} from \"../common/loaders\";\nimport {Client} from \"../../services/api\";\nimport LineReact from \"../common/LineChart\";\nimport RingPieReact from \"../common/RingPieChart\";\n\nclass Markets extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      priceGraph: [],\n      volumeGraph: [],\n      markets: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadMarketData();\n  }\n\n  loadMarketData = async () => {\n    this.props.loadPriceData();\n\n    let markets = await Client.getMarkets();\n\n    this.setState({\n      markets,\n    });\n  };\n\n  render() {\n\n    let {intl, priceGraph, volumeGraph} = this.props;\n    let {markets} = this.state;\n\n    return (\n        <main className=\"container header-overlap pb-3\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">{tu(\"average_price_usd\")}</h5>\n                  <div style={{height: 300}}>\n                    {\n                      priceGraph.length === 0 ?\n                          <TronLoader/> :\n                          <LineReact style={{height: 300}} data={priceGraph} keysData={['time', 'close']}\n                                     format={{time: true, date: true}}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">{tu(\"average_volume_usd\")}</h5>\n                  <div style={{height: 300}}>\n                    {\n                      volumeGraph.length === 0 ?\n                          <TronLoader/> :\n                          <LineReact style={{height: 300}} data={volumeGraph} keysData={['time', 'volume']}\n                                     format={{time: true}}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">{tu(\"Trade Volume\")}{' Top 10'}</h5>\n                  <RingPieReact style={{height: 700}} data={markets}/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              <MarketOverview markets={markets}/>\n            </div>\n          </div>\n        </main>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price,\n    volumeGraph: state.markets.volume,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadPriceData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(Markets));\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/markets/index.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  // Clear ctx instance for different environment\n  if (name === 'createCanvas') {\n    _ctx = null;\n  }\n\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    if (!isPrimitive(source)) {\n      result = [];\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    if (!isPrimitive(source)) {\n      var Ctor = source.constructor;\n\n      if (source.constructor.from) {\n        result = Ctor.from(source);\n      } else {\n        result = new Ctor(source.length);\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          result[i] = clone(source[i]);\n        }\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isTypedArray(value) {\n  return !!TYPED_ARRAY[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {string} str string to be trimed\n * @return {string} trimed string\n */\n\n\nfunction trim(str) {\n  if (str == null) {\n    return null;\n  } else if (typeof str.trim === 'function') {\n    return str.trim();\n  } else {\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  var isArr = isArray(obj);\n  var thisMap = this;\n  obj instanceof HashMap ? obj.each(visit) : obj && each(obj, visit);\n\n  function visit(value, key) {\n    isArr ? thisMap.set(value, key) : thisMap.set(key, value);\n  }\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this.hasOwnProperty(key) ? this[key] : null;\n  },\n  set: function (key, value) {\n    // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n    return this[key] = value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var key in this) {\n      this.hasOwnProperty(key) && cb(this[key], key);\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction concatArray(a, b) {\n  var newArray = new a.constructor(a.length + b.length);\n\n  for (var i = 0; i < a.length; i++) {\n    newArray[i] = a[i];\n  }\n\n  var offset = a.length;\n\n  for (i = 0; i < b.length; i++) {\n    newArray[i + offset] = b[i];\n  }\n\n  return newArray;\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isTypedArray = isTypedArray;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.trim = trim;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.concatArray = concatArray;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/util.js\n// module id = 1008\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/model.js\n// module id = 1010\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //    label: {\n    //        show: false,\n    //        position: 'outside',\n    //        fontSize: 18\n    //    },\n    //    emphasis: {\n    //        label: {\n    //            show: true\n    //        }\n    //    }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/graphic.js\n// module id = 1011\n// module chunks = 2 3 4","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\n/*!\n * ECharts, a free, powerful charting and visualization library.\n *\n * Copyright (c) 2017, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.0.4';\nvar dependencies = {\n  zrender: '4.0.3'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToDataUrl();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function (payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.restoreData(payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // stackSeriesData(ecModel);\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function (payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns._zr, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        // Don't switch back.\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_STATISTIC, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/echarts.js\n// module id = 1012\n// module chunks = 2 3 4","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/config.js\n// module id = 1013\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/number.js\n// module id = 1014\n// module chunks = 2 3 4","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/vector.js\n// module id = 1015\n// module chunks = 2 3 4","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof wx !== 'undefined') {\n  // In Weixin Application\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    wxa: true,\n    // Weixin Application\n    canvasSupported: true,\n    svgSupported: false,\n    touchEventsSupported: true\n  };\n} else if (typeof document === 'undefined' && typeof self !== 'undefined') {\n  // In worker\n  env = {\n    browser: {},\n    os: {},\n    node: false,\n    worker: true,\n    canvasSupported: true\n  };\n} else if (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    worker: false,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11) // passiveSupported: detectPassiveSupport()\n\n  };\n} // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n// function detectPassiveSupport() {\n//     // Test via a getter in the options object to see if the passive property is accessed\n//     var supportsPassive = false;\n//     try {\n//         var opts = Object.defineProperty({}, 'passive', {\n//             get: function() {\n//                 supportsPassive = true;\n//             }\n//         });\n//         window.addEventListener('testPassive', function() {}, opts);\n//     } catch (e) {\n//     }\n//     return supportsPassive;\n// }\n\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/env.js\n// module id = 1016\n// module chunks = 2 3 4","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Path.js\n// module id = 1017\n// module chunks = 2 3 4","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/BoundingRect.js\n// module id = 1018\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n\n  if (!color) {\n    return '';\n  }\n\n  return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/format.js\n// module id = 1021\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/layout.js\n// module id = 1024\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Model.js\n// module id = 1027\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/clazz.js\n// module id = 1029\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Component.js\n// module id = 1031\n// module chunks = 2 3 4","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar trim = _util.trim;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  var font = (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ');\n  return font && trim(font) || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/text.js\n// module id = 1033\n// module chunks = 2 3 4","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * Create a identity matrix.\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Clone a new matrix.\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction clone(a) {\n  var b = create();\n  copy(b, a);\n  return b;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\nexports.clone = clone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/matrix.js\n// module id = 1038\n// module chunks = 2 3 4","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/curve.js\n// module id = 1039\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar calBarWidthAndOffset = _barGrid.calBarWidthAndOffset;\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `calBarWidthAndOffset` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = [];\n    var isBaseAxisAndHasBarSeries;\n    ecModel.eachSeriesByType('bar', function (seriesModel) {\n      if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n        barSeriesModels.push(seriesModel);\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      }\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barSeriesModels);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction adjustScaleForOverflow(min, max, model, barSeriesModels) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Calculate placement of bars on axis\n\n  var barWidthAndOffset = calBarWidthAndOffset(barSeriesModels); // Get bars on current base axis and calculate min and max overflow\n\n  var baseAxisKey = model.axis.dim + model.axis.index;\n  var barsOnCurrentAxis = barWidthAndOffset[baseAxisKey];\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisHelper.js\n// module id = 1040\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx) {\n      idx = idx - this._offset;\n      var item = [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        item[i] = this._data[offset + i];\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dataProvider.js\n// module id = 1042\n// module chunks = 2 3 4","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Eventful.js\n// module id = 1044\n// module chunks = 2 3 4","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n\n      if (colorArr[i] > 255) {\n        colorArr[i] = 255;\n      } else if (color[i] < 0) {\n        colorArr[i] = 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/color.js\n// module id = 1045\n// module chunks = 2 3 4","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Function} handler\n */\n\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    // Reproduct the console warning:\n    // [Violation] Added non-passive event listener to a scroll-blocking <some> event.\n    // Consider marking event handler as 'passive' to make the page more responsive.\n    // Just set console log level: verbose in chrome dev tool.\n    // then the warning log will be printed when addEventListener called.\n    // See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // We have not yet found a neat way to using passive. Because in zrender the dom event\n    // listener delegate all of the upper events of element. Some of those events need\n    // to prevent default. For example, the feature `preventDefaultMouseMove` of echarts.\n    // Before passive can be adopted, these issues should be considered:\n    // (1) Whether and how a zrender user specifies an event listener passive. And by default,\n    // passive or not.\n    // (2) How to tread that some zrender event listener is passive, and some is not. If\n    // we use other way but not preventDefault of mousewheel and touchmove, browser\n    // compatibility should be handled.\n    // var opts = (env.passiveSupported && name === 'mousewheel')\n    //     ? {passive: true}\n    //     // By default, the third param of el.addEventListener is `capture: false`.\n    //     : void 0;\n    // el.addEventListener(name, handler /* , opts */);\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/event.js\n// module id = 1046\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/Source.js\n// module id = 1047\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  }); // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n  if (stackedDimInfo && (byIndex || stackedByDimInfo)) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n */\n\n\nfunction isDimensionStacked(data, stackedDim, stackedByDim) {\n  return stackedDim && stackedDim === data.getCalculationInfo('stackedDimension') && (stackedByDim != null ? stackedByDim === data.getCalculationInfo('stackedByDimension') : data.getCalculationInfo('isStackedByIndex'));\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dataStackHelper.js\n// module id = 1048\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/container/Group.js\n// module id = 1053\n// module chunks = 2 3 4","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/config.js\n// module id = 1054\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {boolean}\n   */\n  progressive: false,\n\n  /**\n   * @type {boolean}\n   */\n  incremental: false,\n  // inplace is used with incremental\n  inplace: false,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Displayable.js\n// module id = 1055\n// module chunks = 2 3 4","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/PathProxy.js\n// module id = 1056\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/component.js\n// module id = 1057\n// module chunks = 2 3 4","// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/sourceType.js\n// module id = 1058\n// module chunks = 2 3 4","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Scale.js\n// module id = 1059\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 1060\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/symbol.js\n// module id = 1061\n// module chunks = 2 3 4","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/timsort.js\n// module id = 1071\n// module chunks = 2 3 4","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/image.js\n// module id = 1072\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 1073\n// module chunks = 2 3 4","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Gradient.js\n// module id = 1074\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine); // Note: dataset option does not have `encode`.\n\n  var encodeDefine = seriesOption.encode;\n\n  if (!encodeDefine && datasetModel) {\n    encodeDefine = makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult);\n  }\n\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    encodeDefine: encodeDefine\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n  var findPotentialName;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n      findPotentialName = true;\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      findPotentialName = true;\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  var potentialNameDimIndex;\n\n  if (findPotentialName) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  }\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount,\n    potentialNameDimIndex: potentialNameDimIndex // TODO: potentialIdDimIdx\n\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n} // ??? TODO merge to completedimensions, where also has\n// default encode making logic. And the default rule\n// should depends on series? consider 'map'.\n\n\nfunction makeDefaultEncode(seriesModel, datasetModel, data, sourceFormat, seriesLayoutBy, completeResult) {\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var encode = {}; // var encodeTooltip = [];\n  // var encodeLabel = [];\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var seriesType = seriesModel.subType; // ??? TODO refactor: provide by series itself.\n  // Consider the case: 'map' series is based on geo coordSys,\n  // 'graph', 'heatmap' can be based on cartesian. But can not\n  // give default rule simply here.\n\n  var nSeriesMap = createHashMap(['pie', 'map', 'funnel']);\n  var cSeriesMap = createHashMap(['line', 'bar', 'pictorialBar', 'scatter', 'effectScatter', 'candlestick', 'boxplot']); // Usually in this case series will use the first data\n  // dimension as the \"value\" dimension, or other default\n  // processes respectively.\n\n  if (coordSysDefine && cSeriesMap.get(seriesType) != null) {\n    var ecModel = seriesModel.ecModel;\n    var datasetMap = inner(ecModel).datasetMap;\n    var key = datasetModel.uid + '_' + seriesLayoutBy;\n    var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n      categoryWayDim: 1,\n      valueWayDim: 0\n    }); // TODO\n    // Auto detect first time axis and do arrangement.\n\n    each(coordSysDefine.coordSysDims, function (coordDim) {\n      // In value way.\n      if (coordSysDefine.firstCategoryDimIndex == null) {\n        var dataDim = datasetRecord.valueWayDim++;\n        encode[coordDim] = dataDim; // ??? TODO give a better default series name rule?\n        // especially when encode x y specified.\n        // consider: when mutiple series share one dimension\n        // category axis, series name should better use\n        // the other dimsion name. On the other hand, use\n        // both dimensions name.\n\n        encodeSeriesName.push(dataDim); // encodeTooltip.push(dataDim);\n        // encodeLabel.push(dataDim);\n      } // In category way, category axis.\n      else if (coordSysDefine.categoryAxisMap.get(coordDim)) {\n          encode[coordDim] = 0;\n          encodeItemName.push(0);\n        } // In category way, non-category axis.\n        else {\n            var dataDim = datasetRecord.categoryWayDim++;\n            encode[coordDim] = dataDim; // encodeTooltip.push(dataDim);\n            // encodeLabel.push(dataDim);\n\n            encodeSeriesName.push(dataDim);\n          }\n    });\n  } // Do not make a complex rule! Hard to code maintain and not necessary.\n  // ??? TODO refactor: provide by series itself.\n  // [{name: ..., value: ...}, ...] like:\n  else if (nSeriesMap.get(seriesType) != null) {\n      // Find the first not ordinal. (5 is an experience value)\n      var firstNotOrdinal;\n\n      for (var i = 0; i < 5 && firstNotOrdinal == null; i++) {\n        if (!doGuessOrdinal(data, sourceFormat, seriesLayoutBy, completeResult.dimensionsDefine, completeResult.startIndex, i)) {\n          firstNotOrdinal = i;\n        }\n      }\n\n      if (firstNotOrdinal != null) {\n        encode.value = firstNotOrdinal;\n        var nameDimIndex = completeResult.potentialNameDimIndex || Math.max(firstNotOrdinal - 1, 0); // By default, label use itemName in charts.\n        // So we dont set encodeLabel here.\n\n        encodeSeriesName.push(nameDimIndex);\n        encodeItemName.push(nameDimIndex); // encodeTooltip.push(firstNotOrdinal);\n      }\n    } // encodeTooltip.length && (encode.tooltip = encodeTooltip);\n  // encodeLabel.length && (encode.label = encodeLabel);\n\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {boolean} Whether ordinal.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return false;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n\n  if (dimensionsDefine) {\n    dimName = dimensionsDefine[dimIndex];\n    dimName = isObject(dimName) ? dimName.name : dimName;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return false;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return false;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n    if (val != null && isFinite(val) && val !== '') {\n      return false;\n    } else if (isString(val) && val !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.guessOrdinal = guessOrdinal;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/sourceHelper.js\n// module id = 1075\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/CoordinateSystem.js\n// module id = 1076\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    // ??? FIXME move to schedueler?\n    // this._dueEnd = Math.max(upTask._outputDueEnd, this._dueEnd);\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n    !skip && (forceFirstProgress || start < end) && this._progress({\n      start: start,\n      end: end\n    }, this.context);\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n/**\n * @param {Object} [params]\n */\n\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    }\n  }\n\n  taskIns._progress = progress;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // ??? FIXME: check\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end; // this._outputDueEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/stream/task.js\n// module id = 1077\n// module chunks = 2 3 4","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/util/throttle.js\n// module id = 1078\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimArr = encode[coordDim];\n\n      if (!encode.hasOwnProperty(coordDim)) {\n        coordDimArr = encode[coordDim] = [];\n      }\n\n      coordDimArr[dimItem.coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        }\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var otherDimArr = encode[otherDim];\n\n      if (!encode.hasOwnProperty(otherDim)) {\n        otherDimArr = encode[otherDim] = [];\n      }\n\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        otherDimArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var defaultedTooltip = defaultedLabel.slice();\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/dimensionHelper.js\n// module id = 1079\n// module chunks = 2 3 4","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Interval.js\n// module id = 1080\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var canProgressiveRender = seriesModel.pipelineContext.canProgressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = canProgressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Chart.js\n// module id = 1085\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar CtorUint32Array = typeof globalObj.Uint32Array === UNDEFINED ? Array : globalObj.Uint32Array;\nvar CtorUint16Array = typeof globalObj.Uint16Array === UNDEFINED ? Array : globalObj.Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_calculationInfo', '_invertedIndicesMap', '_rawData', '_rawExtent', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n *      Spetial fields: {\n *          ordinalMeta: <module:echarts/data/OrdinalMeta>\n *          createInvertedIndices: <boolean>\n *      }\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var chunkCount = this._chunkCount;\n  var lastChunkIndex = chunkCount - 1;\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    var DataCtor = dataCtors[dimInfo.type];\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    var resizeChunkArray = storage[dim][lastChunkIndex];\n\n    if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n      var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n      // within the initial chunkSize.\n\n      for (var j = 0; j < resizeChunkArray.length; j++) {\n        newStore[j] = resizeChunkArray[j];\n      }\n\n      storage[dim][lastChunkIndex] = newStore;\n    } // Create new chunks.\n\n\n    for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n      storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n    }\n\n    this._chunkCount = storage[dim].length;\n  }\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = rawData.getItem(idx); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n\n      if (val < rawExtent[dim][0]) {\n        rawExtent[dim][0] = val;\n      }\n\n      if (val > rawExtent[dim][1]) {\n        rawExtent[dim][1] = val;\n      }\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && !name) {\n        if (nameDimIdx != null) {\n          name = this._getNameFromStore(idx);\n        } else if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorUint32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as NaN.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = NaN;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n} // TODO refactor\n\n\nlistProto._getNameFromStore = function (rawIndex) {\n  var nameDimIdx = this._nameDimIdx;\n\n  if (nameDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[nameDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n}; // TODO refactor\n\n\nlistProto._getIdFromStore = function (rawIndex) {\n  var idDimIdx = this._idDimIdx;\n\n  if (idDimIdx != null) {\n    var chunkSize = this._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = this.dimensions[idDimIdx];\n    var ordinalMeta = this._dimensionInfos[dim].ordinalMeta;\n\n    if (ordinalMeta) {\n      return ordinalMeta.categories[rawIndex];\n    } else {\n      var chunk = this._storage[dim][chunkIndex];\n      return chunk && chunk[chunkOffset];\n    }\n  }\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    return new Ctor(this._indices.buffer, 0, this._count);\n  }\n\n  var Ctor = getIndicesCtor(this);\n  var arr = new Ctor(this.count());\n\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = i;\n  }\n\n  return arr;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dataDimsOnCoord[i]].type !== 'ordinal' // FIXME check ordinal when using index?\n    && isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return -1;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (!this._indices) {\n    return rawIndex;\n  }\n\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i\n    /*, stack */\n    );\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || this._getNameFromStore(rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = list._getIdFromStore(rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range\n/*, stack */\n) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  } // stack = stack || false;\n\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices\n  /* && !stack */\n  ) {\n      // Extreme optimization for common case. About 2x faster in chrome.\n      var idx = 0;\n\n      if (dimSize === 1) {\n        var dimStorage = this._storage[dimensions[0]];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n\n            if (val >= min && val <= max) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      } else if (dimSize === 2) {\n        var dimStorage = this._storage[dim0];\n        var dimStorage2 = this._storage[dimensions[1]];\n        var min2 = range[dimensions[1]][0];\n        var max2 = range[dimensions[1]][1];\n\n        for (var k = 0; k < this._chunkCount; k++) {\n          var chunkStorage = dimStorage[k];\n          var chunkStorage2 = dimStorage2[k];\n          var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n          for (var i = 0; i < len; i++) {\n            var val = chunkStorage[i];\n            var val2 = chunkStorage2[i];\n\n            if (val >= min && val <= max && val2 >= min2 && val2 <= max2) {\n              newIndices[offset++] = idx;\n            }\n\n            idx++;\n          }\n        }\n\n        quickFinished = true;\n      }\n    }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      // stack = stack || !!this.getCalculationInfo(dim0);\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i); // var val = stack ? this.get(dim0, i, true) : this._getFast(dim0, rawIndex);\n\n        var val = this._getFast(dim0, rawIndex);\n\n        if (val >= min && val <= max) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k]; // var val = stack ? this.get(dimk, i, true) : this._getFast(dim, rawIndex);\n\n          var val = this._getFast(dim, rawIndex);\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage;\n  var rawExtent = zrUtil.extend({}, original._rawExtent); // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        rawExtent[dim] = getInitialExtent();\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  list._extent = zrUtil.clone(this._extent);\n  list._approximateExtent = zrUtil.clone(this._approximateExtent);\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/List.js\n// module id = 1086\n// module chunks = 2 3 4","var completeDimensions = require(\"./completeDimensions\");\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/createDimensions.js\n// module id = 1087\n// module chunks = 2 3 4","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '4.0.3';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts, id);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node && !env.worker ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Set background color\n   * @param {string} backgroundColor\n   */\n  setBackgroundColor: function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    var triggerRendered;\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    triggerRendered && this.trigger('rendered');\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/zrender.js\n// module id = 1103\n// module chunks = 2 3 4","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/guid.js\n// module id = 1104\n// module chunks = 2 3 4","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * 是否是 Group\n   * @type {boolean}\n   */\n  isGroup: false,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Element.js\n// module id = 1105\n// module chunks = 2 3 4","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Transformable.js\n// module id = 1106\n// module chunks = 2 3 4","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animator.js\n// module id = 1107\n// module chunks = 2 3 4","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/LRU.js\n// module id = 1108\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/log.js\n// module id = 1109\n// module chunks = 2 3 4","var fixShadow = require(\"./helper/fixShadow\");\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  } // Fix NaN when rect is Infinity\n\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = fixShadow(ctx, styleName, style[styleName] || prop[1]);\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Style.js\n// module id = 1110\n// module chunks = 2 3 4","var SHADOW_PROPS = {\n  'shadowBlur': 1,\n  'shadowOffsetX': 1,\n  'shadowOffsetY': 1,\n  'textShadowBlur': 1,\n  'textShadowOffsetX': 1,\n  'textShadowOffsetY': 1,\n  'textBoxShadowBlur': 1,\n  'textBoxShadowOffsetX': 1,\n  'textBoxShadowOffsetY': 1\n};\n\nfunction _default(ctx, propName, value) {\n  if (SHADOW_PROPS.hasOwnProperty(propName)) {\n    return value *= ctx.dpr;\n  }\n\n  return value;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixShadow.js\n// module id = 1111\n// module chunks = 2 3 4","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Pattern.js\n// module id = 1112\n// module chunks = 2 3 4","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/requestAnimationFrame.js\n// module id = 1113\n// module chunks = 2 3 4","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Image.js\n// module id = 1114\n// module chunks = 2 3 4","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\nvar fixShadow = require(\"./fixShadow\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  ctx[prop] = fixShadow(ctx, prop, value);\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/text.js\n// module id = 1115\n// module chunks = 2 3 4","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/roundRect.js\n// module id = 1116\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function () {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function (payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Global.js\n// module id = 1117\n// module chunks = 2 3 4","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/bbox.js\n// module id = 1118\n// module chunks = 2 3 4","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/util.js\n// module id = 1119\n// module chunks = 2 3 4","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/windingLine.js\n// module id = 1120\n// module chunks = 2 3 4","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 1121\n// module chunks = 2 3 4","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/poly.js\n// module id = 1122\n// module chunks = 2 3 4","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function () {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/colorPalette.js\n// module id = 1123\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @return {Object} For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // It also indicate that whether there is category axis.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\nfunction getCoordSysDefineBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = {\n    coordSysName: coordSysName,\n    coordSysDims: [],\n    axisMap: createHashMap(),\n    categoryAxisMap: createHashMap()\n  };\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  singleAxis: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex = 1;\n    }\n  },\n  geo: function (seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function (seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysDefineBySeries = getCoordSysDefineBySeries;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/referHelper.js\n// module id = 1124\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/ExtensionAPI.js\n// module id = 1125\n// module chunks = 2 3 4","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function (params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.isOverallFilter) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function () {\n    return getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem'\n        });\n        var valStr = (vertially ? dimHead + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    function formatSingleValue(val) {\n      return encodeHTML(addCommas(val));\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var colorEl = getTooltipMarker(color);\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function (name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function (coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function () {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function () {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/Series.js\n// module id = 1126\n// module chunks = 2 3 4","var _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.canProgressiveRender;\n    var large = fields.large = pipelineContext.large;\n    var progressive = fields.canProgressiveRender = pipelineContext.canProgressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createRenderPlanner.js\n// module id = 1127\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysDefineBySeries = _referHelper.getCoordSysDefineBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDefine = getCoordSysDefineBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysDefine) {\n    coordSysDimDefs = zrUtil.map(coordSysDefine.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysDefine.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysDefine && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysDefine.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListFromArray.js\n// module id = 1128\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *                 If not specified, extra dim names will be:\n *                 'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *                 If `generateCoordCount` specified, the generated dim names will be:\n *                 `generateCoord` + 0, `generateCoord` + 1, ...\n *                 can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @param {number} [opt.encodeDefaulter] If not specified, auto find the next available data dim.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      displayName: string, the origin name in dimsDef, see source helper.\n *                 If displayName given, the tooltip will displayed vertically.\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      otherDims: { never null/undefined\n *          tooltip: number optional,\n *          label: number optional,\n *          itemName: number optional,\n *          seriesName: number optional,\n *      },\n *      isExtraCoord: boolean true if coord is generated\n *          (not specified in encode and not series specified)\n *      other props ...\n * }]\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = createHashMap(opt.encodeDef);\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice();\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.displayName = sysDimItemDimsDef[coordDimIndex];\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && guessOrdinal(source, resultDimIdx, resultItem.name)) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/helper/completeDimensions.js\n// module id = 1129\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/OrdinalMeta.js\n// module id = 1130\n// module chunks = 2 3 4","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/helper.js\n// module id = 1131\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 1132\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/Axis.js\n// module id = 1133\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 1134\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/globalListener.js\n// module id = 1135\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 1136\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.getCategories();\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisBuilder.js\n// module id = 1137\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 1138\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/AxisView.js\n// module id = 1139\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      // Do not support this hover animation util some scenario required.\n      // Animation can only be supported in hover layer when using `el.incremetal`.\n      if (this.incremental) {\n        return;\n      }\n\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      if (this.incremental) {\n        return;\n      }\n\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/Symbol.js\n// module id = 1140\n// module chunks = 2 3 4","var _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var stacked = isDimensionStacked(data, valueDim, baseDim);\n  var dataDimsForPoint = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  return {\n    dataDimsForPoint: dataDimsForPoint,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/helper.js\n// module id = 1141\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 1142\n// module chunks = 2 3 4","module.exports = {\n  pieChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{b}<br> {c} ({d}%)\"\n    },\n\n    series: [\n      {\n        name: '',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '55%'],\n        data: [],\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      }\n    ]\n  },\n  lineChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    grid: {\n      left: '3%',\n      right: '3%',\n      bottom: '5%',\n      containLabel: true\n    },\n    tooltip: {\n      trigger: 'axis'\n    },\n    xAxis: {\n      type: 'category',\n      data: []\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [{\n      data: [],\n      type: 'line',\n      smooth: true\n    }]\n  },\n\n  ringPieChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    legend: {\n      type: 'scroll',\n      orient: 'vertical',\n      x: 'right',\n      selected:{'Bancor Network':false,'Gatecoin':false,'BitFlip':false,'Braziliex':false,'Cobinhood':false,'CoinExchange':false,'CoinFalcon':false,'Cryptomate':false,'Gatecoin':false,'IDEX':false,'LiteBit.eu':false,'Stocks.Exchange':false,'Tidex':false}\n    },\n    tooltip: {\n      trigger: 'item',\n      formatter: \"{b}: {c} ({d}%)\"\n    },\n\n    series: [\n      {\n        name: '',\n        type: 'pie',\n        selectedMode: 'single',\n        radius: [0, '30%'],\n        center:['50%','50%'],\n        label: {\n          normal: {\n            position: 'inner'\n          }\n        },\n        labelLine: {\n          normal: {\n            show: false\n          }\n        },\n        data: []\n      },\n      {\n        name: '',\n        type: 'pie',\n        radius: ['40%', '55%'],\n        center:['50%','50%'],\n        data: []\n      }\n    ]\n  },\n  multiLineChart: {\n    title : {\n      text: '',\n      x:'center'\n    },\n    legend: {\n      type: 'scroll',\n      data:[]\n    },\n    grid: {\n      left: '3%',\n      right: '3%',\n      bottom: '5%',\n      containLabel: true\n    },\n    tooltip: {\n      trigger: 'axis'\n     // position:function(p){   //其中p为当前鼠标的位置\n     //   return [p[0] + 10, p[1] - 10];\n    //  }\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: []\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: []\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/chart.config.js","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/title.js\n// module id = 1152\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip.js\n// module id = 1153\n// module chunks = 2 3 4","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = null;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  this.setHandlerProxy(proxy);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  setHandlerProxy: function (proxy) {\n    if (this.proxy) {\n      this.proxy.dispose();\n    }\n\n    if (proxy) {\n      util.each(handlerNames, function (name) {\n        proxy.on && proxy.on(name, this[name], this);\n      }, this); // Attach handler\n\n      proxy.handler = this;\n    }\n\n    this.proxy = proxy;\n  },\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mouseup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Handler.js\n// module id = 1183\n// module chunks = 2 3 4","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Draggable.js\n// module id = 1184\n// module chunks = 2 3 4","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen;\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    if (el) {\n      el.__storage = this;\n      el.dirty(false);\n    }\n\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Storage.js\n// module id = 1185\n// module chunks = 2 3 4","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/mixin/Animatable.js\n// module id = 1186\n// module chunks = 2 3 4","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Clip.js\n// module id = 1187\n// module chunks = 2 3 4","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/easing.js\n// module id = 1188\n// module chunks = 2 3 4","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\nvar env = require(\"./core/env\");\n\nvar HOVER_LAYER_ZLEVEL = 1e5;\nvar CANVAS_ZLEVEL = 314159;\nvar EL_AFTER_INCREMENTAL_INC = 0.01;\nvar INCREMENTAL_INC = 0.001;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._layerConfig = {};\n  /**\n   * zrender will do compositing when root is a canvas and have multiple zlevels.\n   */\n\n  this._needsManuallyCompositing = false;\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    var width = root.width;\n    var height = root.height;\n\n    if (opts.width != null) {\n      width = opts.width;\n    }\n\n    if (opts.height != null) {\n      height = opts.height;\n    }\n\n    this.dpr = opts.devicePixelRatio || 1; // Use canvas width and height directly\n\n    root.width = width * this.dpr;\n    root.height = height * this.dpr;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device can be specified to create a high dpi image.\n\n    var mainLayer = new Layer(root, this, this.dpr);\n    mainLayer.__builtin__ = true;\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[CANVAS_ZLEVEL] = mainLayer; // Not use common zlevel.\n\n    zlevelList.push(CANVAS_ZLEVEL);\n    this._domRoot = root;\n  }\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n\n  this._hoverlayer = null;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n    this._redrawId = Math.random();\n\n    this._paintList(list, paintAll, this._redrawId); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        var clearColor = i === 0 ? this._backgroundColor : null;\n        layer.refresh(clearColor);\n      }\n    }\n\n    this.refreshHover();\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_ZLEVEL);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  getHoverLayer: function () {\n    return this.getLayer(HOVER_LAYER_ZLEVEL);\n  },\n  _paintList: function (list, paintAll, redrawId) {\n    if (this._redrawId !== redrawId) {\n      return;\n    }\n\n    paintAll = paintAll || false;\n\n    this._updateLayerStatus(list);\n\n    var finished = this._doPaintList(list, paintAll);\n\n    if (this._needsManuallyCompositing) {\n      this._compositeManually();\n    }\n\n    if (!finished) {\n      var self = this;\n      requestAnimationFrame(function () {\n        self._paintList(list, paintAll, redrawId);\n      });\n    }\n  },\n  _compositeManually: function () {\n    var ctx = this.getLayer(CANVAS_ZLEVEL).ctx;\n    var width = this._domRoot.width;\n    var height = this._domRoot.height;\n    ctx.clearRect(0, 0, width, height); // PENDING, If only builtin layer?\n\n    this.eachBuiltinLayer(function (layer) {\n      if (layer.virtual) {\n        ctx.drawImage(layer.dom, 0, 0, width, height);\n      }\n    });\n  },\n  _doPaintList: function (list, paintAll) {\n    var layerList = [];\n\n    for (var zi = 0; zi < this._zlevelList.length; zi++) {\n      var zlevel = this._zlevelList[zi];\n      var layer = this._layers[zlevel];\n\n      if (layer.__builtin__ && layer !== this._hoverlayer && (layer.__dirty || paintAll)) {\n        layerList.push(layer);\n      }\n    }\n\n    var finished = true;\n\n    for (var k = 0; k < layerList.length; k++) {\n      var layer = layerList[k];\n      var ctx = layer.ctx;\n      var scope = {};\n      ctx.save();\n      var start = paintAll ? layer.__startIndex : layer.__drawIndex;\n      var useTimer = !paintAll && layer.incremental && Date.now;\n      var startTime = useTimer && Date.now();\n      var clearColor = layer.zlevel === this._zlevelList[0] ? this._backgroundColor : null; // All elements in this layer are cleared.\n\n      if (layer.__startIndex === layer.__endIndex) {\n        layer.clear(false, clearColor);\n      } else if (start === layer.__startIndex) {\n        var firstEl = list[start];\n\n        if (!firstEl.incremental || !firstEl.notClear || paintAll) {\n          layer.clear(false, clearColor);\n        }\n      }\n\n      if (start === -1) {\n        console.error('For some unknown reason. drawIndex is -1');\n        start = layer.__startIndex;\n      }\n\n      for (var i = start; i < layer.__endIndex; i++) {\n        var el = list[i];\n\n        this._doPaintEl(el, layer, paintAll, scope);\n\n        el.__dirty = false;\n\n        if (useTimer) {\n          // Date.now can be executed in 13,025,305 ops/second.\n          var dTime = Date.now() - startTime; // Give 15 millisecond to draw.\n          // The rest elements will be drawn in the next frame.\n\n          if (dTime > 15) {\n            break;\n          }\n        }\n      }\n\n      layer.__drawIndex = i;\n\n      if (layer.__drawIndex < layer.__endIndex) {\n        finished = false;\n      }\n\n      if (scope.prevElClipPaths) {\n        // Needs restore the state. If last drawn element is in the clipping area.\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n\n    if (env.wxa) {\n      // Flush for weixin application\n      util.each(this._layers, function (layer) {\n        if (layer && layer.ctx && layer.ctx.draw) {\n          layer.ctx.draw();\n        }\n      });\n    }\n\n    return finished;\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (!scope.prevElClipPaths || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          currentLayer.ctx.restore();\n          scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @param {boolean} virtual Virtual layer will not be inserted into dom.\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel, virtual) {\n    if (this._singleCanvas && !this._needsManuallyCompositing) {\n      zlevel = CANVAS_ZLEVEL;\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.zlevel = zlevel;\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      if (virtual) {\n        layer.virtual = virtual;\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    this.eachBuiltinLayer(function (layer, z) {\n      layer.__dirty = layer.__used = false;\n    });\n\n    function updatePrevLayer(idx) {\n      if (prevLayer) {\n        if (prevLayer.__endIndex !== idx) {\n          prevLayer.__dirty = true;\n        }\n\n        prevLayer.__endIndex = idx;\n      }\n    }\n\n    if (this._singleCanvas) {\n      for (var i = 1; i < list.length; i++) {\n        var el = list[i];\n\n        if (el.zlevel !== list[i - 1].zlevel || el.incremental) {\n          this._needsManuallyCompositing = true;\n          break;\n        }\n      }\n    }\n\n    var prevLayer = null;\n    var incrementalLayerCount = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n      var zlevel = el.zlevel;\n      var layer; // PENDING If change one incremental element style ?\n      // TODO Where there are non-incremental elements between incremental elements.\n\n      if (el.incremental) {\n        layer = this.getLayer(zlevel + INCREMENTAL_INC, this._needsManuallyCompositing);\n        layer.incremental = true;\n        incrementalLayerCount = 1;\n      } else {\n        layer = this.getLayer(zlevel + (incrementalLayerCount > 0 ? EL_AFTER_INCREMENTAL_INC : 0), this._needsManuallyCompositing);\n      }\n\n      if (!layer.__builtin__) {\n        log('ZLevel ' + zlevel + ' has been used by unkown layer ' + layer.id);\n      }\n\n      if (layer !== prevLayer) {\n        layer.__used = true;\n\n        if (layer.__startIndex !== i) {\n          layer.__dirty = true;\n        }\n\n        layer.__startIndex = i;\n\n        if (!layer.incremental) {\n          layer.__drawIndex = i;\n        } else {\n          // Mark layer draw index needs to update.\n          layer.__drawIndex = -1;\n        }\n\n        updatePrevLayer(i);\n        prevLayer = layer;\n      }\n\n      if (el.__dirty) {\n        layer.__dirty = true;\n\n        if (layer.incremental && layer.__drawIndex < 0) {\n          // Start draw from the first dirty element.\n          layer.__drawIndex = i;\n        }\n      }\n    }\n\n    updatePrevLayer(i);\n    this.eachBuiltinLayer(function (layer, z) {\n      // Used in last frame but not in this frame. Needs clear\n      if (!layer.__used && layer.getElementCount() > 0) {\n        layer.__dirty = true;\n        layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n      } // For incremental layer. In case start index changed and no elements are dirty.\n\n\n      if (layer.__dirty && layer.__drawIndex < 0) {\n        layer.__drawIndex = layer.__startIndex;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n  setBackgroundColor: function (backgroundColor) {\n    this._backgroundColor = backgroundColor;\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      for (var i = 0; i < this._zlevelList.length; i++) {\n        var _zlevel = this._zlevelList[i];\n\n        if (_zlevel === zlevel || _zlevel === zlevel + EL_AFTER_INCREMENTAL_INC) {\n          var layer = this._layers[_zlevel];\n          util.merge(layer, layerConfig[zlevel], true);\n        }\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    if (!this._domRoot.style) {\n      // Maybe in node or worker\n      if (width == null || height == null) {\n        return;\n      }\n\n      this._width = width;\n      this._height = height;\n      this.getLayer(CANVAS_ZLEVEL).resize(width, height);\n    } else {\n      var domRoot = this._domRoot; // FIXME Why ?\n\n      domRoot.style.display = 'none'; // Save input w/h\n\n      var opts = this._opts;\n      width != null && (opts.width = width);\n      height != null && (opts.height = height);\n      width = this._getSize(0);\n      height = this._getSize(1);\n      domRoot.style.display = ''; // 优化没有实际改变的resize\n\n      if (this._width != width || height != this._height) {\n        domRoot.style.width = width + 'px';\n        domRoot.style.height = height + 'px';\n\n        for (var id in this._layers) {\n          if (this._layers.hasOwnProperty(id)) {\n            this._layers[id].resize(width, height);\n          }\n        }\n\n        util.each(this._progressiveLayers, function (layer) {\n          layer.resize(width, height);\n        });\n        this.refresh(true);\n      }\n\n      this._width = width;\n      this._height = height;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas && !this._compositeManually) {\n      return this._layers[CANVAS_ZLEVEL].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clear(false, opts.backgroundColor || this._backgroundColor);\n\n    if (opts.pixelRatio <= this.dpr) {\n      this.refresh();\n      var width = imageLayer.dom.width;\n      var height = imageLayer.dom.height;\n      var ctx = imageLayer.ctx;\n      this.eachLayer(function (layer) {\n        if (layer.__builtin__) {\n          ctx.drawImage(layer.dom, 0, 0, width, height);\n        } else if (layer.renderToCanvas) {\n          imageLayer.ctx.save();\n          layer.renderToCanvas(imageLayer.ctx);\n          imageLayer.ctx.restore();\n        }\n      });\n    } else {\n      // PENDING, echarts-gl and incremental rendering.\n      var scope = {};\n      var displayList = this.storage.getDisplayList(true);\n\n      for (var i = 0; i < displayList.length; i++) {\n        var el = displayList[i];\n\n        this._doPaintEl(el, imageLayer, true, scope);\n      }\n    }\n\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur * dpr;\n    var shadowOffsetX = style.shadowOffsetX * dpr;\n    var shadowOffsetY = style.shadowOffsetY * dpr;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Painter.js\n// module id = 1189\n// module chunks = 2 3 4","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    // In node or some other non-browser environment\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = 0;\n    newDomStyle.top = 0;\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  __dirty: true,\n  __used: false,\n  __drawIndex: 0,\n  __startIndex: 0,\n  __endIndex: 0,\n  incremental: false,\n  getElementCount: function () {\n    return this.__endIndex - this.__startIndex;\n  },\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} [clearAll]=false Clear all with out motion blur\n   * @param {Color} [clearColor]\n   */\n  clear: function (clearAll, clearColor) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor && clearColor !== 'transparent') {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/Layer.js\n// module id = 1190\n// module chunks = 2 3 4","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/mixin/RectText.js\n// module id = 1191\n// module chunks = 2 3 4","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta); // 'frame' should be triggered before stage, because upper application\n    // depends on the sequence (e.g., echarts-stream and finish\n    // event judge)\n\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * Start animation.\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * Stop animation.\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause animation.\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume animation.\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * Clear animation.\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * Whether animation finished.\n   */\n  isFinished: function () {\n    return !this._clips.length;\n  },\n\n  /**\n   * Creat animator for a target, whose props can be animated.\n   *\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] Whether loop animation.\n   * @param  {Function} [options.getter=null] Get value from target.\n   * @param  {Function} [options.setter=null] Set value to target.\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/animation/Animation.js\n// module id = 1192\n// module chunks = 2 3 4","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style && (this.dom.style.cursor = cursorStyle || 'default');\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/dom/HandlerProxy.js\n// module id = 1193\n// module chunks = 2 3 4","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/core/GestureMgr.js\n// module id = 1194\n// module chunks = 2 3 4","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/lineStyle.js\n// module id = 1195\n// module chunks = 2 3 4","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/areaStyle.js\n// module id = 1196\n// module chunks = 2 3 4","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/textStyle.js\n// module id = 1197\n// module chunks = 2 3 4","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/path.js\n// module id = 1198\n// module chunks = 2 3 4","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/path.js\n// module id = 1199\n// module chunks = 2 3 4","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/line.js\n// module id = 1200\n// module chunks = 2 3 4","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/cubic.js\n// module id = 1201\n// module chunks = 2 3 4","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/quadratic.js\n// module id = 1202\n// module chunks = 2 3 4","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/arc.js\n// module id = 1203\n// module chunks = 2 3 4","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/tool/transformPath.js\n// module id = 1204\n// module chunks = 2 3 4","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/Text.js\n// module id = 1205\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Circle.js\n// module id = 1206\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Sector.js\n// module id = 1207\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Ring.js\n// module id = 1208\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polygon.js\n// module id = 1209\n// module chunks = 2 3 4","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1210\n// module chunks = 2 3 4","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1211\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Polyline.js\n// module id = 1212\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Rect.js\n// module id = 1213\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Line.js\n// module id = 1214\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1215\n// module chunks = 2 3 4","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/shape/Arc.js\n// module id = 1216\n// module chunks = 2 3 4","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/CompoundPath.js\n// module id = 1217\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/LinearGradient.js\n// module id = 1218\n// module chunks = 2 3 4","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/RadialGradient.js\n// module id = 1219\n// module chunks = 2 3 4","var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have too main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/graphic/IncrementalDisplayable.js\n// module id = 1220\n// module chunks = 2 3 4","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/itemStyle.js\n// module id = 1221\n// module chunks = 2 3 4","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/boxLayout.js\n// module id = 1222\n// module chunks = 2 3 4","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/globalDefault.js\n// module id = 1223\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/OptionManager.js\n// module id = 1224\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/backwardCompat.js\n// module id = 1225\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 1226\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed before after series filtered and before stack calculation.\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataStack.js\n// module id = 1227\n// module chunks = 2 3 4","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function (idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function () {// Empty function\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/model/mixin/dataFormat.js\n// module id = 1228\n// module chunks = 2 3 4","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/view/Component.js\n// module id = 1229\n// module chunks = 2 3 4","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.');\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette( // TODO series count changed.\n    seriesModel.name, null, ecModel.getSeriesCount()); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/seriesColor.js\n// module id = 1230\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/aria.js\n// module id = 1231\n// module chunks = 2 3 4","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/lang.js\n// module id = 1232\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/loading/default.js\n// module id = 1233\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  // this._pipelineMap = createHashMap();\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  this._visualHandlers = visualHandlers.slice();\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype; // If seriesModel provided, incremental threshold is check by series data.\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.canProgressiveRender) && task.__idxInPipeline > pipeline.bockIndex;\n  return {\n    step: incremental ? pipeline.step : null\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `canProgressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var canProgressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold');\n  seriesModel.pipelineContext = pipeline.context = {\n    canProgressiveRender: canProgressiveRender,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      bockIndex: -1,\n      step: progressive || 700,\n      // ??? Temporarily number\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each([this._dataProcessorHandlers, this._visualHandlers], function (stageHandlers) {\n    each(stageHandlers, function (handler) {\n      var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n      handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n      handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n    }, this);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block);\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.bockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var isOverallFilter = stageHandler.isOverallFilter; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId) || agentStubMap.set(pipelineId, createTask({\n      reset: stubReset,\n      onDirty: stubOnDirty\n    }));\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      isOverallFilter: isOverallFilter\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n\n  if (resetDefines.length) {\n    return seriesTaskProgress;\n  }\n}\n\nfunction seriesTaskProgress(params, context) {\n  var data = context.data;\n  var resetDefines = context.resetDefines;\n\n  for (var k = 0; k < resetDefines.length; k++) {\n    var resetDefine = resetDefines[k];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  }\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/stream/Scheduler.js\n// module id = 1234\n// module chunks = 2 3 4","var colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/theme/light.js\n// module id = 1235\n// module chunks = 2 3 4","var contrastColor = '#eee';\n\nvar axisCommon = function () {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/theme/dark.js\n// module id = 1236\n// module chunks = 2 3 4","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/export.js\n// module id = 1237\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/helper.js\n// module id = 1238\n// module chunks = 2 3 4","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/data/DataDiffer.js\n// module id = 1239\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function (ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._ordinalMeta.categories[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Ordinal.js\n// module id = 1240\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction layout(seriesType, ecModel, api) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d') {\n      seriesModels.push(seriesModel);\n    }\n  });\n  var barWidthAndOffset = calBarWidthAndOffset(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim, baseDim);\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = baseAxis.onZero || stacked ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n\n      if (isNaN(value)) {\n        continue;\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.calBarWidthAndOffset = calBarWidthAndOffset;\nexports.layout = layout;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/barGrid.js\n// module id = 1241\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Time.js\n// module id = 1242\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/scale/Log.js\n// module id = 1243\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/parseGeoJson.js\n// module id = 1244\n// module chunks = 2 3 4","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/geo/Region.js\n// module id = 1245\n// module chunks = 2 3 4","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/zrender/lib/contain/polygon.js\n// module id = 1246\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer.js\n// module id = 1247\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 1248\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 1249\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 1250\n// module chunks = 2 3 4","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 1251\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 1252\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 1253\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node || env.wxa) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipView.js\n// module id = 1254\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 1255\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line.js\n// module id = 1256\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineSeries.js\n// module id = 1257\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: createClipShape(coordSys, false, seriesModel)\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n\n      var coordSysClipShape = createClipShape(coordSys, false, seriesModel); // Update clipPath\n\n      lineGroup.setClipPath(coordSysClipShape); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isSymbolIgnore,\n        clipShape: coordSysClipShape\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/LineView.js\n// module id = 1258\n// module chunks = 2 3 4","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will\n  // cut part of the symbol element shape.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 1259\n// module chunks = 2 3 4","var _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/labelHelper.js\n// module id = 1260\n// module chunks = 2 3 4","var _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 1261\n// module chunks = 2 3 4","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  if (smoothMonotone == null) {\n    if (isMono(points, 'x')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n    } else if (isMono(points, 'y')) {\n      return drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n    } else {\n      return drawNonMono.apply(this, arguments);\n    }\n  } else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n    return drawMono.apply(this, arguments);\n  } else {\n    return drawNonMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n\n\nfunction isMono(points, smoothMonotone) {\n  if (points.length <= 1) {\n    return true;\n  }\n\n  var dim = smoothMonotone === 'x' ? 0 : 1;\n  var last = points[0][dim];\n  var lastDiff = 0;\n\n  for (var i = 1; i < points.length; ++i) {\n    var diff = points[i][dim] - last;\n\n    if (!isNaN(diff) && !isNaN(lastDiff) && diff !== 0 && lastDiff !== 0 && diff >= 0 !== lastDiff >= 0) {\n      return false;\n    }\n\n    if (!isNaN(diff) && diff !== 0) {\n      lastDiff = diff;\n      last = points[i][dim];\n    }\n  }\n\n  return true;\n}\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/line/poly.js\n// module id = 1262\n// module chunks = 2 3 4","function _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    performRawSeries: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n      var symbolSize = seriesModel.get('symbolSize');\n      data.setVisual({\n        legendSymbol: legendSymbol || symbolType,\n        symbol: symbolType,\n        symbolSize: symbolSize\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      var hasCallback = typeof symbolSize === 'function';\n\n      function dataEach(data, idx) {\n        if (typeof symbolSize === 'function') {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/symbol.js\n// module id = 1263\n// module chunks = 2 3 4","var _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n\n      if (isDimensionStacked(data, dims[0], dims[1])) {\n        dims[0] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      if (isDimensionStacked(data, dims[1], dims[0])) {\n        dims[1] = data.getCalculationInfo('stackResultDimension');\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i, true);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i, true);\n            var y = tmpIn[1] = data.get(dims[1], i, true); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/layout/points.js\n// module id = 1264\n// module chunks = 2 3 4","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            seriesModel.setData(data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataSample.js\n// module id = 1265\n// module chunks = 2 3 4","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/gridSimple.js\n// module id = 1266\n// module chunks = 2 3 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.get('axisLabel.show') ? axisModel.getFormattedLabels() : [];\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Grid.js\n// module id = 1267\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xAxisExtent = this.getAxis('x').scale.getExtent();\n    var yAxisExtent = this.getAxis('y').scale.getExtent();\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), data[0]), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), data[1]), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 1268\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 1269\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 1270\n// module chunks = 2 3 4","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/cartesian/GridModel.js\n// module id = 1271\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function () {\n        // FIXME\n        // warning if called before all of 'getInitailData' finished.\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisModelCreator.js\n// module id = 1272\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/coord/axisDefault.js\n// module id = 1273\n// module chunks = 2 3 4","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis.js\n// module id = 1274\n// module chunks = 2 3 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel) && i < ticksCoords.length - 1) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 1275\n// module chunks = 2 3 4","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1276\n// module chunks = 2 4","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1277\n// module chunks = 2 4","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie.js\n// module id = 1339\n// module chunks = 2 3","var echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function (option, ecModel) {\n    return createListSimply(this, ['value']);\n  },\n  _createSelectableList: function () {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieSeries.js\n// module id = 1340\n// module chunks = 2 3","var createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/helper/createListSimply.js\n// module id = 1341\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function (targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/selectableMixin.js\n// module id = 1342\n// module chunks = 2 3","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(null, idx), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/PieView.js\n// module id = 1343\n// module chunks = 2 3","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/action/createDataSelectAction.js\n// module id = 1344\n// module chunks = 2 3","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function (ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function (seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/visual/dataColor.js\n// module id = 1345\n// module chunks = 2 3","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/pieLayout.js\n// module id = 1346\n// module chunks = 2 3","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/chart/pie/labelLayout.js\n// module id = 1347\n// module chunks = 2 3","function _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/processor/dataFilter.js\n// module id = 1348\n// module chunks = 2 3","import React from 'react'\nimport {injectIntl} from \"react-intl\";\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport {connect} from \"react-redux\";\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.lineChart.title.text='';\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n    if(data && data.length>0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n          }\n        }\n        else\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n\n\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n    if(data && data.length===0){\n      config.lineChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1350\n// module chunks = 2 4","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1351\n// module chunks = 2 4","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/helper/listComponent.js\n// module id = 1352\n// module chunks = 2 4","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1353\n// module chunks = 2 4","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1354\n// module chunks = 2 4","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1355\n// module chunks = 2 4","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1356\n// module chunks = 2 4","import React, {Component} from \"react\";\nimport {tu} from \"../../utils/i18n\";\nimport {Client} from \"../../services/api\";\nimport {ExternalLink} from \"../common/Links\";\nimport {FormattedNumber} from \"react-intl\";\nimport {TRXPrice} from \"../common/Price\";\n\nexport default class MarketOverview extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      markets: [],\n    }\n  }\n\n  componentDidMount() {\n    // this.load();\n  }\n\n  async load() {\n    let markets = await Client.getMarkets();\n\n    this.setState({\n      markets,\n    });\n  }\n\n  render() {\n\n    let {markets} = this.props;\n\n    markets = markets.slice(0, 15);\n\n    return (\n        <div className=\"card\">\n          <table className=\"table table-hover bg-white m-0 table-striped\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th style={{width: 25}}>{tu(\"rank\")}</th>\n                <th>{tu(\"exchange\")}</th>\n                <th className=\"d-none d-sm-table-cell\" style={{width: 75}}>{tu(\"pair\")}</th>\n                <th className=\"d-none d-md-table-cell\" style={{width: 100}}>{tu(\"volume\")}</th>\n                <th className=\"d-none d-md-table-cell\" style={{width: 75}}>%</th>\n                <th className=\"text-right\" style={{width: 100}}>{tu(\"price\")}</th>\n              </tr>\n            </thead>\n            <tbody>\n            {\n              markets.map(market => (\n                <tr key={market.rank}>\n                  <th>\n                    {market.rank}\n                  </th>\n                  <td>\n                    <ExternalLink url={market.link}>{market.name}</ExternalLink>\n                  </td>\n                  <td className=\"d-none d-sm-table-cell\" style={{width: 75}}>\n                    <ExternalLink url={market.link}>{market.pair}</ExternalLink>\n                  </td>\n                  <td className=\"text-nowrap d-none d-md-table-cell\">\n                    <TRXPrice amount={market.volumeNative} />\n                  </td>\n                  <td className=\"text-nowrap d-none d-md-table-cell\">\n                    <FormattedNumber value={market.volumePercentage} maximumFractionDigits={2} />%\n                  </td>\n                  <td className=\"text-right\">\n                    $<FormattedNumber value={market.price} maximumFractionDigits={8} />\n                  </td>\n                </tr>\n              ))\n            }\n            </tbody>\n          </table>\n        </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/markets/MarketOverview.js","import React from 'react'\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'pie' + id\n    }\n  }\n\n  initPie(id) {\n    let {data} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n    config.ringPieChart.title.text=\"\";\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if(data && data.length===0){\n      config.ringPieChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport default RingPieReact\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js"],"sourceRoot":""}