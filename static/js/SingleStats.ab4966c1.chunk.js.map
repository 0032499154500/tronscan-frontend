{"version":3,"sources":["../static/js/SingleStats.ab4966c1.chunk.js","components/blockchain/Statistics/SingleChart.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","utils/tron.js","components/common/LineChart.js"],"names":["webpackJsonp","1110","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","defineProperty","_regenerator","_regenerator2","_extends","assign","target","i","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_index","_index2","_api","_constants","_reactRedux","_reactIntl","_lodash","_tron","_loaders","_PieChart","_PieChart2","_LineChart","_LineChart2","_i18n","_reactCountup","_reactCountup2","_reactRouterDom","_LineCharts","_RingPieChart","_markets","Statistics","_React$Component","_this","getPrototypeOf","accounts","transactionStats","blockStats","transactionValueStats","txOverviewStats","addressesStats","blockSizeStats","blockchainSizeStats","priceStats","volumeStats","summit","pieChart","supplyTypesChart","genesisNum","blockProduceRewardsNum","nodeRewardsNum","independenceDayBurned","feeBurnedNum","currentTotalSupply","priceUSD","priceBTC","marketCapitalization","foundationFreeze","circulatingNum","_this2","match","loadAccounts","loadStats","params","chartName","loadTotalTRXSupply","setInterval","loadPieChart","loadVolume","loadPriceStats","loadTxOverviewStats","property","obj1","obj2","_ref","mark","_callee","accountData","wrap","_context","prev","next","get","sent","data","setState","filter","account","includes","tronAddresses","address","slice","map","name","balance","ONE_TRX","stop","_ref2","_callee2","_ref3","stats","_ref4","transactionTotalStats","valueStats","_context2","Client","getTransferStats","groupby","interval","getBlockStats","total","row","timestamp","_ref5","_callee3","intl","random","balanceData","TRONFoundationTotal","_ref6","blocks","blockHeight","startFeeBurnedNum","supplyTypesChartData","trxPriceData","_context3","Math","getBlocks","limit","sort","number","getAddress","abs","toFixed","selected","parseFloat","price_usd","price_btc","formatNumber","_ref7","_callee4","_ref8","statisticData","pieChartData","_context4","getStatisticData","val","push","url","volumeValue","blockProduced","volumePercentage","percentage","maximumFractionDigits","minimumFractionDigits","_ref9","_callee5","volumeData","volumeUSD","volume","higest","lowest","vo","v","_context5","market_cap_by_available_supply","time","volume_billion","pow","volume_usd","volume_usd_num","date","increment","cloneDeep","compare","volumeStats_sort","_ref10","_callee6","today","timerToday","birthday","timerBirthday","dayNum","_ref11","priceStatsTemp","pr","p","_context6","Date","getTime","floor","priceStats_sort","close","_ref12","_callee7","overviewData","temp","addressesTemp","blockSizeStatsTemp","blockchainSizeStatsTemp","txs","_tx","addr","tx","bs","_bcs","b","_b","bcs","_context7","parseInt","newAddressSeen","totalTransaction","avgBlockTime","avgBlockSize","totalBlockCount","blockchainSize","addressesStats_sort","txOverviewStats_sort","blockSizeStats_sort","blockchainSizeStats_sort","_props","_state","unit","createElement","className","role","t","formatDate","style","height","TronLoader","LineReactTx","LineReactAdd","LineReactBlockSize","LineReactBlockchainSize","LineReactPrice","message","id","href","keysData","format","LineReactVolumeUsd","RepresentativesRingPieReact","fontSize","marginRight","marginTop","border","tu","color","Link","to","marginBottom","whiteSpace","textAlign","padding","borderTop","verticalAlign","transform","marginLeft","backgroundColor","paddingBottom","start","end","duration","separator","decimals","SupplyTypesTRXPieChart","float","size","fontStyle","Component","mapDispatchToProps","loadPriceData","connect","injectIntl","1220","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","selectedMode","tooltip","_default","1221","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","textX","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1395","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","pieId","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","pairData","exchanges","index","pair","subCount","finalExchanges","finalPairData","setOption","initPie","_React$Component2","_props2","substring","split","representPieChart","link","datas","percent","seriesCenter","center","toolbox","feature","restore","saveAsImage","reverse","_React$Component3","_this3","_props3","supplyTypesTRXPieChart","1396","legendFilter","registerProcessor","registerSubTypeDefaulter","1397","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1398","legendModels","findComponents","mainType","filterSeries","1399","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1400","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","legendId","canJump","childOfName","setStyle","cursor","pageText","current","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","winRect","startIdx","children","intersect","startItem","startRect","1401","subType","query","1484","1485","LineReact","lineId","lineChart","xAxis","formatTime","initLine","pure"],"mappings":"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","file":"static/js/SingleStats.ab4966c1.chunk.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ 1110:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(4);var _regenerator2=_interopRequireDefault(_regenerator);var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _index=__webpack_require__(60);var _index2=_interopRequireDefault(_index);var _api=__webpack_require__(7);var _constants=__webpack_require__(31);var _reactRedux=__webpack_require__(12);var _reactIntl=__webpack_require__(11);var _lodash=__webpack_require__(18);var _tron=__webpack_require__(1484);var _loaders=__webpack_require__(26);var _PieChart=__webpack_require__(449);var _PieChart2=_interopRequireDefault(_PieChart);var _LineChart=__webpack_require__(1485);var _LineChart2=_interopRequireDefault(_LineChart);var _i18n=__webpack_require__(8);var _reactCountup=__webpack_require__(233);var _reactCountup2=_interopRequireDefault(_reactCountup);var _reactRouterDom=__webpack_require__(32);var _LineCharts=__webpack_require__(428);var _RingPieChart=__webpack_require__(1395);var _markets=__webpack_require__(426);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Statistics=function(_React$Component){_inherits(Statistics,_React$Component);function Statistics(){_classCallCheck(this,Statistics);var _this=_possibleConstructorReturn(this,(Statistics.__proto__||Object.getPrototypeOf(Statistics)).call(this));_this.state={accounts:null,transactionStats:null,blockStats:null,transactionValueStats:null,txOverviewStats:null,addressesStats:null,blockSizeStats:null,blockchainSizeStats:null,priceStats:null,volumeStats:null,summit:null,pieChart:null,supplyTypesChart:null,genesisNum:null,blockProduceRewardsNum:null,nodeRewardsNum:null,independenceDayBurned:null,feeBurnedNum:null,currentTotalSupply:null,priceUSD:null,priceBTC:null,marketCapitalization:null,foundationFreeze:null,circulatingNum:null};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var match=this.props.match;this.loadAccounts();this.loadStats();var chartName=match.params.chartName;switch(chartName){case'supply':this.loadTotalTRXSupply();setInterval(function(){_this2.loadTotalTRXSupply();},15000);break;case'pieChart':this.loadPieChart();break;case'volumeStats':this.loadVolume();break;case'priceStats':this.loadPriceStats();break;case'accounts':this.loadAccounts();break;default:this.loadTxOverviewStats();break;}}},{key:\"compare\",value:function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}},{key:\"loadAccounts\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var accountData,accounts;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _index2.default.get(\"https://assistapi.tronscan.org/api/account?limit=35&sort=-balance\");case 2:accountData=_context.sent;accounts=accountData.data;this.setState({accounts:(0,_lodash.filter)(accounts,function(account){return!(0,_lodash.includes)(_tron.tronAddresses,account.address);}).slice(0,10).map(function(account){return{name:account.address,value:account.balance/_constants.ONE_TRX};})});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function loadAccounts(){return _ref.apply(this,arguments);}return loadAccounts;}()},{key:\"loadStats\",value:function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var _ref3,stats,_ref4,blockStats,transactionTotalStats,valueStats;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _api.Client.getTransferStats({groupby:'timestamp',interval:'hour'});case 2:_ref3=_context2.sent;stats=_ref3.stats;_context2.next=6;return _api.Client.getBlockStats({info:\"avg-block-size\"});case 6:_ref4=_context2.sent;blockStats=_ref4.stats;transactionTotalStats=stats.total.map(function(row){return{timestamp:row.timestamp,value:row.value};});valueStats=stats.value.map(function(row){return{timestamp:row.timestamp,value:row.value/_constants.ONE_TRX};});blockStats=blockStats.map(function(row){return{timestamp:row.timestamp,value:row.value};});this.setState({transactionStats:transactionTotalStats,transactionValueStats:valueStats,blockStats:blockStats});case 12:case\"end\":return _context2.stop();}}},_callee2,this);}));function loadStats(){return _ref2.apply(this,arguments);}return loadStats;}()},{key:\"loadTotalTRXSupply\",value:function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var intl,random,balanceData,TRONFoundationTotal,_ref6,blocks,blockHeight,nodeRewardsNum,blockProduceRewardsNum,address,startFeeBurnedNum,feeBurnedNum,genesisNum,independenceDayBurned,currentTotalSupply,circulatingNum,supplyTypesChartData,trxPriceData,priceUSD,priceBTC,marketCapitalization;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:intl=this.props.intl;random=Math.random();_context3.next=4;return _index2.default.get(\"https://server.tron.network/api/v2/node/balance_info?random=\"+random);case 4:balanceData=_context3.sent;TRONFoundationTotal=balanceData.data.total;_context3.next=8;return _api.Client.getBlocks({limit:1,sort:'-number'});case 8:_ref6=_context3.sent;blocks=_ref6.blocks;blockHeight=blocks[0]?blocks[0].number:0;nodeRewardsNum=blockHeight*16;blockProduceRewardsNum=blockHeight*32;_context3.next=15;return _api.Client.getAddress('TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy');case 15:address=_context3.sent;startFeeBurnedNum=Math.abs(-9223372036854.775808);feeBurnedNum=(startFeeBurnedNum-Math.abs(address.balance/_constants.ONE_TRX)).toFixed(2);genesisNum=100000000000;independenceDayBurned=1000000000;currentTotalSupply=genesisNum+blockProduceRewardsNum+nodeRewardsNum-independenceDayBurned-feeBurnedNum;circulatingNum=(currentTotalSupply-TRONFoundationTotal).toFixed(2);supplyTypesChartData=[{value:TRONFoundationTotal,name:'foundation_freeze',selected:true},{value:circulatingNum,name:'circulating_supply',selected:true}];_context3.next=25;return _index2.default.get(\"https://api.coinmarketcap.com/v1/ticker/tronix/?convert=EUR\");case 25:trxPriceData=_context3.sent;priceUSD=(parseFloat(trxPriceData.data[0].price_usd)*1000).toFixed(2);priceBTC=(parseFloat(trxPriceData.data[0].price_btc)*1000).toFixed(5);marketCapitalization=(parseFloat(trxPriceData.data[0].price_usd)*currentTotalSupply).toFixed(2);this.setState({supplyTypesChart:supplyTypesChartData,genesisNum:intl.formatNumber(genesisNum),blockProduceRewardsNum:intl.formatNumber(blockProduceRewardsNum),nodeRewardsNum:intl.formatNumber(nodeRewardsNum),independenceDayBurned:intl.formatNumber(independenceDayBurned),feeBurnedNum:intl.formatNumber(feeBurnedNum),currentTotalSupply:currentTotalSupply,priceUSD:priceUSD,priceBTC:priceBTC,marketCapitalization:marketCapitalization,foundationFreeze:intl.formatNumber(TRONFoundationTotal),circulatingNum:intl.formatNumber(circulatingNum)});case 30:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadTotalTRXSupply(){return _ref5.apply(this,arguments);}return loadTotalTRXSupply;}()},{key:\"loadPieChart\",value:function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee4(){var intl,_ref8,statisticData,pieChartData;return _regenerator2.default.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:intl=this.props.intl;_context4.next=3;return _api.Client.getStatisticData();case 3:_ref8=_context4.sent;statisticData=_ref8.statisticData;pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}this.setState({pieChart:pieChartData});case 8:case\"end\":return _context4.stop();}}},_callee4,this);}));function loadPieChart(){return _ref7.apply(this,arguments);}return loadPieChart;}()},{key:\"loadVolume\",value:function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee5(){var intl,volumeData,volumeUSD,volume,higest,lowest,vo,v;return _regenerator2.default.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:intl=this.props.intl;_context5.next=3;return _index2.default.get(\"https://server.tron.network/api/v2/node/market_data\");case 3:volumeData=_context5.sent;volumeUSD=volumeData.data.market_cap_by_available_supply;volume=volumeUSD.map(function(v,i){return{time:v[0],volume_billion:v[1]/Math.pow(10,9),volume_usd:intl.formatNumber(v[1])+' USD',volume_usd_num:v[1]};});this.setState({volumeStats:volume});higest={date:'',increment:''};lowest={date:'',increment:''};vo=(0,_lodash.cloneDeep)(volume).sort(this.compare('volume_usd_num'));for(v in vo){vo[v]=_extends({date:vo[v].time},vo[v]);}this.setState({summit:{volumeStats_sort:[{date:vo[vo.length-1].time,increment:vo[vo.length-1].volume_usd_num},{date:vo[0].time,increment:vo[0].volume_usd_num}]}});case 12:case\"end\":return _context5.stop();}}},_callee5,this);}));function loadVolume(){return _ref9.apply(this,arguments);}return loadVolume;}()},{key:\"loadPriceStats\",value:function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee6(){var intl,today,timerToday,birthday,timerBirthday,dayNum,_ref11,data,priceStatsTemp,higest,lowest,pr,p;return _regenerator2.default.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:intl=this.props.intl;today=new Date();timerToday=today.getTime();birthday=new Date(\"2017/10/10\");timerBirthday=birthday.getTime();dayNum=Math.floor((timerToday-timerBirthday)/1000/3600/24);_context6.next=8;return _index2.default.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\"+dayNum);case 8:_ref11=_context6.sent;data=_ref11.data;priceStatsTemp=data['Data'];this.setState({priceStats:priceStatsTemp});higest={date:'',increment:''};lowest={date:'',increment:''};pr=(0,_lodash.cloneDeep)(priceStatsTemp).sort(this.compare('close'));for(p in pr){pr[p]=_extends({date:pr[p].time},pr[p]);}this.setState({summit:{priceStats_sort:[{date:pr[pr.length-1].time*1000,increment:pr[pr.length-1].close},{date:pr[0].time*1000,increment:pr[0].close}]}});case 17:case\"end\":return _context6.stop();}}},_callee6,this);}));function loadPriceStats(){return _ref10.apply(this,arguments);}return loadPriceStats;}()},{key:\"loadTxOverviewStats\",value:function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee7(){var overviewData,txOverviewStats,temp,addressesTemp,blockSizeStatsTemp,blockchainSizeStatsTemp,txs,_tx,compare,higest,lowest,addr,tx,bs,_bcs,b,_b,bcs;return _regenerator2.default.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:compare=function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};};_context7.next=3;return _index2.default.get(\"https://assistapi.tronscan.org/api/stats/overview\");case 3:overviewData=_context7.sent;txOverviewStats=overviewData.data.data;temp=[];addressesTemp=[];blockSizeStatsTemp=[];blockchainSizeStatsTemp=[];for(txs in txOverviewStats){_tx=parseInt(txs);if(_tx===0){temp.push(txOverviewStats[_tx]);addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen,increment:txOverviewStats[_tx].newAddressSeen});}else{temp.push({date:txOverviewStats[_tx].date,totalTransaction:txOverviewStats[_tx].totalTransaction-txOverviewStats[_tx-1].totalTransaction,avgBlockTime:txOverviewStats[_tx].avgBlockTime,avgBlockSize:txOverviewStats[_tx].avgBlockSize,totalBlockCount:txOverviewStats[_tx].totalBlockCount-txOverviewStats[_tx-1].totalBlockCount,newAddressSeen:txOverviewStats[_tx].newAddressSeen});addressesTemp.push({date:txOverviewStats[_tx].date,total:txOverviewStats[_tx].newAddressSeen+addressesTemp[_tx-1].total,increment:txOverviewStats[_tx].newAddressSeen});}blockSizeStatsTemp.push({date:txOverviewStats[_tx].date,avgBlockSize:txOverviewStats[_tx].avgBlockSize});blockchainSizeStatsTemp.push({date:txOverviewStats[_tx].date,blockchainSize:txOverviewStats[_tx].blockchainSize});}this.setState({txOverviewStats:temp,addressesStats:addressesTemp,blockSizeStats:blockSizeStatsTemp,blockchainSizeStats:blockchainSizeStatsTemp});higest={date:'',increment:''};lowest={date:'',increment:''};addr=(0,_lodash.cloneDeep)(addressesTemp).sort(compare('increment'));tx=(0,_lodash.cloneDeep)(temp).sort(compare('totalTransaction'));bs=(0,_lodash.cloneDeep)(blockSizeStatsTemp).sort(compare('avgBlockSize'));_bcs=[];for(b in blockchainSizeStatsTemp){_b=parseInt(b);if(_b===0){_bcs.push({date:blockchainSizeStatsTemp[0].date,blockchainSize:blockchainSizeStatsTemp[0].blockchainSize/1000000});}else{_bcs.push({date:blockchainSizeStatsTemp[_b].date,blockchainSize:(blockchainSizeStatsTemp[_b].blockchainSize-blockchainSizeStatsTemp[_b-1].blockchainSize)/1000000});}}bcs=_bcs.sort(compare('blockchainSize'));this.setState({summit:{addressesStats_sort:[{date:addr[addr.length-1].date,increment:addr[addr.length-1].increment},{date:addr[0].date,increment:addr[0].increment}],txOverviewStats_sort:[{date:tx[tx.length-1].date,increment:tx[tx.length-1].totalTransaction},{date:tx[0].date,increment:tx[0].totalTransaction}],blockSizeStats_sort:[{date:bs[bs.length-1].date,increment:bs[bs.length-1].avgBlockSize},{date:bs[0].date,increment:bs[0].avgBlockSize}],blockchainSizeStats_sort:[{date:bcs[bcs.length-1].date,increment:bcs[bcs.length-1].blockchainSize},{date:bcs[0].date,increment:bcs[0].blockchainSize}]}});case 20:case\"end\":return _context7.stop();}}},_callee7,this);}));function loadTxOverviewStats(){return _ref12.apply(this,arguments);}return loadTxOverviewStats;}()},{key:\"render\",value:function render(){var _props=this.props,match=_props.match,intl=_props.intl;var _state=this.state,txOverviewStats=_state.txOverviewStats,addressesStats=_state.addressesStats,blockSizeStats=_state.blockSizeStats,blockchainSizeStats=_state.blockchainSizeStats,priceStats=_state.priceStats,transactionStats=_state.transactionStats,transactionValueStats=_state.transactionValueStats,blockStats=_state.blockStats,accounts=_state.accounts,volumeStats=_state.volumeStats,pieChart=_state.pieChart,supplyTypesChart=_state.supplyTypesChart,summit=_state.summit,genesisNum=_state.genesisNum,blockProduceRewardsNum=_state.blockProduceRewardsNum,nodeRewardsNum=_state.nodeRewardsNum,independenceDayBurned=_state.independenceDayBurned,feeBurnedNum=_state.feeBurnedNum,currentTotalSupply=_state.currentTotalSupply,priceUSD=_state.priceUSD,priceBTC=_state.priceBTC,marketCapitalization=_state.marketCapitalization,foundationFreeze=_state.foundationFreeze,circulatingNum=_state.circulatingNum;var unit=void 0;var uploadURL=\"http://server.tron.network/api/v2/node/overview_upload\";if(match.params.chartName==='blockchainSizeStats'||match.params.chartName==='addressesStats'){unit='increase';}else{unit='number';}return _react2.default.createElement(\"main\",{className:\"container header-overlap\"},match.params.chartName!='pieChart'&&match.params.chartName!='supply'?_react2.default.createElement(\"div\",{className:\"alert alert-light\",role:\"alert\"},_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('highest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][0].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][0].date))),_react2.default.createElement(\"div\",{className:\"col-md-6 text-center\"},summit&&summit[match.params.chartName+'_sort']&&_react2.default.createElement(\"span\",null,(0,_i18n.t)('lowest'),(0,_i18n.t)(unit),(0,_i18n.t)('_of'),_react2.default.createElement(\"strong\",null,' '+summit[match.params.chartName+'_sort'][1].increment+' '),(0,_i18n.t)('was_recorded_on'),\" \",intl.formatDate(summit[match.params.chartName+'_sort'][1].date))))):null,_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},match.params.chartName==='txOverviewStats'&&_react2.default.createElement(\"div\",{style:{height:500}},txOverviewStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactTx,{source:\"singleChart\",style:{height:500},data:txOverviewStats,intl:intl})),match.params.chartName==='addressesStats'&&_react2.default.createElement(\"div\",{style:{height:500}},addressesStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactAdd,{source:\"singleChart\",style:{height:500},data:addressesStats,intl:intl})),match.params.chartName==='blockSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockSize,{source:\"singleChart\",style:{height:500},data:blockSizeStats,intl:intl})),match.params.chartName==='blockchainSizeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockchainSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockchainSize,{source:\"singleChart\",style:{height:500},data:blockchainSizeStats,intl:intl})),match.params.chartName==='priceStats'&&_react2.default.createElement(\"div\",{style:{height:500}},priceStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactPrice,{source:\"singleChart\",style:{height:500},data:priceStats,intl:intl})),match.params.chartName==='accounts'&&_react2.default.createElement(\"div\",{style:{height:500}},accounts===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_PieChart2.default,{style:{height:500},data:accounts})),match.params.chartName==='transactionValueStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionValueStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'trx_transferred_past_hour',href:'transactionValueStats'},style:{height:500},data:transactionValueStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='transactionStats'&&_react2.default.createElement(\"div\",{style:{height:500}},transactionStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'transactions_past_hour',href:'transactionStats'},style:{height:500},data:transactionStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='blockStats'&&_react2.default.createElement(\"div\",{style:{height:500}},blockStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineChart2.default,{message:{id:'average_blocksize',href:'blockStats'},style:{height:500},data:blockStats,keysData:['timestamp','value'],format:{timestamp:true}})),match.params.chartName==='volumeStats'&&_react2.default.createElement(\"div\",{style:{height:500}},volumeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactVolumeUsd,{source:\"singleChart\",style:{height:500},data:volumeStats,intl:intl})),match.params.chartName==='pieChart'&&_react2.default.createElement(\"div\",null,pieChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{source:\"singleChart\",message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:500}})),match.params.chartName==='supply'&&_react2.default.createElement(\"div\",null,supplyTypesChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(\"div\",{className:\"row\",style:{fontSize:12,marginRight:0}},_react2.default.createElement(\"div\",{className:\"col-md-5\"},_react2.default.createElement(\"div\",{className:\"table-responsive\"},_react2.default.createElement(\"table\",{className:\"table\",style:{marginTop:10}},_react2.default.createElement(\"thead\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{style:{border:0}},_react2.default.createElement(\"i\",{className:\"fa fa-puzzle-piece\"}),_react2.default.createElement(\"span\",{style:{marginTop:2}},(0,_i18n.tu)('TRX_distribution_overview'))))),_react2.default.createElement(\"tbody\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('genesis'),\":\"),_react2.default.createElement(\"td\",null,genesisNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"+  \",(0,_i18n.tu)('block_produce_rewards'),\":\"),_react2.default.createElement(\"td\",null,blockProduceRewardsNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"+ \",(0,_i18n.tu)('node_rewards'),\":\"),_react2.default.createElement(\"td\",null,nodeRewardsNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"- \",(0,_i18n.tu)('independence_day_burned'),\":\"),_react2.default.createElement(\"td\",null,independenceDayBurned,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"- \",(0,_i18n.tu)('fee_burned'),\":\"),_react2.default.createElement(\"td\",null,feeBurnedNum,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,\"= \",_react2.default.createElement(\"b\",null,(0,_i18n.tu)('current_total_supply'),\":\"),_react2.default.createElement(\"br\",null)),_react2.default.createElement(\"td\",null,_react2.default.createElement(\"b\",null,intl.formatNumber(currentTotalSupply),\" TRX\"))),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",{style:{color:'red'},className:\"go-foundation\"},_react2.default.createElement(_reactRouterDom.Link,{to:\"/blockchain/foundation\",style:{color:'red'}},(0,_i18n.tu)(\"foundation_freeze\"))),_react2.default.createElement(\"td\",null,foundationFreeze,\" TRX\")),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('circulating_supply'),\":\"),_react2.default.createElement(\"td\",null,circulatingNum,\" TRX\"))))),_react2.default.createElement(\"br\",null),_react2.default.createElement(\"div\",{className:\"table-responsive\"},_react2.default.createElement(\"table\",{className:\"table\",style:{marginBottom:0}},_react2.default.createElement(\"thead\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{style:{border:0}},_react2.default.createElement(\"br\",null),_react2.default.createElement(\"i\",{className:\"fa fa-coins\"}),\" \",(0,_i18n.tu)('price_per_1000_trx')))),_react2.default.createElement(\"tbody\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('in_USD'),\":\"),_react2.default.createElement(\"td\",null,\"$\",priceUSD)),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",null,(0,_i18n.tu)('in_BTC'),\":\"),_react2.default.createElement(\"td\",null,priceBTC)))),_react2.default.createElement(\"div\",{style:{fontSize:12,color:'#999',whiteSpace:'nowrap',textAlign:'left',padding:'0.75rem',borderTop:'1px solid #DFD7CA',verticalAlign:'top'}},_react2.default.createElement(\"div\",{style:{transform:'scale(.9)',marginLeft:'-1.3rem'}},\"*\",(0,_i18n.tu)('supply_notes'))))),_react2.default.createElement(\"div\",{className:\"col-md-7\",style:{backgroundColor:'#F5F5F5',marginTop:0,paddingBottom:15}},_react2.default.createElement(\"div\",{className:\"main-counters row\"},_react2.default.createElement(\"div\",{className:\"counters col-md-6 col-sm-6\"},_react2.default.createElement(\"span\",{className:\"counter\"},_react2.default.createElement(_reactCountup2.default,{start:0,end:currentTotalSupply,duration:2,separator:\",\",decimals:2})),_react2.default.createElement(\"h4\",null,(0,_i18n.tu)('total_TRX_supply'))),_react2.default.createElement(\"div\",{className:\"counters col-md-6 col-sm-6\"},_react2.default.createElement(\"span\",{className:\"counter\"},\"$\",_react2.default.createElement(_reactCountup2.default,{start:0,end:marketCapitalization,duration:2,separator:\",\",decimals:2})),_react2.default.createElement(\"h4\",null,(0,_i18n.tu)('market_capitalization')))),_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(_RingPieChart.SupplyTypesTRXPieChart,{message:{id:'breakdown_supply_types'},intl:intl,data:supplyTypesChart,style:{height:400},source:\"singleChart\"})))))))),match.params.chartName==='txOverviewStats'&&_react2.default.createElement(\"div\",{style:{marginTop:20,float:'right'}},_react2.default.createElement(\"i\",{size:\"1\",style:{fontStyle:'normal'}},\"[ Download \",_react2.default.createElement(\"a\",{href:uploadURL,style:{color:'#C23631'}},_react2.default.createElement(\"b\",null,\"CSV Export\")),\"\\xA0\",_react2.default.createElement(\"span\",{className:\"glyphicon glyphicon-download-alt\"}),\" ]\"),\"\\xA0\"))));}}]);return Statistics;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)((0,_reactIntl.injectIntl)(Statistics));\n\n/***/ }),\n\n/***/ 1220:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(10);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1221:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(13);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(150);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(9);\n\nvar _listComponent = __webpack_require__(422);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1395:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.SupplyTypesTRXPieChart=exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(12);var _reactIntl=__webpack_require__(11);var _chartConfig=__webpack_require__(226);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(421);__webpack_require__(227);__webpack_require__(228);__webpack_require__(1396);__webpack_require__(1399);__webpack_require__(1400);__webpack_require__(1401);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;if(data.length){for(var index in data){if(data[index].name.indexOf(\"http://\")>-1){data[index].name=data[index].name.substring(7).split('.com')[0];}}}var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){var seriesCenter=['50%','50%'];_chartConfig2.default.representPieChart.series[0].center=seriesCenter;_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{var _seriesCenter=['50%','60%'];_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var _index3 in data){if(temp.indexOf(data[_index3].name)<0){temp.push(data[_index3].name);exchanges.push({name:data[_index3].name,value:data[_index3].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);var SupplyTypesTRXPieChart=exports.SupplyTypesTRXPieChart=function(_React$Component3){_inherits(SupplyTypesTRXPieChart,_React$Component3);function SupplyTypesTRXPieChart(props){_classCallCheck(this,SupplyTypesTRXPieChart);var _this3=_possibleConstructorReturn(this,(SupplyTypesTRXPieChart.__proto__||Object.getPrototypeOf(SupplyTypesTRXPieChart)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this3.state={pieId:'ringPie'+id};return _this3;}_createClass(SupplyTypesTRXPieChart,[{key:\"initPie\",value:function initPie(id){var _props3=this.props,intl=_props3.intl,data=_props3.data,message=_props3.message,source=_props3.source;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.supplyTypesTRXPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=[];_chartConfig2.default.supplyTypesTRXPieChart.legend.data=[];_chartConfig2.default.supplyTypesTRXPieChart.title.link='#/blockchain/stats/supply';_chartConfig2.default.supplyTypesTRXPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:datas.name})+' ('+intl.formatNumber(datas.value)+' TRX'+')<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){var seriesCenter=['50%','50%'];_chartConfig2.default.supplyTypesTRXPieChart.legend.show=true;_chartConfig2.default.supplyTypesTRXPieChart.series[0].center=seriesCenter;_chartConfig2.default.supplyTypesTRXPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}else{var _seriesCenter2=['50%','60%'];_chartConfig2.default.supplyTypesTRXPieChart.legend.show=false;_chartConfig2.default.supplyTypesTRXPieChart.series[0].center=_seriesCenter2;_chartConfig2.default.supplyTypesTRXPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var index in data){if(temp.indexOf(data[index].name)<0){temp.push(intl.formatMessage({id:data[index].name}));exchanges.push({name:intl.formatMessage({id:data[index].name}),value:data[index].value,selected:data[index].selected});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=[];_chartConfig2.default.supplyTypesTRXPieChart.legend.data=temp;_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.supplyTypesTRXPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.supplyTypesTRXPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return SupplyTypesTRXPieChart;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1396:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1220);\n\n__webpack_require__(1397);\n\n__webpack_require__(1221);\n\nvar legendFilter = __webpack_require__(1398);\n\nvar Component = __webpack_require__(50);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1397:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1398:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1399:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1220);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1400:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(9);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1221);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1401:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1484:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var tronAddresses=exports.tronAddresses=['27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS','27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj','27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx','27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3'];\n\n/***/ }),\n\n/***/ 1485:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.LineReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(12);var _reactIntl=__webpack_require__(11);var _chartConfig=__webpack_require__(226);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(430);__webpack_require__(227);__webpack_require__(228);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LineReact=exports.LineReact=function(_React$Component){_inherits(LineReact,_React$Component);function LineReact(props){_classCallCheck(this,LineReact);var _this=_possibleConstructorReturn(this,(LineReact.__proto__||Object.getPrototypeOf(LineReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={lineId:'line'+id};return _this;}_createClass(LineReact,[{key:\"initLine\",value:function initLine(id){var _props=this.props,intl=_props.intl,keysData=_props.keysData,data=_props.data,format=_props.format,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.lineChart.title.text=intl.formatMessage({id:message.id});if(message.href)_chartConfig2.default.lineChart.title.link='#/blockchain/stats/'+message.href;_chartConfig2.default.lineChart.xAxis.data=[];_chartConfig2.default.lineChart.series[0].data=[];if(data&&data.length>0){data.map(function(val){if(format&&format[keysData[0]]){if(format.date){_chartConfig2.default.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]]*1000));}else{if((val[keysData[0]]+\"\").length===10)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]*1000));if((val[keysData[0]]+\"\").length===13)_chartConfig2.default.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));}}else{_chartConfig2.default.lineChart.xAxis.data.push(val[keysData[0]]);}_chartConfig2.default.lineChart.series[0].data.push(val[keysData[1]]);});}if(data&&data.length===0){_chartConfig2.default.lineChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.lineChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initLine(this.state.lineId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initLine(this.state.lineId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.lineId,style:this.props.style}));}}]);return LineReact;}(_react2.default.Component);function mapStateToProps(state){return{};}var mapDispatchToProps={};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(LineReact));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/SingleStats.ab4966c1.chunk.js","import React from \"react\";\nimport xhr from \"axios/index\";\nimport {Client} from \"../../../services/api\";\nimport {ONE_TRX} from \"../../../constants\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport {filter, includes} from \"lodash\";\nimport {tronAddresses} from \"../../../utils/tron\";\nimport {TronLoader} from \"../../common/loaders\";\nimport PieReact from \"../../common/PieChart\";\nimport LineReact from \"../../common/LineChart\";\nimport {cloneDeep} from \"lodash\";\nimport {tu} from \"../../../utils/i18n\";\nimport CountUp from 'react-countup';\nimport {Link} from \"react-router-dom\"\n\nimport {\n    LineReactAdd,\n    LineReactBlockSize,\n    LineReactBlockchainSize,\n    LineReactTx,\n    LineReactPrice,\n    LineReactVolumeUsd,\n    LineReactHighChartAdd\n} from \"../../common/LineCharts\";\n\nimport {\n    RepresentativesRingPieReact,\n    SupplyTypesTRXPieChart\n} from \"../../common/RingPieChart\";\n\nimport {loadPriceData} from \"../../../actions/markets\";\nimport {t} from \"../../../utils/i18n\";\n\nclass Statistics extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            accounts: null,\n            transactionStats: null,\n            blockStats: null,\n            transactionValueStats: null,\n            txOverviewStats: null,\n            addressesStats: null,\n            blockSizeStats: null,\n            blockchainSizeStats: null,\n            priceStats: null,\n            volumeStats: null,\n            summit: null,\n            pieChart: null,\n            supplyTypesChart: null,\n            genesisNum:null,\n            blockProduceRewardsNum:null,\n            nodeRewardsNum:null,\n            independenceDayBurned:null,\n            feeBurnedNum:null,\n            currentTotalSupply:null,\n            priceUSD:null,\n            priceBTC:null,\n            marketCapitalization:null,\n            foundationFreeze:null,\n            circulatingNum:null\n        };\n    }\n\n    componentDidMount() {\n        let {match} = this.props;\n        this.loadAccounts();\n        this.loadStats();\n\n        let chartName = match.params.chartName;\n        switch (chartName){\n            case 'supply':\n                this.loadTotalTRXSupply();\n                setInterval(() => {\n                    this.loadTotalTRXSupply();\n                }, 15000);\n            break;\n            case 'pieChart':\n                this.loadPieChart();\n            break;\n            case 'volumeStats':\n                this.loadVolume();\n            break;\n            case 'priceStats':\n                this.loadPriceStats();\n            break;\n            case 'accounts':\n                this.loadAccounts();\n            break;\n            default:\n                this.loadTxOverviewStats();\n            break;\n        }\n    }\n\n    compare (property) {\n        return function (obj1, obj2) {\n            if (obj1[property] > obj2[property]) {\n                return 1;\n            } else if (obj1[property] < obj2[property]) {\n                return -1;\n            } else {\n                return 0;\n            }\n        }\n    }\n\n    async loadAccounts() {\n        // let {accounts} = await Client.getAccounts({\n        //     limit: 35,\n        //     sort: '-balance',\n        // });\n        let accountData = await xhr.get(\"https://assistapi.tronscan.org/api/account?limit=35&sort=-balance\");\n        let accounts = accountData.data;\n        this.setState({\n            accounts: filter(accounts, account => !includes(tronAddresses, account.address))\n                .slice(0, 10)\n                .map(account => ({\n                    name: account.address,\n                    value: account.balance / ONE_TRX,\n                }))\n        });\n    }\n\n\n    async loadStats() {\n\n        let {stats} = await Client.getTransferStats({\n            groupby: 'timestamp',\n            interval: 'hour',\n        });\n\n        let {stats: blockStats} = await Client.getBlockStats({\n            info: `avg-block-size`,\n        });\n\n        let transactionTotalStats = stats.total.map(row => ({\n            timestamp: row.timestamp,\n            value: row.value,\n        }));\n\n        let valueStats = stats.value.map(row => ({\n            timestamp: row.timestamp,\n            value: row.value / ONE_TRX,\n        }));\n\n        blockStats = blockStats.map(row => ({\n            timestamp: row.timestamp,\n            value: row.value,\n        }));\n\n        this.setState({\n            transactionStats: transactionTotalStats,\n            transactionValueStats: valueStats,\n            blockStats,\n        });\n    }\n    async loadTotalTRXSupply(){\n        let {intl} = this.props;\n        let random = Math.random();\n        let balanceData = await xhr.get(\"https://server.tron.network/api/v2/node/balance_info?random=\" + random);\n        let TRONFoundationTotal = balanceData.data.total;\n        let {blocks} = await Client.getBlocks({\n            limit: 1,\n            sort: '-number',\n        });\n        let blockHeight = blocks[0] ? blocks[0].number : 0;\n        let nodeRewardsNum = blockHeight * 16;\n        let blockProduceRewardsNum = blockHeight * 32;\n        let address = await Client.getAddress('TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy');\n        let startFeeBurnedNum = Math.abs(-9223372036854.775808)\n        let feeBurnedNum = (startFeeBurnedNum - Math.abs(address.balance / ONE_TRX)).toFixed(2);\n        let genesisNum = 100000000000;\n        let independenceDayBurned = 1000000000;\n        let currentTotalSupply = genesisNum + blockProduceRewardsNum + nodeRewardsNum - independenceDayBurned - feeBurnedNum;\n        let circulatingNum = (currentTotalSupply  - TRONFoundationTotal).toFixed(2);\n        let supplyTypesChartData = [\n            {value: TRONFoundationTotal, name: 'foundation_freeze', selected: true},\n            {value: circulatingNum, name: 'circulating_supply', selected: true},\n        ]\n        let trxPriceData = await xhr.get(`https://api.coinmarketcap.com/v1/ticker/tronix/?convert=EUR`);\n        let priceUSD = ((parseFloat(trxPriceData.data[0].price_usd))*1000).toFixed(2);\n        let priceBTC = ((parseFloat(trxPriceData.data[0].price_btc))*1000).toFixed(5);\n        let marketCapitalization = ((parseFloat(trxPriceData.data[0].price_usd)*currentTotalSupply)).toFixed(2);\n        this.setState({\n            supplyTypesChart: supplyTypesChartData,\n            genesisNum:intl.formatNumber(genesisNum),\n            blockProduceRewardsNum:intl.formatNumber(blockProduceRewardsNum),\n            nodeRewardsNum:intl.formatNumber(nodeRewardsNum),\n            independenceDayBurned:intl.formatNumber(independenceDayBurned),\n            feeBurnedNum:intl.formatNumber(feeBurnedNum),\n            currentTotalSupply:currentTotalSupply,\n            priceUSD:priceUSD,\n            priceBTC:priceBTC,\n            marketCapitalization:marketCapitalization,\n            foundationFreeze:intl.formatNumber(TRONFoundationTotal),\n            circulatingNum:intl.formatNumber(circulatingNum)\n        });\n    }\n    async loadPieChart(){\n        let {intl} = this.props;\n        let {statisticData} = await Client.getStatisticData()\n        let pieChartData = [];\n        if (statisticData.length > 0) {\n            statisticData.map((val, i) => {\n                pieChartData.push({\n                    key: i + 1,\n                    name: val.name ? val.name : val.url,\n                    volumeValue: intl.formatNumber(val.blockProduced),\n                    volumePercentage: intl.formatNumber(val.percentage * 100, {\n                        maximumFractionDigits: 2,\n                        minimumFractionDigits: 2\n                    }) + '%',\n                });\n\n            })\n        }\n        this.setState({\n            pieChart: pieChartData\n        });\n    }\n\n    async loadVolume(){\n        let {intl} = this.props;\n        let volumeData = await xhr.get(\"https://server.tron.network/api/v2/node/market_data\");\n        let volumeUSD = volumeData.data.market_cap_by_available_supply\n\n        let volume = volumeUSD.map(function (v, i) {\n            return {\n                time: v[0],\n                volume_billion: v[1] / Math.pow(10, 9),\n                volume_usd: intl.formatNumber(v[1]) + ' USD',\n                volume_usd_num: v[1]\n            }\n        })\n        this.setState({\n            volumeStats: volume\n        });\n        let higest = {date: '', increment: ''};\n        let lowest = {date: '', increment: ''};\n        let vo = cloneDeep(volume).sort(this.compare('volume_usd_num'));\n        for (let v in vo) {\n            vo[v] = {date: vo[v].time, ...vo[v]};\n        }\n        this.setState({\n            summit: {\n                volumeStats_sort: [\n                    {\n                        date: vo[vo.length - 1].time,\n                        increment: vo[vo.length - 1].volume_usd_num\n                    },\n                    {\n                        date: vo[0].time,\n                        increment: vo[0].volume_usd_num\n                    }],\n            }\n        });\n    }\n    async loadPriceStats(){\n        let {intl} = this.props;\n        let today = new Date();\n        let timerToday = today.getTime();\n        let birthday = new Date(\"2017/10/10\");\n        let timerBirthday = birthday.getTime();\n        let dayNum = Math.floor((timerToday - timerBirthday) / 1000 / 3600 / 24);\n        let {data} = await xhr.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\" + dayNum);\n        let priceStatsTemp = data['Data'];\n        this.setState({\n            priceStats: priceStatsTemp\n        });\n        let higest = {date: '', increment: ''};\n        let lowest = {date: '', increment: ''};\n        let pr = cloneDeep(priceStatsTemp).sort(this.compare('close'));\n        for (let p in pr) {\n            pr[p] = {date: pr[p].time, ...pr[p]};\n        }\n        this.setState({\n            summit: {\n                priceStats_sort: [\n                    {\n                        date: pr[pr.length - 1].time * 1000,\n                        increment: pr[pr.length - 1].close\n                    },\n                    {\n                        date: pr[0].time * 1000,\n                        increment: pr[0].close\n                    }],\n\n            }\n        });\n    }\n\n\n    async loadTxOverviewStats() {\n        // let {txOverviewStats} = await Client.getTxOverviewStats();\n        let overviewData = await xhr.get(\"https://assistapi.tronscan.org/api/stats/overview\");\n        let txOverviewStats = overviewData.data.data;\n        let temp = [];\n        let addressesTemp = [];\n        let blockSizeStatsTemp = [];\n        let blockchainSizeStatsTemp = [];\n        for (let txs in txOverviewStats) {\n            let tx = parseInt(txs);\n            if (tx === 0) {\n                temp.push(txOverviewStats[tx]);\n                addressesTemp.push({\n                    date: txOverviewStats[tx].date,\n                    total: txOverviewStats[tx].newAddressSeen,\n                    increment: txOverviewStats[tx].newAddressSeen\n                });\n            }\n            else {\n                temp.push({\n                    date: txOverviewStats[tx].date,\n                    totalTransaction: (txOverviewStats[tx].totalTransaction - txOverviewStats[tx - 1].totalTransaction),\n                    avgBlockTime: txOverviewStats[tx].avgBlockTime,\n                    avgBlockSize: txOverviewStats[tx].avgBlockSize,\n                    totalBlockCount: (txOverviewStats[tx].totalBlockCount - txOverviewStats[tx - 1].totalBlockCount),\n                    newAddressSeen: txOverviewStats[tx].newAddressSeen\n                });\n                addressesTemp.push({\n                    date: txOverviewStats[tx].date,\n                    total: txOverviewStats[tx].newAddressSeen + addressesTemp[tx - 1].total,\n                    increment: txOverviewStats[tx].newAddressSeen\n                });\n            }\n            blockSizeStatsTemp.push({\n                date: txOverviewStats[tx].date,\n                avgBlockSize: txOverviewStats[tx].avgBlockSize\n            });\n            blockchainSizeStatsTemp.push({\n                date: txOverviewStats[tx].date,\n                blockchainSize: txOverviewStats[tx].blockchainSize\n            });\n        }\n\n        this.setState({\n            txOverviewStats: temp,\n            addressesStats: addressesTemp,\n            blockSizeStats: blockSizeStatsTemp,\n            blockchainSizeStats: blockchainSizeStatsTemp,\n\n        });\n\n        function compare (property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        let higest = {date: '', increment: ''};\n        let lowest = {date: '', increment: ''};\n        let addr = cloneDeep(addressesTemp).sort(compare('increment'));\n        let tx = cloneDeep(temp).sort(compare('totalTransaction'));\n        let bs = cloneDeep(blockSizeStatsTemp).sort(compare('avgBlockSize'));\n        let _bcs = [];\n\n        for (let b in blockchainSizeStatsTemp) {\n            let _b = parseInt(b);\n            if (_b === 0) {\n                _bcs.push({\n                    date: blockchainSizeStatsTemp[0].date,\n                    blockchainSize: blockchainSizeStatsTemp[0].blockchainSize / 1000000\n                });\n            }\n            else {\n                _bcs.push({\n                    date: blockchainSizeStatsTemp[_b].date,\n                    blockchainSize: (blockchainSizeStatsTemp[_b].blockchainSize - blockchainSizeStatsTemp[_b - 1].blockchainSize) / 1000000\n                })\n            }\n        }\n        let bcs = _bcs.sort(compare('blockchainSize'));\n\n        this.setState({\n            summit: {\n                addressesStats_sort: [\n                    {\n                        date: addr[addr.length - 1].date,\n                        increment: addr[addr.length - 1].increment\n                    },\n                    {\n                        date: addr[0].date,\n                        increment: addr[0].increment\n                    }],\n                txOverviewStats_sort: [\n                    {\n                        date: tx[tx.length - 1].date,\n                        increment: tx[tx.length - 1].totalTransaction\n                    },\n                    {\n                        date: tx[0].date,\n                        increment: tx[0].totalTransaction\n                    }],\n                blockSizeStats_sort: [\n                    {\n                        date: bs[bs.length - 1].date,\n                        increment: bs[bs.length - 1].avgBlockSize\n                    },\n                    {\n                        date: bs[0].date,\n                        increment: bs[0].avgBlockSize\n                    }],\n                blockchainSizeStats_sort: [\n                    {\n                        date: bcs[bcs.length - 1].date,\n                        increment: bcs[bcs.length - 1].blockchainSize\n                    },\n                    {\n                        date: bcs[0].date,\n                        increment: bcs[0].blockchainSize\n                    }],\n\n\n            }\n        });\n    }\n\n\n    render() {\n        let {match, intl} = this.props;\n        let {txOverviewStats, addressesStats, blockSizeStats, blockchainSizeStats, priceStats, transactionStats, transactionValueStats, blockStats, accounts, volumeStats, pieChart, supplyTypesChart, summit,genesisNum,blockProduceRewardsNum,nodeRewardsNum,independenceDayBurned,feeBurnedNum,currentTotalSupply,priceUSD,priceBTC,marketCapitalization,foundationFreeze,circulatingNum} = this.state;\n        let unit;\n        let uploadURL = \"http://server.tron.network/api/v2/node/overview_upload\";\n        if (match.params.chartName === 'blockchainSizeStats' || match.params.chartName === 'addressesStats') {\n            unit = 'increase';\n        } else {\n            unit = 'number';\n        }\n        return (\n            <main className=\"container header-overlap\">\n                {\n                    match.params.chartName != 'pieChart' && match.params.chartName != 'supply' ?\n                        <div className=\"alert alert-light\" role=\"alert\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6 text-center\">\n                                    {\n                                        summit && summit[match.params.chartName + '_sort'] &&\n                                        <span>{t('highest')}{t(unit)}{t('_of')}\n                                            <strong>{' ' + summit[match.params.chartName + '_sort'][0].increment + ' '}</strong>\n                                            {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][0].date)}\n                            </span>\n                                    }\n                                </div>\n                                <div className=\"col-md-6 text-center\">\n                                    {\n                                        summit && summit[match.params.chartName + '_sort'] &&\n                                        <span>{t('lowest')}{t(unit)}{t('_of')}\n                                            <strong>{' ' + summit[match.params.chartName + '_sort'][1].increment + ' '}</strong>\n                                            {t('was_recorded_on')} {intl.formatDate(summit[match.params.chartName + '_sort'][1].date)}\n                            </span>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        : null\n                }\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                {\n                                    match.params.chartName === 'txOverviewStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            txOverviewStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactTx source='singleChart' style={{height: 500}}\n                                                             data={txOverviewStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'addressesStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            addressesStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactAdd source='singleChart' style={{height: 500}} data={addressesStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'blockSizeStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            blockSizeStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactBlockSize source='singleChart' style={{height: 500}}\n                                                                    data={blockSizeStats}\n                                                                    intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'blockchainSizeStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            blockchainSizeStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactBlockchainSize source='singleChart' style={{height: 500}}\n                                                                         data={blockchainSizeStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'priceStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            priceStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactPrice source='singleChart' style={{height: 500}}\n                                                                data={priceStats} intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'accounts' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            accounts === null ?\n                                                <TronLoader/> :\n                                                <PieReact style={{height: 500}} data={accounts}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'transactionValueStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            transactionValueStats === null ?\n                                                <TronLoader/> :\n                                                <LineReact message={{\n                                                    id: 'trx_transferred_past_hour',\n                                                    href: 'transactionValueStats'\n                                                }}\n                                                           style={{height: 500}} data={transactionValueStats}\n                                                           keysData={['timestamp', 'value']}\n                                                           format={{timestamp: true}}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'transactionStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            transactionStats === null ?\n                                                <TronLoader/> :\n                                                <LineReact\n                                                    message={{id: 'transactions_past_hour', href: 'transactionStats'}}\n                                                    style={{height: 500}} data={transactionStats}\n                                                    keysData={['timestamp', 'value']}\n                                                    format={{timestamp: true}}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'blockStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            blockStats === null ?\n                                                <TronLoader/> :\n                                                <LineReact message={{id: 'average_blocksize', href: 'blockStats'}}\n                                                           style={{height: 500}} data={blockStats}\n                                                           keysData={['timestamp', 'value']}\n                                                           format={{timestamp: true}}/>\n                                        }\n                                    </div>\n                                }\n                                {\n                                    match.params.chartName === 'volumeStats' &&\n                                    <div style={{height: 500}}>\n                                        {\n                                            volumeStats === null ?\n                                                <TronLoader/> :\n                                                <LineReactVolumeUsd source='singleChart'\n                                                                    style={{height: 500}}\n                                                                    data={volumeStats}\n                                                                    intl={intl}/>\n                                        }\n                                    </div>\n                                }\n                                {\n\n                                    match.params.chartName === 'pieChart' &&\n                                    <div>\n                                        {\n                                            pieChart === null ?\n                                                <TronLoader/> :\n                                                <RepresentativesRingPieReact source='singleChart'\n                                                                             message={{id: 'produce_distribution'}}\n                                                                             intl={intl}\n                                                                             data={pieChart}\n                                                                             style={{height: 500}}/>\n\n                                        }\n                                    </div>\n\n                                }\n                                {\n                                    match.params.chartName === 'supply' &&\n                                    <div>\n                                        {\n                                            supplyTypesChart === null ?\n                                                <TronLoader/> :\n                                                <div className=\"row\" style={{fontSize : 12,marginRight:0}}>\n                                                    <div className=\"col-md-5\">\n                                                        <div className=\"table-responsive\">\n                                                            <table className=\"table\" style={{marginTop : 10}}>\n                                                            <thead>\n                                                            <tr>\n                                                                <th style={{border:0}}>\n                                                                    <i className=\"fa fa-puzzle-piece\" ></i>\n                                                                    <span style={{marginTop:2}}>{tu('TRX_distribution_overview')}</span>\n                                                                </th>\n                                                            </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                            <tr>\n                                                                <td>\n                                                                    {tu('genesis')}:\n                                                                </td>\n                                                                <td>\n                                                                    {genesisNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>+  {tu('block_produce_rewards')}:\n                                                                </td>\n                                                                <td>\n                                                                    {blockProduceRewardsNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>+ {tu('node_rewards')}:\n                                                                </td>\n                                                                <td>\n                                                                    {nodeRewardsNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>- {tu('independence_day_burned')}:\n                                                                </td>\n                                                                <td>\n                                                                    {independenceDayBurned} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>- {tu('fee_burned')}:\n                                                                </td>\n                                                                <td>\n                                                                    {feeBurnedNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>= <b>{tu('current_total_supply')}:</b><br/>\n                                                                </td>\n                                                                <td>\n                                                                    <b>{intl.formatNumber(currentTotalSupply)} TRX</b>\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td style={{color:'red'}} className=\"go-foundation\">\n                                                                    <Link to=\"/blockchain/foundation\" style={{color:'red',}}>{tu(\"foundation_freeze\")}</Link>\n                                                                </td>\n                                                                <td>\n                                                                    {foundationFreeze} TRX\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td>{tu('circulating_supply')}:\n                                                                </td>\n                                                                <td>\n                                                                    {circulatingNum} TRX\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                        </table>\n                                                        </div>\n                                                        <br/>\n                                                        <div className=\"table-responsive\">\n                                                            <table className=\"table\" style={{marginBottom:0}}>\n                                                                <thead>\n                                                                <tr>\n                                                                    <th style={{border:0}}><br/><i className=\"fa fa-coins\" ></i> {tu('price_per_1000_trx')}</th>\n                                                                </tr>\n                                                                </thead>\n                                                                <tbody><tr>\n                                                                    <td>{tu('in_USD')}:\n                                                                    </td>\n                                                                    <td>\n                                                                        ${priceUSD}\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td>{tu('in_BTC')}:\n                                                                    </td>\n                                                                    <td>\n                                                                        {priceBTC}\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody></table>\n                                                                <div style={{fontSize:12,color:'#999',whiteSpace: 'nowrap',textAlign:'left', padding: '0.75rem',borderTop: '1px solid #DFD7CA',verticalAlign: 'top'}}>\n                                                                    <div style={{transform:'scale(.9)',marginLeft: '-1.3rem'}}>\n                                                                        *{tu('supply_notes')}\n                                                                    </div>\n                                                                </div>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"col-md-7\" style={{backgroundColor: '#F5F5F5',marginTop:0,paddingBottom:15}}>\n                                                        <div className=\"main-counters row\">\n                                                            <div className=\"counters col-md-6 col-sm-6\">\n                                                                <span className=\"counter\">\n                                                                    <CountUp start={0} end={currentTotalSupply} duration={2}  separator=\",\" decimals={2} />\n                                                                </span>\n                                                                <h4>{tu('total_TRX_supply')}</h4>\n                                                            </div>\n                                                            <div className=\"counters col-md-6 col-sm-6\">\n                                                                <span className=\"counter\">\n                                                                    $<CountUp start={0} end={marketCapitalization} duration={2}  separator=\",\" decimals={2}/>\n                                                                </span>\n                                                                <h4>{tu('market_capitalization')}</h4>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"card\">\n                                                            <div className=\"card-body\">\n                                                                <SupplyTypesTRXPieChart\n                                                                    message={{id: 'breakdown_supply_types'}}\n                                                                    intl={intl}\n                                                                    data={supplyTypesChart}\n                                                                    style={{height: 400}}\n                                                                    source='singleChart'\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            }\n                                    </div>\n\n                                }\n                            </div>\n\n                        </div>\n                        {\n                            match.params.chartName === 'txOverviewStats' &&\n                            <div style={{marginTop:20,float:'right'}}><i size=\"1\" style={{fontStyle: 'normal'}}>[ Download <a href={uploadURL} style={{color: '#C23631'}}><b>CSV Export</b></a>&nbsp;<span className=\"glyphicon glyphicon-download-alt\"></span> ]</i>&nbsp;</div>\n                        }\n\n                    </div>\n                </div>\n\n            </main>\n        );\n    }\n}\n\n\nfunction\n\nmapStateToProps(state) {\n    return {\n        priceGraph: state.markets.price\n    };\n}\n\nconst\n    mapDispatchToProps = {\n        loadPriceData,\n    };\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n\n(\n    injectIntl(Statistics)\n)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blockchain/Statistics/SingleChart.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1220\n// module chunks = 3 11 12 13","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1221\n// module chunks = 3 11 12 13","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text = intl.formatMessage({id: message.id}) + ' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if (data && data.length === 0) {\n      config.ringPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message, source} = this.props;\n    if (data.length) {\n      for (let index in data) {\n        if (data[index].name.indexOf(\"http://\") > -1) {\n          data[index].name = data[index].name.substring(7).split('.com')[0];\n        }\n      }\n    }\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.representPieChart.title.text = intl.formatMessage({id: message.id});\n    config.representPieChart.series[0].data = [];\n    config.representPieChart.legend.data = [];\n    config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n    config.representPieChart.tooltip.formatter = function (datas) {\n      return (\n          intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n          intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n          intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n      )\n\n    }\n    if (source === 'singleChart') {\n      let seriesCenter = ['50%', '50%'];\n      config.representPieChart.series[0].center = seriesCenter;\n      config.representPieChart.legend.show = true;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: true,\n          title: 'save'\n        }\n      }\n    } else {\n      let seriesCenter = ['50%', '60%'];\n      config.representPieChart.legend.show = false;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          show: false,\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: false,\n          title: 'save'\n        }\n      }\n    }\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let exchanges = []\n      let temp = [];\n      for (let index in data) {\n        if (temp.indexOf(data[index].name) < 0) {\n          temp.push(data[index].name)\n          exchanges.push({name: data[index].name, value: data[index].volumeValue});\n        }\n      }\n\n      exchanges.sort(compare(\"value\")).reverse();\n      config.representPieChart.series[0].data = [];\n      config.representPieChart.legend.data = temp;\n      config.representPieChart.series[0].data = exchanges;\n\n    }\n    if (data && data.length === 0) {\n      config.representPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.representPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\n\n\nexport class SupplyTypesTRXPieChart extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let id = ('_' + Math.random()).replace('.', '_');\n        this.state = {\n            pieId: 'ringPie' + id\n        }\n    }\n\n    initPie(id) {\n        let {intl, data,message,source} = this.props;\n        let myChart = echarts.getInstanceByDom(document.getElementById(id));\n        if (myChart === undefined) {\n            myChart = echarts.init(document.getElementById(id));\n        }\n        config.supplyTypesTRXPieChart.title.text=intl.formatMessage({id:message.id});\n        config.supplyTypesTRXPieChart.series[0].data = [];\n        config.supplyTypesTRXPieChart.legend.data = [];\n        config.supplyTypesTRXPieChart.title.link = '#/blockchain/stats/supply';\n        config.supplyTypesTRXPieChart.tooltip.formatter = function (datas) {\n            return (\n                intl.formatMessage({id: datas.name}) + ' (' + intl.formatNumber(datas.value) + ' TRX' + ')<br/>' +\n                intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n            )\n        }\n        if(source==='singleChart'){\n            let seriesCenter = ['50%', '50%'];\n            config.supplyTypesTRXPieChart.legend.show = true;\n            config.supplyTypesTRXPieChart.series[0].center = seriesCenter;\n            config.supplyTypesTRXPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }else{\n            let seriesCenter = ['50%', '60%'];\n            config.supplyTypesTRXPieChart.legend.show = false;\n            config.supplyTypesTRXPieChart.series[0].center = seriesCenter;\n            config.supplyTypesTRXPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        if (data && data.length > 0) {\n            let exchanges = []\n            let temp = [];\n            for (let index in data) {\n                if (temp.indexOf(data[index].name) < 0) {\n                    temp.push(intl.formatMessage({id: data[index].name}) )\n                    exchanges.push({name: intl.formatMessage({id: data[index].name}), value: data[index].value,selected:data[index].selected});\n                }\n            }\n\n            exchanges.sort(compare(\"value\")).reverse();\n            config.supplyTypesTRXPieChart.series[0].data = [];\n            config.supplyTypesTRXPieChart.legend.data = temp;\n            config.supplyTypesTRXPieChart.series[0].data = exchanges;\n\n        }\n        if(data && data.length===0){\n            config.supplyTypesTRXPieChart.title.text=\"No data\";\n        }\n        myChart.setOption(config.supplyTypesTRXPieChart);\n    }\n\n\n    componentDidMount() {\n        this.initPie(this.state.pieId);\n    }\n\n    componentDidUpdate() {\n        this.initPie(this.state.pieId);\n    }\n\n    render() {\n        return (\n            <div>\n                <div id={this.state.pieId} style={this.props.style}></div>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1396\n// module chunks = 3 11 12 13","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1397\n// module chunks = 3 11 12 13","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1398\n// module chunks = 3 11 12 13","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1399\n// module chunks = 3 11 12 13","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1400\n// module chunks = 3 11 12 13","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1401\n// module chunks = 3 11 12 13","\n\nexport const tronAddresses = [\n  '27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS',\n  '27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj',\n  '27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx',\n  '27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tron.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\n\n\nexport class LineReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      lineId: 'line' + id\n    }\n  }\n\n  initLine(id) {\n    let {intl, keysData, data, format, message} = this.props;\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n\n    config.lineChart.title.text = intl.formatMessage({id: message.id});\n    if(message.href)\n      config.lineChart.title.link = '#/blockchain/stats/' + message.href;\n    config.lineChart.xAxis.data = [];\n    config.lineChart.series[0].data = [];\n\n    if (data && data.length > 0) {\n      data.map((val) => {\n\n        if (format && format[keysData[0]]) {\n          if (format.date) {\n            config.lineChart.xAxis.data.push(intl.formatDate(val[keysData[0]] * 1000));\n          }\n          else {\n            if ((val[keysData[0]] + \"\").length === 10)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]] * 1000));\n            if ((val[keysData[0]] + \"\").length === 13)\n              config.lineChart.xAxis.data.push(intl.formatTime(val[keysData[0]]));\n          }\n        }\n        else {\n          config.lineChart.xAxis.data.push(val[keysData[0]]);\n        }\n        config.lineChart.series[0].data.push(val[keysData[1]]);\n      })\n    }\n\n    if (data && data.length === 0) {\n      config.lineChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.lineChart);\n\n  }\n\n  componentDidMount() {\n    this.initLine(this.state.lineId);\n  }\n\n  componentDidUpdate() {\n    this.initLine(this.state.lineId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.lineId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {}\n}\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(LineReact));\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/LineChart.js"],"sourceRoot":""}