{"version":3,"sources":["../static/js/Representatives.73d3a908.chunk.js","components/representatives/Representatives.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/Icon.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js"],"names":["webpackJsonp","1096","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Row","_ref","account","_ref$showSync","showSync","undefined","index","state","props","searchCriteria","candidates","voteList","_lodash","sortBy","c","votes","map","_extends","rank","filteredCandidates","filter","trim","url","toLowerCase","indexOf","name","length","totalVotes","sumBy","_react2","createElement","key","address","className","_Links","AddressLink","inSync","BlockNumberLink","number","latestBlockNumber","_reactIntl","FormattedNumber","producedTotal","missedTotal","producedTrx","_react","Fragment","maximumFractionDigits","minimunFractionDigits","productivity","minimumFractionDigits","mapStateToProps","witnesses","network","statisticData","voting","voteTimer","defineProperty","assign","target","i","arguments","source","hasOwnProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","_reactRedux","_network","_i18n","_loaders","_lodash2","_constants","_Icon","_RingPieChart","_votes","Representatives","_Component","this","_this","getPrototypeOf","loadVoteList","loadVoteTimer","loadWitnesses","loadStatisticData","_this2","w","isinSync","producer","concat","maxBlockNumber","maxBy","witness","intl","pieChartData","val","push","volumeValue","formatNumber","blockProduced","volumePercentage","percentage","_this3","TronLoader","tu","superRepresentatives","candidateRepresentatives","style","width","colSpan","getWitnesses","pieChart","getPiechart","productivityWitnesses","slice","SR_MAX_COUNT","mostProductive","leastProductive","WidgetIcon","bottom","height","RepresentativesRingPieReact","message","id","data","renderWitnesses","Component","mapDispatchToProps","connect","pure","injectIntl","1145","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","get","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","1146","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1154","_objectWithoutProperties","keys","1175","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","_chartConfig","_chartConfig2","_echarts","_echarts2","_React$Component","Math","random","pieId","compare","property","obj1","obj2","_props","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","sort","pairData","exchanges","temp","pair","volume","subCount","finalExchanges","finalPairData","apply","setOption","initPie","_React$Component2","_props2","substring","split","representPieChart","link","datas","percent","toolbox","feature","restore","saveAsImage","reverse","1176","legendFilter","registerProcessor","registerSubTypeDefaulter","1177","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1178","legendModels","findComponents","mainType","filterSeries","1179","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1180","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","setStyle","cursor","pageText","current","total","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","floor","winRect","startIdx","children","intersect","startItem","startRect","1181","subType","query"],"mappings":"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","file":"static/js/Representatives.73d3a908.chunk.js","sourcesContent":["webpackJsonp([9],{\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _network=__webpack_require__(425);var _i18n=__webpack_require__(10);var _loaders=__webpack_require__(26);var _reactIntl=__webpack_require__(14);var _lodash=__webpack_require__(18);var _lodash2=_interopRequireDefault(_lodash);var _Links=__webpack_require__(19);var _constants=__webpack_require__(36);var _Icon=__webpack_require__(1154);var _RingPieChart=__webpack_require__(1175);var _votes=__webpack_require__(426);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Representatives=function(_Component){_inherits(Representatives,_Component);function Representatives(){_classCallCheck(this,Representatives);var _this=_possibleConstructorReturn(this,(Representatives.__proto__||Object.getPrototypeOf(Representatives)).call(this));_this.state={searchCriteria:\"\"};return _this;}_createClass(Representatives,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.loadVoteList();this.props.loadVoteTimer();this.props.loadWitnesses();this.props.loadStatisticData();}},{key:\"getWitnesses\",value:function getWitnesses(){var _this2=this;var witnesses=this.props.witnesses;witnesses=witnesses.map(function(w){return _extends({},w,{inSync:_this2.isinSync(w),productivity:w.producedTotal/(w.producedTotal+w.missedTotal)*100});});return(0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return w.producer;}),function(w){return w.votes*-1;}).concat((0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return!w.producer;}),function(w){return w.votes*-1;})).map(function(w,index){return _extends({},w,{index:index});});}},{key:\"isinSync\",value:function isinSync(account){var witnesses=this.props.witnesses;var maxBlockNumber=(0,_lodash.maxBy)(witnesses,function(witness){return witness.latestBlockNumber;}).latestBlockNumber;return account.latestBlockNumber>maxBlockNumber-_constants.SR_MAX_COUNT;}},{key:\"getPiechart\",value:function getPiechart(){var intl=this.props.intl;var statisticData=this.props.statisticData;var pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}return pieChartData;}},{key:\"renderWitnesses\",value:function renderWitnesses(witnesses){var _this3=this;if(witnesses.length===0||this.props.voteList.length===0){return _react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(_loaders.TronLoader,null,(0,_i18n.tu)(\"loading_representatives\")));}var superRepresentatives=(0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return w.producer;}),function(w){return w.votes*-1;});var candidateRepresentatives=(0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return!w.producer;}),function(w){return w.votes*-1;});return _react2.default.createElement(\"div\",{className:\"card border-0\"},_react2.default.createElement(\"table\",{className:\"table table-hover table-striped bg-white m-0 sr\"},_react2.default.createElement(\"thead\",{className:\"thead-dark\"},_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{className:\"text-right d-none d-lg-table-cell\",style:{width:20}},\"#\"),_react2.default.createElement(\"th\",{style:{width:100}},(0,_i18n.tu)(\"name\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap\"},(0,_i18n.tu)(\"status\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-sm-table-cell\"},(0,_i18n.tu)(\"last_block\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-md-table-cell\"},(0,_i18n.tu)(\"blocks_produced\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-xl-table-cell\"},(0,_i18n.tu)(\"blocks_missed\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-xl-table-cell\"},(0,_i18n.tu)(\"transactions\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-xl-table-cell\"},(0,_i18n.tu)(\"productivity\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-xl-table-cell\"},(0,_i18n.tu)(\"votes\")))),_react2.default.createElement(\"tbody\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",{colSpan:\"9\",className:\"bg-danger text-white text-center font-weight-bold\"},(0,_i18n.tu)(\"Super Representatives\"))),superRepresentatives.map(function(account,index){return _react2.default.createElement(Row,{index:index,state:_this3.state,props:_this3.props,key:account.address,account:account});}),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",{colSpan:\"9\",className:\"bg-secondary text-white text-center font-weight-bold\"},(0,_i18n.tu)(\"Super Representative Candidates\"))),candidateRepresentatives.map(function(account,index){return _react2.default.createElement(Row,{index:index,state:_this3.state,props:_this3.props,key:account.address,account:account,showSync:false});}))));}},{key:\"render\",value:function render(){var intl=this.props.intl;var witnesses=this.getWitnesses();var pieChart=this.getPiechart();var productivityWitnesses=witnesses.slice(0,_constants.SR_MAX_COUNT);var mostProductive=(0,_lodash.sortBy)(productivityWitnesses,function(w){return w.productivity*-1;})[0];var leastProductive=(0,_lodash2.default)(productivityWitnesses).filter(function(w){return w.producedTotal>0;}).sortBy(function(w){return w.productivity;}).value()[0];return _react2.default.createElement(\"main\",{className:\"container header-overlap pb-3\"},_react2.default.createElement(\"div\",{className:witnesses.length===0||pieChart.length===0?'card':''},witnesses.length===0||pieChart.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(\"div\",{className:\"row \"},_react2.default.createElement(\"div\",{className:\"col-md-6\"},_react2.default.createElement(\"div\",{className:\"mt-3 mt-md-3\"},_react2.default.createElement(\"div\",{className:\"card h-100 widget-icon\"},_react2.default.createElement(_Icon.WidgetIcon,{className:\"fa fa-user-tie text-secondary\"}),_react2.default.createElement(\"div\",{className:\"card-body text-center\"},_react2.default.createElement(\"h3\",{className:\"text-primary\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:witnesses.length})),(0,_i18n.tu)(\"representatives\")))),_react2.default.createElement(\"div\",{className:\"mt-3 mt-md-3\"},_react2.default.createElement(\"div\",{className:\"card h-100\"},_react2.default.createElement(\"div\",{className:\"card-body text-center widget-icon\"},_react2.default.createElement(_Icon.WidgetIcon,{className:\"fa fa-arrow-up text-success\",style:{bottom:10}}),_react2.default.createElement(\"h3\",{className:\"text-success\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:mostProductive.productivity}),\"%\"),(0,_i18n.tu)(\"highest_productivity\"),_react2.default.createElement(\"br\",null),_react2.default.createElement(_Links.AddressLink,{address:mostProductive.address},mostProductive.name||mostProductive.url)))),_react2.default.createElement(\"div\",{className:\"mt-3 mt-md-3\"},_react2.default.createElement(\"div\",{className:\"card h-100 widget-icon\"},_react2.default.createElement(_Icon.WidgetIcon,{className:\"fa fa-arrow-down text-danger\",style:{bottom:10}}),_react2.default.createElement(\"div\",{className:\"card-body text-center\"},_react2.default.createElement(\"h3\",{className:\"text-danger\"},_react2.default.createElement(_reactIntl.FormattedNumber,{maximumFractionDigits:2,minimunFractionDigits:2,value:leastProductive.productivity}),\"%\"),(0,_i18n.tu)(\"lowest_productivity\"),_react2.default.createElement(\"br\",null),_react2.default.createElement(_Links.AddressLink,{address:leastProductive.address},leastProductive.name||leastProductive.url))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:330}},_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:300}}))))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},this.renderWitnesses(witnesses))));}}]);return Representatives;}(_react.Component);function Row(_ref){var account=_ref.account,_ref$showSync=_ref.showSync,showSync=_ref$showSync===undefined?true:_ref$showSync,index=_ref.index,state=_ref.state,props=_ref.props;var searchCriteria=state.searchCriteria;var candidates=props.voteList;candidates=(0,_lodash.sortBy)(candidates,function(c){return c.votes*-1;}).map(function(c,index){return _extends({},c,{rank:index});});var filteredCandidates=candidates;if(searchCriteria&&searchCriteria!==\"\"){filteredCandidates=(0,_lodash.filter)(candidates,function(c){if((0,_lodash.trim)(c.url.toLowerCase()).indexOf(searchCriteria.toLowerCase())!==-1){return true;}if(c.name.length>0&&(0,_lodash.trim)(c.name.toLowerCase()).indexOf(searchCriteria.toLowerCase())!==-1){return true;}return false;});}var totalVotes=(0,_lodash.sumBy)(candidates,function(c){return c.votes;});return _react2.default.createElement(\"tr\",{key:account.address},_react2.default.createElement(\"td\",{className:\"text-right d-none d-lg-table-cell\"},account.index+1),_react2.default.createElement(\"td\",null,account.name?_react2.default.createElement(\"div\",{className:\"_context_right_click\"},_react2.default.createElement(_Links.AddressLink,{address:account.address},account.name,_react2.default.createElement(\"br\",null),_react2.default.createElement(\"span\",{className:\"small text-muted\"},account.url))):_react2.default.createElement(\"div\",{className:\"_context_right_click\"},_react2.default.createElement(_Links.AddressLink,{address:account.address},account.url))),showSync?_react2.default.createElement(\"td\",{className:\"text-center\"},account.inSync?_react2.default.createElement(\"span\",{key:\"no\",className:\"text-success\"},_react2.default.createElement(\"i\",{className:\"fas fa-circle\"})):_react2.default.createElement(\"span\",{key:\"yes\",className:\"text-danger\"},_react2.default.createElement(\"i\",{className:\"fa fa-times\"}))):_react2.default.createElement(\"td\",null,\"\\xA0\"),_react2.default.createElement(\"td\",{className:\"text-right d-none d-sm-table-cell\"},_react2.default.createElement(_Links.BlockNumberLink,{number:account.latestBlockNumber})),_react2.default.createElement(\"td\",{className:\"text-right d-none d-md-table-cell\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:account.producedTotal})),_react2.default.createElement(\"td\",{className:\"text-right d-none d-xl-table-cell\"},account.missedTotal!==0?_react2.default.createElement(_reactIntl.FormattedNumber,{value:account.missedTotal}):'-'),_react2.default.createElement(\"td\",{className:\"text-right d-none d-xl-table-cell\"},account.producedTrx!==0?_react2.default.createElement(_reactIntl.FormattedNumber,{value:account.producedTrx}):'-'),_react2.default.createElement(\"td\",{className:\"text-right d-none d-xl-table-cell\"},account.producedTotal>0?_react2.default.createElement(_react.Fragment,null,_react2.default.createElement(_reactIntl.FormattedNumber,{maximumFractionDigits:2,minimunFractionDigits:2,value:account.productivity}),\"%\"):'-'),_react2.default.createElement(\"td\",{className:\"text-right d-none d-xl-table-cell\"},totalVotes>0&&_react2.default.createElement(_react.Fragment,null,_react2.default.createElement(_reactIntl.FormattedNumber,{value:filteredCandidates[index].votes}),_react2.default.createElement(\"br\",null),'(',_react2.default.createElement(_reactIntl.FormattedNumber,{minimumFractionDigits:2,maximumFractionDigits:2,value:filteredCandidates[index].votes/totalVotes*100}),\"%\",')')));}function mapStateToProps(state){return{witnesses:state.network.witnesses,statisticData:state.network.statisticData,voteList:state.voting.voteList,voteTimer:state.voting.voteTimer};}var mapDispatchToProps={loadWitnesses:_network.loadWitnesses,loadStatisticData:_network.loadStatisticData,loadVoteList:_votes.loadVoteList,loadVoteTimer:_votes.loadVoteTimer};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(Representatives));//export default connect(mapStateToProps, mapDispatchToProps)(Representatives)\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(9);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(12);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(147);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(8);\n\nvar _listComponent = __webpack_require__(414);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.WidgetIcon=WidgetIcon;var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function WidgetIcon(_ref){var className=_ref.className,props=_objectWithoutProperties(_ref,[\"className\"]);return _react2.default.createElement(\"span\",Object.assign({className:\"icon-big\"},props),_react2.default.createElement(\"i\",{className:\" fa-7x \"+className}));}\n\n/***/ }),\n\n/***/ 1175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _chartConfig=__webpack_require__(222);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(413);__webpack_require__(223);__webpack_require__(224);__webpack_require__(1176);__webpack_require__(1179);__webpack_require__(1180);__webpack_require__(1181);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;if(data.length){for(var index in data){if(data[index].name.indexOf(\"http://\")>-1){data[index].name=data[index].name.substring(7).split('.com')[0];}}}var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var _index3 in data){if(temp.indexOf(data[_index3].name)<0){temp.push(data[_index3].name);exchanges.push({name:data[_index3].name,value:data[_index3].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1145);\n\n__webpack_require__(1177);\n\n__webpack_require__(1146);\n\nvar legendFilter = __webpack_require__(1178);\n\nvar Component = __webpack_require__(50);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1145);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(8);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1146);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Representatives.73d3a908.chunk.js","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {loadWitnesses, loadStatisticData} from \"../../actions/network\";\nimport {tu} from \"../../utils/i18n\";\nimport {TronLoader} from \"../common/loaders\";\nimport {FormattedNumber} from \"react-intl\";\nimport {injectIntl} from \"react-intl\";\nimport _, {filter, maxBy, sortBy, trim, sumBy} from \"lodash\";\nimport {AddressLink, BlockNumberLink} from \"../common/Links\";\nimport {SR_MAX_COUNT} from \"../../constants\";\nimport {WidgetIcon} from \"../common/Icon\";\nimport {RepresentativesRingPieReact} from \"../common/RingPieChart\";\nimport {loadVoteList, loadVoteTimer} from \"../../actions/votes\";\n\nclass Representatives extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchCriteria: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadVoteList()\n    this.props.loadVoteTimer();\n    this.props.loadWitnesses();\n    this.props.loadStatisticData();\n  }\n\n  getWitnesses() {\n    let {witnesses} = this.props;\n    witnesses = witnesses.map(w => ({\n      ...w,\n      inSync: this.isinSync(w),\n      productivity: (w.producedTotal / (w.producedTotal + w.missedTotal)) * 100,\n    }));\n\n    return sortBy(filter(witnesses, w => w.producer), w => w.votes * -1)\n        .concat(sortBy(filter(witnesses, w => !w.producer), w => w.votes * -1))\n        .map((w, index) => ({...w, index}));\n  }\n\n  isinSync(account) {\n    let {witnesses} = this.props;\n    let maxBlockNumber = maxBy(witnesses, witness => witness.latestBlockNumber).latestBlockNumber;\n    return account.latestBlockNumber > maxBlockNumber - SR_MAX_COUNT;\n  }\n\n  getPiechart() {\n    let {intl} = this.props;\n    let {statisticData} = this.props;\n    let pieChartData = [];\n    if (statisticData.length > 0) {\n      statisticData.map((val, i) => {\n        pieChartData.push({\n          key: i + 1,\n          name: val.name ? val.name : val.url,\n          volumeValue: intl.formatNumber(val.blockProduced),\n          volumePercentage: intl.formatNumber(val.percentage * 100, {\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2\n          }) + '%',\n        });\n\n      })\n    }\n    return pieChartData\n  }\n\n  renderWitnesses(witnesses) {\n\n    if (witnesses.length === 0 || this.props.voteList.length === 0) {\n      return (\n          <div className=\"card\">\n            <TronLoader>\n              {tu(\"loading_representatives\")}\n            </TronLoader>\n          </div>\n      );\n    }\n\n    let superRepresentatives = sortBy(filter(witnesses, w => w.producer), w => w.votes * -1);\n    let candidateRepresentatives = sortBy(filter(witnesses, w => !w.producer), w => w.votes * -1);\n\n    return (\n        <div className=\"card border-0\">\n          <table className=\"table table-hover table-striped bg-white m-0 sr\">\n            <thead className=\"thead-dark\">\n            <tr>\n              <th className=\"text-right d-none d-lg-table-cell\" style={{width: 20}}>#</th>\n              <th style={{width: 100}}>{tu(\"name\")}</th>\n              <th className=\"text-right text-nowrap\">{tu(\"status\")}</th>\n              <th className=\"text-right text-nowrap d-none d-sm-table-cell\">{tu(\"last_block\")}</th>\n              <th className=\"text-right text-nowrap d-none d-md-table-cell\">{tu(\"blocks_produced\")}</th>\n              <th className=\"text-right text-nowrap d-none d-xl-table-cell\">{tu(\"blocks_missed\")}</th>\n              <th className=\"text-right text-nowrap d-none d-xl-table-cell\">{tu(\"transactions\")}</th>\n              <th className=\"text-right text-nowrap d-none d-xl-table-cell\">{tu(\"productivity\")}</th>\n              <th className=\"text-right text-nowrap d-none d-xl-table-cell\">{tu(\"votes\")}</th>\n\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td colSpan=\"9\" className=\"bg-danger text-white text-center font-weight-bold\">\n                {tu(\"Super Representatives\")}\n              </td>\n            </tr>\n            {superRepresentatives.map((account, index) => <Row index={index} state={this.state} props={this.props}\n                                                               key={account.address} account={account}/>)}\n            <tr>\n              <td colSpan=\"9\" className=\"bg-secondary text-white text-center font-weight-bold\">\n                {tu(\"Super Representative Candidates\")}\n              </td>\n            </tr>\n            {candidateRepresentatives.map((account, index) => <Row index={index} state={this.state} props={this.props}\n                                                                   key={account.address} account={account}\n                                                                   showSync={false}/>)}\n            </tbody>\n          </table>\n        </div>\n    )\n  }\n\n  render() {\n    let {intl} = this.props;\n    let witnesses = this.getWitnesses();\n    let pieChart = this.getPiechart();\n\n    let productivityWitnesses = witnesses.slice(0, SR_MAX_COUNT);\n\n    let mostProductive = sortBy(productivityWitnesses, w => w.productivity * -1)[0];\n    let leastProductive = _(productivityWitnesses)\n        .filter(w => w.producedTotal > 0)\n        .sortBy(w => w.productivity)\n        .value()[0];\n\n    return (\n        <main className=\"container header-overlap pb-3\">\n          <div className={witnesses.length === 0 || pieChart.length === 0 ? 'card' : ''}>\n            {\n              witnesses.length === 0 || pieChart.length === 0 ?\n                  <TronLoader/> :\n                  <div className=\"row \">\n                    <div className=\"col-md-6\">\n                      <div className=\"mt-3 mt-md-3\">\n                        <div className=\"card h-100 widget-icon\">\n                          <WidgetIcon className=\"fa fa-user-tie text-secondary\"/>\n                          <div className=\"card-body text-center\">\n                            <h3 className=\"text-primary\">\n                              <FormattedNumber value={witnesses.length}/>\n                            </h3>\n                            {tu(\"representatives\")}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3 mt-md-3\">\n                        <div className=\"card h-100\">\n                          <div className=\"card-body text-center widget-icon\">\n                            <WidgetIcon className=\"fa fa-arrow-up text-success\" style={{bottom: 10}}/>\n                            <h3 className=\"text-success\">\n                              <FormattedNumber value={mostProductive.productivity}/>%\n                            </h3>\n                            {tu(\"highest_productivity\")}<br/>\n                            <AddressLink address={mostProductive.address}>\n                              {mostProductive.name || mostProductive.url}\n                            </AddressLink>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3 mt-md-3\">\n                        <div className=\"card h-100 widget-icon\">\n                          <WidgetIcon className=\"fa fa-arrow-down text-danger\" style={{bottom: 10}}/>\n                          <div className=\"card-body text-center\">\n                            <h3 className=\"text-danger\">\n                              <FormattedNumber maximumFractionDigits={2}\n                                               minimunFractionDigits={2}\n                                               value={leastProductive.productivity}/>%\n                            </h3>\n                            {tu(\"lowest_productivity\")}<br/>\n                            <AddressLink address={leastProductive.address}>\n                              {leastProductive.name || leastProductive.url}\n                            </AddressLink>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6 mt-3\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div style={{height: 330}}>\n                            {\n                              <RepresentativesRingPieReact message={{id: 'produce_distribution'}} intl={intl}\n                                                           data={pieChart} style={{height: 300}}/>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n            }\n          </div>\n\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              {this.renderWitnesses(witnesses)}\n            </div>\n          </div>\n        </main>\n    )\n  }\n}\n\nfunction Row({account, showSync = true, index, state, props}) {\n\n  let {searchCriteria} = state;\n  let {voteList: candidates} = props;\n  candidates = sortBy(candidates, c => c.votes * -1).map((c, index) => ({\n    ...c,\n    rank: index,\n  }));\n\n  let filteredCandidates = candidates;\n\n  if (searchCriteria && searchCriteria !== \"\") {\n    filteredCandidates = filter(candidates, c => {\n      if (trim(c.url.toLowerCase()).indexOf(searchCriteria.toLowerCase()) !== -1) {\n        return true;\n      }\n\n      if (c.name.length > 0 && trim(c.name.toLowerCase()).indexOf(searchCriteria.toLowerCase()) !== -1) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  let totalVotes = sumBy(candidates, c => c.votes);\n\n  return (\n      <tr key={account.address}>\n        <td className=\"text-right d-none d-lg-table-cell\">{account.index + 1}</td>\n        <td>\n          {\n            account.name ?\n                <div className=\"_context_right_click\">\n                  <AddressLink address={account.address}>\n                    {account.name}<br/>\n                    <span className=\"small text-muted\">{account.url}</span>\n                  </AddressLink>\n                </div> :\n                <div className=\"_context_right_click\">\n                  <AddressLink address={account.address}>{account.url}</AddressLink>\n                </div>\n          }\n        </td>\n        {\n          showSync ?\n              <td className=\"text-center\">\n                {\n                  account.inSync ?\n                      <span key=\"no\" className=\"text-success\"><i className=\"fas fa-circle\"/></span> :\n                      <span key=\"yes\" className=\"text-danger\"><i className=\"fa fa-times\"/></span>\n                }\n              </td> : <td>&nbsp;</td>\n        }\n        <td className=\"text-right d-none d-sm-table-cell\">\n          <BlockNumberLink number={account.latestBlockNumber}/>\n        </td>\n        <td className=\"text-right d-none d-md-table-cell\">\n          <FormattedNumber value={account.producedTotal}/>\n        </td>\n        <td className=\"text-right d-none d-xl-table-cell\">\n          {\n            account.missedTotal !== 0 ?\n                <FormattedNumber value={account.missedTotal}/> :\n                '-'\n          }\n        </td>\n        <td className=\"text-right d-none d-xl-table-cell\">\n          {\n            account.producedTrx !== 0 ?\n                <FormattedNumber value={account.producedTrx}/> :\n                '-'\n          }\n        </td>\n        <td className=\"text-right d-none d-xl-table-cell\">\n          {\n            account.producedTotal > 0 ? (\n                <Fragment>\n                  <FormattedNumber\n                      maximumFractionDigits={2}\n                      minimunFractionDigits={2}\n                      value={account.productivity}/>%\n                </Fragment>\n            ) : '-'\n          }\n\n        </td>\n        <td className=\"text-right d-none d-xl-table-cell\">\n          {\n            totalVotes > 0 &&\n            <Fragment>\n              <FormattedNumber value={filteredCandidates[index].votes}/>\n              <br/>\n              {'('}\n              <FormattedNumber\n                  minimumFractionDigits={2}\n                  maximumFractionDigits={2}\n                  value={(filteredCandidates[index].votes / totalVotes) * 100}/>%\n              {')'}\n            </Fragment>\n          }\n        </td>\n      </tr>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    witnesses: state.network.witnesses,\n    statisticData: state.network.statisticData,\n    voteList: state.voting.voteList,\n    voteTimer: state.voting.voteTimer,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadWitnesses,\n  loadStatisticData,\n  loadVoteList,\n  loadVoteTimer,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(Representatives));\n//export default connect(mapStateToProps, mapDispatchToProps)(Representatives)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/representatives/Representatives.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1145\n// module chunks = 1 8 9 10","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1146\n// module chunks = 1 8 9 10","import React from \"react\";\n\n\nexport function WidgetIcon({className, ...props}) {\n  return (\n    <span className=\"icon-big\" {...props}>\n      <i className={\" fa-7x \" + className} />\n    </span>\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/Icon.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text = intl.formatMessage({id: message.id}) + ' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if (data && data.length === 0) {\n      config.ringPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message, source} = this.props;\n    if (data.length) {\n      for (let index in data) {\n        if (data[index].name.indexOf(\"http://\") > -1) {\n          data[index].name = data[index].name.substring(7).split('.com')[0];\n        }\n      }\n    }\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.representPieChart.title.text = intl.formatMessage({id: message.id});\n    config.representPieChart.series[0].data = [];\n    config.representPieChart.legend.data = [];\n    config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n    config.representPieChart.tooltip.formatter = function (datas) {\n      return (\n          intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n          intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n          intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n      )\n\n    }\n    if (source === 'singleChart') {\n      config.representPieChart.legend.show = true;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: true,\n          title: 'save'\n        }\n      }\n    } else {\n      config.representPieChart.legend.show = false;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          show: false,\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: false,\n          title: 'save'\n        }\n      }\n    }\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let exchanges = []\n      let temp = [];\n      for (let index in data) {\n        if (temp.indexOf(data[index].name) < 0) {\n          temp.push(data[index].name)\n          exchanges.push({name: data[index].name, value: data[index].volumeValue});\n        }\n      }\n\n      exchanges.sort(compare(\"value\")).reverse();\n\n      config.representPieChart.series[0].data = [];\n      config.representPieChart.legend.data = temp;\n      config.representPieChart.series[0].data = exchanges;\n\n    }\n    if (data && data.length === 0) {\n      config.representPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.representPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1176\n// module chunks = 1 8 9 10","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1177\n// module chunks = 1 8 9 10","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1178\n// module chunks = 1 8 9 10","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1179\n// module chunks = 1 8 9 10","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1180\n// module chunks = 1 8 9 10","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1181\n// module chunks = 1 8 9 10"],"sourceRoot":""}