{"version":3,"sources":["../static/js/Representatives.84dd9e67.chunk.js","components/representatives/Representatives.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/Icon.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js"],"names":["webpackJsonp","1095","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Row","_ref","account","_ref$showSync","showSync","undefined","_react2","createElement","key","address","className","index","name","_Links","AddressLink","url","inSync","BlockNumberLink","number","latestBlockNumber","_reactIntl","FormattedNumber","producedTotal","missedTotal","producedTrx","_react","Fragment","maximumFractionDigits","minimunFractionDigits","productivity","mapStateToProps","state","witnesses","network","statisticData","defineProperty","_extends","assign","target","i","arguments","length","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_reactRedux","_network","_i18n","_loaders","_lodash","_lodash2","_constants","_Icon","_RingPieChart","Representatives","_Component","this","getPrototypeOf","apply","loadWitnesses","loadStatisticData","_this2","map","w","isinSync","sortBy","filter","producer","votes","concat","maxBlockNumber","maxBy","witness","intl","pieChartData","val","push","volumeValue","formatNumber","blockProduced","volumePercentage","percentage","minimumFractionDigits","TronLoader","tu","superRepresentatives","candidateRepresentatives","colSpan","getWitnesses","pieChart","getPiechart","productivityWitnesses","slice","SR_MAX_COUNT","mostProductive","leastProductive","WidgetIcon","style","bottom","height","RepresentativesRingPieReact","message","id","data","renderWitnesses","Component","mapDispatchToProps","connect","pure","injectIntl","1134","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","type","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","get","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","1135","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1149","_objectWithoutProperties","keys","1154","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","_chartConfig","_chartConfig2","_echarts","_echarts2","_React$Component","_this","Math","random","pieId","compare","property","obj1","obj2","_props","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","sort","pairData","exchanges","temp","pair","volume","subCount","finalExchanges","finalPairData","setOption","initPie","_React$Component2","_props2","representPieChart","link","datas","percent","toolbox","feature","restore","saveAsImage","reverse","1155","legendFilter","registerProcessor","registerSubTypeDefaulter","1156","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1157","legendModels","findComponents","mainType","filterSeries","1158","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1159","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","setStyle","cursor","pageText","current","total","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","floor","winRect","startIdx","children","intersect","startItem","startRect","1160","subType","query"],"mappings":"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","file":"static/js/Representatives.84dd9e67.chunk.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 1095:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _network=__webpack_require__(423);var _i18n=__webpack_require__(10);var _loaders=__webpack_require__(26);var _reactIntl=__webpack_require__(14);var _lodash=__webpack_require__(18);var _lodash2=_interopRequireDefault(_lodash);var _Links=__webpack_require__(19);var _constants=__webpack_require__(36);var _Icon=__webpack_require__(1149);var _RingPieChart=__webpack_require__(1154);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Representatives=function(_Component){_inherits(Representatives,_Component);function Representatives(){_classCallCheck(this,Representatives);return _possibleConstructorReturn(this,(Representatives.__proto__||Object.getPrototypeOf(Representatives)).apply(this,arguments));}_createClass(Representatives,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.loadWitnesses();this.props.loadStatisticData();}},{key:\"getWitnesses\",value:function getWitnesses(){var _this2=this;var witnesses=this.props.witnesses;witnesses=witnesses.map(function(w){return _extends({},w,{inSync:_this2.isinSync(w),productivity:w.producedTotal/(w.producedTotal+w.missedTotal)*100});});return(0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return w.producer;}),function(w){return w.votes*-1;}).concat((0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return!w.producer;}),function(w){return w.votes*-1;})).map(function(w,index){return _extends({},w,{index:index});});}},{key:\"isinSync\",value:function isinSync(account){var witnesses=this.props.witnesses;var maxBlockNumber=(0,_lodash.maxBy)(witnesses,function(witness){return witness.latestBlockNumber;}).latestBlockNumber;return account.latestBlockNumber>maxBlockNumber-_constants.SR_MAX_COUNT;}},{key:\"getPiechart\",value:function getPiechart(){var intl=this.props.intl;var statisticData=this.props.statisticData;var pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}return pieChartData;}},{key:\"renderWitnesses\",value:function renderWitnesses(witnesses){if(witnesses.length===0){return _react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(_loaders.TronLoader,null,(0,_i18n.tu)(\"loading_representatives\")));}var superRepresentatives=(0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return w.producer;}),function(w){return w.votes*-1;});var candidateRepresentatives=(0,_lodash.sortBy)((0,_lodash.filter)(witnesses,function(w){return!w.producer;}),function(w){return w.votes*-1;});return _react2.default.createElement(\"div\",{className:\"card border-0\"},_react2.default.createElement(\"table\",{className:\"table table-hover table-striped bg-white m-0\"},_react2.default.createElement(\"thead\",{className:\"thead-dark\"},_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"th\",{className:\"text-right d-none d-lg-table-cell\"},\"#\"),_react2.default.createElement(\"th\",null,(0,_i18n.tu)(\"name\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap\"},(0,_i18n.tu)(\"status\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-sm-table-cell\"},(0,_i18n.tu)(\"last_block\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-md-table-cell\"},(0,_i18n.tu)(\"blocks_produced\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-md-table-cell\"},(0,_i18n.tu)(\"blocks_missed\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-md-table-cell\"},(0,_i18n.tu)(\"transactions\")),_react2.default.createElement(\"th\",{className:\"text-right text-nowrap d-none d-sm-table-cell\"},(0,_i18n.tu)(\"productivity\")))),_react2.default.createElement(\"tbody\",null,_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",{colSpan:\"9\",className:\"bg-danger text-white text-center font-weight-bold\"},(0,_i18n.tu)(\"Super Representatives\"))),superRepresentatives.map(function(account){return _react2.default.createElement(Row,{key:account.address,account:account});}),_react2.default.createElement(\"tr\",null,_react2.default.createElement(\"td\",{colSpan:\"9\",className:\"bg-secondary text-white text-center font-weight-bold\"},(0,_i18n.tu)(\"Super Representative Candidates\"))),candidateRepresentatives.map(function(account){return _react2.default.createElement(Row,{key:account.address,account:account,showSync:false});}))));}},{key:\"render\",value:function render(){var intl=this.props.intl;var witnesses=this.getWitnesses();var pieChart=this.getPiechart();var productivityWitnesses=witnesses.slice(0,_constants.SR_MAX_COUNT);var mostProductive=(0,_lodash.sortBy)(productivityWitnesses,function(w){return w.productivity*-1;})[0];var leastProductive=(0,_lodash2.default)(productivityWitnesses).filter(function(w){return w.producedTotal>0;}).sortBy(function(w){return w.productivity;}).value()[0];return _react2.default.createElement(\"main\",{className:\"container header-overlap pb-3\"},_react2.default.createElement(\"div\",{className:witnesses.length===0||pieChart.length===0?'card':''},witnesses.length===0||pieChart.length===0?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(\"div\",{className:\"row \"},_react2.default.createElement(\"div\",{className:\"col-md-6\"},_react2.default.createElement(\"div\",{className:\"mt-3 mt-md-3\"},_react2.default.createElement(\"div\",{className:\"card h-100 widget-icon\"},_react2.default.createElement(_Icon.WidgetIcon,{className:\"fa fa-user-tie text-secondary\"}),_react2.default.createElement(\"div\",{className:\"card-body text-center\"},_react2.default.createElement(\"h3\",{className:\"text-primary\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:witnesses.length})),(0,_i18n.tu)(\"representatives\")))),_react2.default.createElement(\"div\",{className:\"mt-3 mt-md-3\"},_react2.default.createElement(\"div\",{className:\"card h-100\"},_react2.default.createElement(\"div\",{className:\"card-body text-center widget-icon\"},_react2.default.createElement(_Icon.WidgetIcon,{className:\"fa fa-arrow-up text-success\",style:{bottom:10}}),_react2.default.createElement(\"h3\",{className:\"text-success\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:mostProductive.productivity}),\"%\"),(0,_i18n.tu)(\"highest_productivity\"),_react2.default.createElement(\"br\",null),_react2.default.createElement(_Links.AddressLink,{address:mostProductive.address},mostProductive.name||mostProductive.url)))),_react2.default.createElement(\"div\",{className:\"mt-3 mt-md-3\"},_react2.default.createElement(\"div\",{className:\"card h-100 widget-icon\"},_react2.default.createElement(_Icon.WidgetIcon,{className:\"fa fa-arrow-down text-danger\",style:{bottom:10}}),_react2.default.createElement(\"div\",{className:\"card-body text-center\"},_react2.default.createElement(\"h3\",{className:\"text-danger\"},_react2.default.createElement(_reactIntl.FormattedNumber,{maximumFractionDigits:2,minimunFractionDigits:2,value:leastProductive.productivity}),\"%\"),(0,_i18n.tu)(\"lowest_productivity\"),_react2.default.createElement(\"br\",null),_react2.default.createElement(_Links.AddressLink,{address:leastProductive.address},leastProductive.name||leastProductive.url))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:330}},_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:300}}))))))),_react2.default.createElement(\"div\",{className:\"row mt-3\"},_react2.default.createElement(\"div\",{className:\"col-md-12\"},this.renderWitnesses(witnesses))));}}]);return Representatives;}(_react.Component);function Row(_ref){var account=_ref.account,_ref$showSync=_ref.showSync,showSync=_ref$showSync===undefined?true:_ref$showSync;return _react2.default.createElement(\"tr\",{key:account.address},_react2.default.createElement(\"td\",{className:\"text-right d-none d-lg-table-cell\"},account.index+1),_react2.default.createElement(\"td\",null,account.name?_react2.default.createElement(\"div\",{className:\"_context_right_click\"},_react2.default.createElement(_Links.AddressLink,{address:account.address},account.name,_react2.default.createElement(\"br\",null),_react2.default.createElement(\"span\",{className:\"small text-muted\"},account.url))):_react2.default.createElement(\"div\",{className:\"_context_right_click\"},_react2.default.createElement(_Links.AddressLink,{address:account.address},account.url))),showSync?_react2.default.createElement(\"td\",{className:\"text-center\"},account.inSync?_react2.default.createElement(\"span\",{key:\"no\",className:\"text-success\"},_react2.default.createElement(\"i\",{className:\"fas fa-circle\"})):_react2.default.createElement(\"span\",{key:\"yes\",className:\"text-danger\"},_react2.default.createElement(\"i\",{className:\"fa fa-times\"}))):_react2.default.createElement(\"td\",null,\"\\xA0\"),_react2.default.createElement(\"td\",{className:\"text-right d-none d-sm-table-cell\"},_react2.default.createElement(_Links.BlockNumberLink,{number:account.latestBlockNumber})),_react2.default.createElement(\"td\",{className:\"text-right d-none d-md-table-cell\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:account.producedTotal})),_react2.default.createElement(\"td\",{className:\"text-right d-none d-md-table-cell\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:account.missedTotal})),_react2.default.createElement(\"td\",{className:\"text-right d-none d-md-table-cell text-nowrap\"},_react2.default.createElement(_reactIntl.FormattedNumber,{value:account.producedTrx})),_react2.default.createElement(\"td\",{className:\"text-right d-none d-sm-table-cell\"},account.producedTotal>0?_react2.default.createElement(_react.Fragment,null,_react2.default.createElement(_reactIntl.FormattedNumber,{maximumFractionDigits:2,minimunFractionDigits:2,value:account.productivity}),\"%\"):'-'));}function mapStateToProps(state){return{witnesses:state.network.witnesses,statisticData:state.network.statisticData};}var mapDispatchToProps={loadWitnesses:_network.loadWitnesses,loadStatisticData:_network.loadStatisticData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps,null,{pure:false})((0,_reactIntl.injectIntl)(Representatives));//export default connect(mapStateToProps, mapDispatchToProps)(Representatives)\n\n/***/ }),\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(9);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(12);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(146);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(8);\n\nvar _listComponent = __webpack_require__(413);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.WidgetIcon=WidgetIcon;var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}function WidgetIcon(_ref){var className=_ref.className,props=_objectWithoutProperties(_ref,[\"className\"]);return _react2.default.createElement(\"span\",Object.assign({className:\"icon-big\"},props),_react2.default.createElement(\"i\",{className:\" fa-7x \"+className}));}\n\n/***/ }),\n\n/***/ 1154:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(14);var _chartConfig=__webpack_require__(222);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(412);__webpack_require__(223);__webpack_require__(224);__webpack_require__(1155);__webpack_require__(1158);__webpack_require__(1159);__webpack_require__(1160);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var index in data){if(temp.indexOf(data[index].name)<0){temp.push(data[index].name);exchanges.push({name:data[index].name,value:data[index].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1155:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1134);\n\n__webpack_require__(1156);\n\n__webpack_require__(1135);\n\nvar legendFilter = __webpack_require__(1157);\n\nvar Component = __webpack_require__(48);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1156:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1157:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1158:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1134);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1159:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(8);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1135);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1160:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Representatives.84dd9e67.chunk.js","import React, {Component, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {loadWitnesses, loadStatisticData} from \"../../actions/network\";\nimport {tu} from \"../../utils/i18n\";\nimport {TronLoader} from \"../common/loaders\";\nimport {FormattedNumber} from \"react-intl\";\nimport {injectIntl} from \"react-intl\";\nimport _, {filter, maxBy, sortBy} from \"lodash\";\nimport {AddressLink, BlockNumberLink} from \"../common/Links\";\nimport {SR_MAX_COUNT} from \"../../constants\";\nimport {WidgetIcon} from \"../common/Icon\";\nimport {RepresentativesRingPieReact} from \"../common/RingPieChart\";\n\nclass Representatives extends Component {\n\n  componentDidMount() {\n    this.props.loadWitnesses();\n    this.props.loadStatisticData();\n  }\n\n  getWitnesses() {\n    let {witnesses} = this.props;\n    witnesses = witnesses.map(w => ({\n      ...w,\n      inSync: this.isinSync(w),\n      productivity: (w.producedTotal / (w.producedTotal + w.missedTotal)) * 100,\n    }));\n\n    return sortBy(filter(witnesses, w => w.producer), w => w.votes * -1)\n        .concat(sortBy(filter(witnesses, w => !w.producer), w => w.votes * -1))\n        .map((w, index) => ({...w, index}));\n  }\n\n  isinSync(account) {\n    let {witnesses} = this.props;\n    let maxBlockNumber = maxBy(witnesses, witness => witness.latestBlockNumber).latestBlockNumber;\n    return account.latestBlockNumber > maxBlockNumber - SR_MAX_COUNT;\n  }\n\n  getPiechart() {\n    let {intl} = this.props;\n    let {statisticData} = this.props;\n    let pieChartData = [];\n    if (statisticData.length > 0) {\n      statisticData.map((val, i) => {\n        pieChartData.push({\n          key: i + 1,\n          name: val.name ? val.name : val.url,\n          volumeValue: intl.formatNumber(val.blockProduced),\n          volumePercentage: intl.formatNumber(val.percentage * 100, {\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2\n          }) + '%',\n        });\n\n      })\n    }\n    return pieChartData\n  }\n\n  renderWitnesses(witnesses) {\n\n    if (witnesses.length === 0) {\n      return (\n          <div className=\"card\">\n            <TronLoader>\n              {tu(\"loading_representatives\")}\n            </TronLoader>\n          </div>\n      );\n    }\n\n    let superRepresentatives = sortBy(filter(witnesses, w => w.producer), w => w.votes * -1);\n    let candidateRepresentatives = sortBy(filter(witnesses, w => !w.producer), w => w.votes * -1);\n\n    return (\n        <div className=\"card border-0\">\n          <table className=\"table table-hover table-striped bg-white m-0\">\n            <thead className=\"thead-dark\">\n            <tr>\n              <th className=\"text-right d-none d-lg-table-cell\">#</th>\n              <th>{tu(\"name\")}</th>\n              <th className=\"text-right text-nowrap\">{tu(\"status\")}</th>\n              <th className=\"text-right text-nowrap d-none d-sm-table-cell\">{tu(\"last_block\")}</th>\n              <th className=\"text-right text-nowrap d-none d-md-table-cell\">{tu(\"blocks_produced\")}</th>\n              <th className=\"text-right text-nowrap d-none d-md-table-cell\">{tu(\"blocks_missed\")}</th>\n              <th className=\"text-right text-nowrap d-none d-md-table-cell\">{tu(\"transactions\")}</th>\n              <th className=\"text-right text-nowrap d-none d-sm-table-cell\">{tu(\"productivity\")}</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td colSpan=\"9\" className=\"bg-danger text-white text-center font-weight-bold\">\n                {tu(\"Super Representatives\")}\n              </td>\n            </tr>\n            {superRepresentatives.map(account => <Row key={account.address} account={account}/>)}\n            <tr>\n              <td colSpan=\"9\" className=\"bg-secondary text-white text-center font-weight-bold\">\n                {tu(\"Super Representative Candidates\")}\n              </td>\n            </tr>\n            {candidateRepresentatives.map(account => <Row key={account.address} account={account} showSync={false}/>)}\n            </tbody>\n          </table>\n        </div>\n    )\n  }\n\n  render() {\n    let {intl} = this.props;\n    let witnesses = this.getWitnesses();\n    let pieChart = this.getPiechart();\n    let productivityWitnesses = witnesses.slice(0, SR_MAX_COUNT);\n\n    let mostProductive = sortBy(productivityWitnesses, w => w.productivity * -1)[0];\n    let leastProductive = _(productivityWitnesses)\n        .filter(w => w.producedTotal > 0)\n        .sortBy(w => w.productivity)\n        .value()[0];\n\n    return (\n        <main className=\"container header-overlap pb-3\">\n          <div className={witnesses.length === 0 || pieChart.length === 0 ? 'card' : ''}>\n            {\n              witnesses.length === 0 || pieChart.length === 0 ?\n                  <TronLoader/> :\n                  <div className=\"row \">\n                    <div className=\"col-md-6\">\n                      <div className=\"mt-3 mt-md-3\">\n                        <div className=\"card h-100 widget-icon\">\n                          <WidgetIcon className=\"fa fa-user-tie text-secondary\"/>\n                          <div className=\"card-body text-center\">\n                            <h3 className=\"text-primary\">\n                              <FormattedNumber value={witnesses.length}/>\n                            </h3>\n                            {tu(\"representatives\")}\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3 mt-md-3\">\n                        <div className=\"card h-100\">\n                          <div className=\"card-body text-center widget-icon\">\n                            <WidgetIcon className=\"fa fa-arrow-up text-success\" style={{bottom: 10}}/>\n                            <h3 className=\"text-success\">\n                              <FormattedNumber value={mostProductive.productivity}/>%\n                            </h3>\n                            {tu(\"highest_productivity\")}<br/>\n                            <AddressLink address={mostProductive.address}>\n                              {mostProductive.name || mostProductive.url}\n                            </AddressLink>\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"mt-3 mt-md-3\">\n                        <div className=\"card h-100 widget-icon\">\n                          <WidgetIcon className=\"fa fa-arrow-down text-danger\" style={{bottom: 10}}/>\n                          <div className=\"card-body text-center\">\n                            <h3 className=\"text-danger\">\n                              <FormattedNumber maximumFractionDigits={2}\n                                               minimunFractionDigits={2}\n                                               value={leastProductive.productivity}/>%\n                            </h3>\n                            {tu(\"lowest_productivity\")}<br/>\n                            <AddressLink address={leastProductive.address}>\n                              {leastProductive.name || leastProductive.url}\n                            </AddressLink>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6 mt-3\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          <div style={{height: 330}}>\n                            {\n                              <RepresentativesRingPieReact message={{id: 'produce_distribution'}} intl={intl}\n                                                           data={pieChart} style={{height: 300}}/>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n            }\n          </div>\n\n          <div className=\"row mt-3\">\n            <div className=\"col-md-12\">\n              {this.renderWitnesses(witnesses)}\n            </div>\n          </div>\n        </main>\n    )\n  }\n}\n\nfunction Row({account, showSync = true}) {\n  return (\n      <tr key={account.address}>\n        <td className=\"text-right d-none d-lg-table-cell\">{account.index + 1}</td>\n        <td>\n          {\n            account.name ?\n                <div className=\"_context_right_click\">\n                  <AddressLink address={account.address}>\n                    {account.name}<br/>\n                    <span className=\"small text-muted\">{account.url}</span>\n                  </AddressLink>\n                </div> :\n                <div className=\"_context_right_click\">\n                  <AddressLink address={account.address}>{account.url}</AddressLink>\n                </div>\n          }\n        </td>\n        {\n          showSync ?\n              <td className=\"text-center\">\n                {\n                  account.inSync ?\n                      <span key=\"no\" className=\"text-success\"><i className=\"fas fa-circle\"/></span> :\n                      <span key=\"yes\" className=\"text-danger\"><i className=\"fa fa-times\"/></span>\n                }\n              </td> : <td>&nbsp;</td>\n        }\n        <td className=\"text-right d-none d-sm-table-cell\">\n          <BlockNumberLink number={account.latestBlockNumber}/>\n        </td>\n        <td className=\"text-right d-none d-md-table-cell\">\n          <FormattedNumber value={account.producedTotal}/>\n        </td>\n        <td className=\"text-right d-none d-md-table-cell\">\n          <FormattedNumber value={account.missedTotal}/>\n        </td>\n        <td className=\"text-right d-none d-md-table-cell text-nowrap\">\n          <FormattedNumber value={account.producedTrx}/>\n        </td>\n        <td className=\"text-right d-none d-sm-table-cell\">\n          {\n            account.producedTotal > 0 ? (\n                <Fragment>\n                  <FormattedNumber\n                      maximumFractionDigits={2}\n                      minimunFractionDigits={2}\n                      value={account.productivity}/>%\n                </Fragment>\n            ) : '-'\n          }\n\n        </td>\n      </tr>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    witnesses: state.network.witnesses,\n    statisticData: state.network.statisticData\n  };\n}\n\nconst mapDispatchToProps = {\n  loadWitnesses,\n  loadStatisticData\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(Representatives));\n//export default connect(mapStateToProps, mapDispatchToProps)(Representatives)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/representatives/Representatives.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1134\n// module chunks = 1 7 8 9","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1135\n// module chunks = 1 7 8 9","import React from \"react\";\n\n\nexport function WidgetIcon({className, ...props}) {\n  return (\n    <span className=\"icon-big\" {...props}>\n      <i className={\" fa-7x \" + className} />\n    </span>\n  )\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/Icon.js","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data,message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if(data && data.length===0){\n      config.ringPieChart.title.text=\"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let id = ('_' + Math.random()).replace('.', '_');\n        this.state = {\n            pieId: 'ringPie' + id\n        }\n    }\n\n    initPie(id) {\n        let {intl, data,message,source} = this.props;\n        let myChart = echarts.getInstanceByDom(document.getElementById(id));\n        if (myChart === undefined) {\n            myChart = echarts.init(document.getElementById(id));\n        }\n        config.representPieChart.title.text=intl.formatMessage({id:message.id});\n        config.representPieChart.series[0].data = [];\n        config.representPieChart.legend.data = [];\n        config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n        config.representPieChart.tooltip.formatter = function (datas) {\n            return (\n                intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n                intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n                intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n            )\n\n        }\n        if(source==='singleChart'){\n            config.representPieChart.legend.show = true;\n            config.representPieChart.toolbox.feature = {\n                restore: {\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: true,\n                    title: 'save'\n                }\n            }\n        }else{\n            config.representPieChart.legend.show = false;\n            config.representPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        if (data && data.length > 0) {\n            let exchanges = []\n            let temp = [];\n            for (let index in data) {\n                if (temp.indexOf(data[index].name) < 0) {\n                    temp.push(data[index].name)\n                    exchanges.push({name: data[index].name, value: data[index].volumeValue});\n                }\n            }\n\n            exchanges.sort(compare(\"value\")).reverse();\n\n            config.representPieChart.series[0].data = [];\n            config.representPieChart.legend.data = temp;\n            config.representPieChart.series[0].data = exchanges;\n\n        }\n        if(data && data.length===0){\n            config.representPieChart.title.text=\"No data\";\n        }\n        myChart.setOption(config.representPieChart);\n    }\n\n\n    componentDidMount() {\n        this.initPie(this.state.pieId);\n    }\n\n    componentDidUpdate() {\n        this.initPie(this.state.pieId);\n    }\n\n    render() {\n        return (\n            <div>\n              <div id={this.state.pieId} style={this.props.style}></div>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1155\n// module chunks = 1 7 8 9","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1156\n// module chunks = 1 7 8 9","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1157\n// module chunks = 1 7 8 9","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1158\n// module chunks = 1 7 8 9","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1159\n// module chunks = 1 7 8 9","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1160\n// module chunks = 1 7 8 9"],"sourceRoot":""}