{"version":3,"sources":["../static/js/Stats.fefd6f10.chunk.js","components/blockchain/Statistics/index.js","../node_modules/echarts/lib/component/legend/LegendModel.js","../node_modules/echarts/lib/component/legend/LegendView.js","components/common/RingPieChart.js","../node_modules/echarts/lib/component/legend.js","../node_modules/echarts/lib/component/legend/legendAction.js","../node_modules/echarts/lib/component/legend/legendFilter.js","../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","utils/tron.js"],"names":["webpackJsonp","1091","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_asyncToGenerator","fn","gen","apply","this","arguments","Promise","resolve","reject","step","key","arg","info","value","error","done","then","err","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","mapStateToProps","state","priceGraph","markets","price","defineProperty","_regenerator","_regenerator2","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","_react","_react2","_index","_index2","_i18n","_api","_constants","_reactRedux","_reactIntl","_lodash","_tron","_loaders","_LineCharts","_RingPieChart","_markets","Statistics","_React$Component","_this","getPrototypeOf","accounts","transactionStats","blockStats","transactionValueStats","txOverviewStats","addressesStats","blockSizeStats","blockchainSizeStats","priceStats","volume","pieChart","supplyTypesChart","loadAccounts","loadStats","loadTxOverviewStats","_ref","mark","_callee","_ref2","wrap","_context","prev","next","Client","getAccounts","limit","sort","sent","setState","filter","account","includes","tronAddresses","address","slice","map","name","balance","ONE_TRX","stop","_ref3","_callee2","intl","_ref4","stats","_ref5","transactionTotalStats","valueStats","_context2","getTransferStats","groupby","interval","getBlockStats","total","row","timestamp","_ref6","_callee3","today","timerToday","birthday","timerBirthday","dayNum","_ref7","data","priceStatsTemp","volumeData","volumeUSD","_ref8","statisticData","pieChartData","random","balanceData","TRONFoundationTotal","_ref9","blocks","blockHeight","nodeRewardsNum","blockProduceRewardsNum","startFeeBurnedNum","feeBurnedNum","genesisNum","independenceDayBurned","currentTotalSupply","circulatingNum","supplyTypesChartData","_ref10","temp","addressesTemp","blockSizeStatsTemp","blockchainSizeStatsTemp","txs","tx","_context3","Date","getTime","Math","floor","get","volume_usd","v","time","volume_billion","pow","formatNumber","getStatisticData","val","push","url","volumeValue","blockProduced","volumePercentage","percentage","maximumFractionDigits","minimumFractionDigits","getBlocks","number","getAddress","abs","toFixed","selected","getTxOverviewStats","parseInt","date","newAddressSeen","increment","totalTransaction","avgBlockTime","avgBlockSize","totalBlockCount","blockchainSize","_state","createElement","className","role","tu","type","data-dismiss","aria-label","aria-hidden","style","height","TronLoader","LineReactTx","LineReactAdd","LineReactBlockSize","LineReactBlockchainSize","LineReactPrice","LineReactVolumeUsd","RepresentativesRingPieReact","message","id","SupplyTypesTRXPieChart","Component","mapDispatchToProps","loadPriceData","connect","injectIntl","1148","echarts","zrUtil","Model","_model","isNameSpecified","LegendModel","extendComponentModel","dependencies","layoutMode","ignoreSize","init","option","parentModel","ecModel","mergeDefaultAndTheme","mergeOption","superCall","optionUpdated","_updateData","legendData","_data","hasSelected","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","seriesName","isPotential","legendDataProvider","names","mapArray","getName","isSeriesFiltered","concat","_availableNames","rawData","dataItem","getData","each","unSelect","toggleSelected","hasOwnProperty","indexOf","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","padding","itemGap","itemWidth","itemHeight","inactiveColor","textStyle","color","selectedMode","tooltip","_default","1149","dispatchSelectAction","api","dispatchAction","dispatchHighlightAction","dataName","el","getZr","storage","getDisplayList","useHoverLayer","dispatchDownplayAction","_config","__DEV__","_symbol","createSymbol","graphic","_listComponent","makeBackground","layoutUtil","curry","Group","extendComponentView","newlineDisabled","group","add","_contentGroup","_backgroundEl","getContentGroup","render","legendModel","resetInner","itemAlign","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","getHeight","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","attr","x","y","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","itemModel","dataIndex","newline","getSeriesByName","getVisual","getDataParams","legendSymbolType","symbolType","itemGroup","_createItem","on","set","idx","indexOfName","getItemVisual","textStyleModel","getModel","itemIcon","tooltipModel","legendGlobalTooltipModel","size","textX","textAlign","formatter","content","replace","Text","setTextStyle","text","textFill","getTextColor","textVerticalAlign","hitRect","Rect","shape","getBoundingRect","invisible","extend","formatterParams","componentType","legendIndex","componentIndex","$vars","eachChild","child","silent","setHoverStyle","__legendDataIndex","box","contentRect","1178","_toConsumableArray","arr","Array","isArray","arr2","from","RingPieReact","undefined","_chartConfig","_chartConfig2","_echarts","_echarts2","pieId","compare","property","obj1","obj2","_props","myChart","getInstanceByDom","document","getElementById","ringPieChart","title","formatMessage","series","legend","sortObj","pairData","exchanges","index","pair","subCount","finalExchanges","finalPairData","setOption","initPie","_React$Component2","_this2","_props2","source","substring","split","representPieChart","link","datas","percent","toolbox","feature","restore","saveAsImage","reverse","_React$Component3","_this3","_props3","supplyTypesTRXPieChart","seriesCenter","center","1179","legendFilter","registerProcessor","registerSubTypeDefaulter","1180","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","registerAction","1181","legendModels","findComponents","mainType","filterSeries","1182","mergeAndNormalizeLayoutParams","raw","getOrient","mergeLayoutParam","_layout","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","1183","LegendView","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","_showController","removeClipPath","__rectSize","createPageButton","iconIdx","pageDataIndexName","icon","createIcon","onclick","bind","me","_pageGo","controllerGroup","pageTextStyleModel","font","getFont","containerGroup","orientIdx","wh","hw","yx","controllerRect","showController","contentPos","position","containerPos","controllerPos","retrieve2","max","min","clipShape","setClipPath","pageInfo","_getPageInfo","pageIndex","updateProps","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","setStyle","cursor","pageText","current","pageCount","isString","getItemRect","itemRect","clone","xy","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","childAt","ceil","itemLoc","winRect","startIdx","children","intersect","startItem","startRect","1184","subType","query","1280"],"mappings":"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","file":"static/js/Stats.fefd6f10.chunk.js","sourcesContent":["webpackJsonp([10],{\n\n/***/ 1091:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _regenerator=__webpack_require__(4);var _regenerator2=_interopRequireDefault(_regenerator);var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _index=__webpack_require__(60);var _index2=_interopRequireDefault(_index);var _i18n=__webpack_require__(8);var _api=__webpack_require__(7);var _constants=__webpack_require__(35);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(12);var _lodash=__webpack_require__(18);var _tron=__webpack_require__(1280);var _loaders=__webpack_require__(26);var _LineCharts=__webpack_require__(422);var _RingPieChart=__webpack_require__(1178);var _markets=__webpack_require__(420);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){step(\"next\",value);},function(err){step(\"throw\",err);});}}return step(\"next\");});};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Statistics=function(_React$Component){_inherits(Statistics,_React$Component);function Statistics(){_classCallCheck(this,Statistics);var _this=_possibleConstructorReturn(this,(Statistics.__proto__||Object.getPrototypeOf(Statistics)).call(this));_this.state={accounts:null,transactionStats:null,blockStats:null,transactionValueStats:null,txOverviewStats:null,addressesStats:null,blockSizeStats:null,blockchainSizeStats:null,priceStats:null,volume:null,pieChart:null,supplyTypesChart:null};return _this;}_createClass(Statistics,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadAccounts();this.loadStats();this.loadTxOverviewStats();}},{key:\"loadAccounts\",value:function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee(){var _ref2,accounts;return _regenerator2.default.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _api.Client.getAccounts({limit:35,sort:'-balance'});case 2:_ref2=_context.sent;accounts=_ref2.accounts;this.setState({accounts:(0,_lodash.filter)(accounts,function(account){return!(0,_lodash.includes)(_tron.tronAddresses,account.address);}).slice(0,10).map(function(account){return{name:account.address,value:account.balance/_constants.ONE_TRX};})});case 5:case\"end\":return _context.stop();}}},_callee,this);}));function loadAccounts(){return _ref.apply(this,arguments);}return loadAccounts;}()},{key:\"loadStats\",value:function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee2(){var intl,_ref4,stats,_ref5,blockStats,transactionTotalStats,valueStats;return _regenerator2.default.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:intl=this.props.intl;_context2.next=3;return _api.Client.getTransferStats({groupby:'timestamp',interval:'hour'});case 3:_ref4=_context2.sent;stats=_ref4.stats;_context2.next=7;return _api.Client.getBlockStats({info:\"avg-block-size\"});case 7:_ref5=_context2.sent;blockStats=_ref5.stats;transactionTotalStats=stats.total.map(function(row){return{timestamp:row.timestamp,value:row.value};});valueStats=stats.value.map(function(row){return{timestamp:row.timestamp,value:row.value/_constants.ONE_TRX};});blockStats=blockStats.map(function(row){return{timestamp:row.timestamp,value:row.value};});this.setState({transactionStats:transactionTotalStats,transactionValueStats:valueStats,blockStats:blockStats});case 13:case\"end\":return _context2.stop();}}},_callee2,this);}));function loadStats(){return _ref3.apply(this,arguments);}return loadStats;}()},{key:\"loadTxOverviewStats\",value:function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regenerator2.default.mark(function _callee3(){var intl,today,timerToday,birthday,timerBirthday,dayNum,_ref7,data,priceStatsTemp,volumeData,volumeUSD,volume,_ref8,statisticData,pieChartData,random,balanceData,TRONFoundationTotal,_ref9,blocks,blockHeight,nodeRewardsNum,blockProduceRewardsNum,address,startFeeBurnedNum,feeBurnedNum,genesisNum,independenceDayBurned,currentTotalSupply,circulatingNum,supplyTypesChartData,_ref10,txOverviewStats,temp,addressesTemp,blockSizeStatsTemp,blockchainSizeStatsTemp,txs,tx;return _regenerator2.default.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:intl=this.props.intl;today=new Date();timerToday=today.getTime();birthday=new Date(\"2017/10/10\");timerBirthday=birthday.getTime();dayNum=Math.floor((timerToday-timerBirthday)/1000/3600/24);_context3.next=8;return _index2.default.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\"+dayNum);case 8:_ref7=_context3.sent;data=_ref7.data;priceStatsTemp=data['Data'];_context3.next=13;return _index2.default.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\");case 13:volumeData=_context3.sent;volumeUSD=volumeData.data.volume_usd;volume=volumeUSD.map(function(v,i){return{time:v[0],volume_billion:v[1]/Math.pow(10,9),volume_usd:intl.formatNumber(v[1])+' USD'};});_context3.next=18;return _api.Client.getStatisticData();case 18:_ref8=_context3.sent;statisticData=_ref8.statisticData;pieChartData=[];if(statisticData.length>0){statisticData.map(function(val,i){pieChartData.push({key:i+1,name:val.name?val.name:val.url,volumeValue:intl.formatNumber(val.blockProduced),volumePercentage:intl.formatNumber(val.percentage*100,{maximumFractionDigits:2,minimumFractionDigits:2})+'%'});});}random=Math.random();_context3.next=25;return _index2.default.get(\"https://tron.network/api/v2/node/balance_info?random=\"+random);case 25:balanceData=_context3.sent;TRONFoundationTotal=balanceData.data.total;_context3.next=29;return _api.Client.getBlocks({limit:1,sort:'-number'});case 29:_ref9=_context3.sent;blocks=_ref9.blocks;blockHeight=blocks[0]?blocks[0].number:0;nodeRewardsNum=blockHeight*16;blockProduceRewardsNum=blockHeight*32;_context3.next=36;return _api.Client.getAddress('TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy');case 36:address=_context3.sent;startFeeBurnedNum=Math.abs(-9223372036854.775808);feeBurnedNum=(startFeeBurnedNum-Math.abs(address.balance/_constants.ONE_TRX)).toFixed(2);genesisNum=100000000000;independenceDayBurned=1000000000;currentTotalSupply=genesisNum+blockProduceRewardsNum+nodeRewardsNum-independenceDayBurned-feeBurnedNum;circulatingNum=(currentTotalSupply-TRONFoundationTotal).toFixed(2);supplyTypesChartData=[{value:TRONFoundationTotal,name:'foundation_freeze',selected:true},{value:circulatingNum,name:'circulating_supply',selected:true}];_context3.next=46;return _api.Client.getTxOverviewStats();case 46:_ref10=_context3.sent;txOverviewStats=_ref10.txOverviewStats;temp=[];addressesTemp=[];blockSizeStatsTemp=[];blockchainSizeStatsTemp=[];for(txs in txOverviewStats){tx=parseInt(txs);if(tx===0){temp.push(txOverviewStats[tx]);addressesTemp.push({date:txOverviewStats[tx].date,total:txOverviewStats[tx].newAddressSeen,increment:txOverviewStats[tx].newAddressSeen});}else{temp.push({date:txOverviewStats[tx].date,totalTransaction:txOverviewStats[tx].totalTransaction-txOverviewStats[tx-1].totalTransaction,avgBlockTime:txOverviewStats[tx].avgBlockTime,avgBlockSize:txOverviewStats[tx].avgBlockSize,totalBlockCount:txOverviewStats[tx].totalBlockCount-txOverviewStats[tx-1].totalBlockCount,newAddressSeen:txOverviewStats[tx].newAddressSeen});addressesTemp.push({date:txOverviewStats[tx].date,total:txOverviewStats[tx].newAddressSeen+addressesTemp[tx-1].total,increment:txOverviewStats[tx].newAddressSeen});}blockSizeStatsTemp.push({date:txOverviewStats[tx].date,avgBlockSize:txOverviewStats[tx].avgBlockSize});blockchainSizeStatsTemp.push({date:txOverviewStats[tx].date,blockchainSize:txOverviewStats[tx].blockchainSize});}this.setState({txOverviewStats:temp,addressesStats:addressesTemp,blockSizeStats:blockSizeStatsTemp,blockchainSizeStats:blockchainSizeStatsTemp,priceStats:priceStatsTemp,volume:volume,pieChart:pieChartData,supplyTypesChart:supplyTypesChartData});case 54:case\"end\":return _context3.stop();}}},_callee3,this);}));function loadTxOverviewStats(){return _ref6.apply(this,arguments);}return loadTxOverviewStats;}()},{key:\"render\",value:function render(){var _state=this.state,txOverviewStats=_state.txOverviewStats,addressesStats=_state.addressesStats,transactionStats=_state.transactionStats,transactionValueStats=_state.transactionValueStats,blockStats=_state.blockStats,accounts=_state.accounts,blockSizeStats=_state.blockSizeStats,blockchainSizeStats=_state.blockchainSizeStats,priceStats=_state.priceStats,volume=_state.volume,pieChart=_state.pieChart,supplyTypesChart=_state.supplyTypesChart;var intl=this.props.intl;return _react2.default.createElement(\"main\",{className:\"container header-overlap\"},_react2.default.createElement(\"div\",{className:\"text-center alert alert-light alert-dismissible fade show\",role:\"alert\"},(0,_i18n.tu)(\"click_the_chart_title_to_find_more\"),_react2.default.createElement(\"button\",{type:\"button\",className:\"close\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},_react2.default.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},txOverviewStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactTx,{style:{height:350},data:txOverviewStats,intl:intl}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3 mt-md-0\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},addressesStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactAdd,{style:{height:350},data:addressesStats,intl:intl})))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},blockSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockSize,{style:{height:350},data:blockSizeStats,intl:intl}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},blockchainSizeStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactBlockchainSize,{style:{height:350},data:blockchainSizeStats,intl:intl})))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},priceStats===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactPrice,{style:{height:350},data:priceStats,intl:intl}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},volume===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_LineCharts.LineReactVolumeUsd,{style:{height:350},data:volume,intl:intl})))))),_react2.default.createElement(\"div\",{className:\"row\"},_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},pieChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_RingPieChart.RepresentativesRingPieReact,{message:{id:'produce_distribution'},intl:intl,data:pieChart,style:{height:300}}))))),_react2.default.createElement(\"div\",{className:\"col-md-6 mt-3\"},_react2.default.createElement(\"div\",{className:\"card\"},_react2.default.createElement(\"div\",{className:\"card-body\"},_react2.default.createElement(\"div\",{style:{height:350}},supplyTypesChart===null?_react2.default.createElement(_loaders.TronLoader,null):_react2.default.createElement(_RingPieChart.SupplyTypesTRXPieChart,{message:{id:'total_TRX_supply'},intl:intl,data:supplyTypesChart,style:{height:300}})))))));}}]);return Statistics;}(_react2.default.Component);function mapStateToProps(state){return{priceGraph:state.markets.price};}var mapDispatchToProps={loadPriceData:_markets.loadPriceData};exports.default=(0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)((0,_reactIntl.injectIntl)(Statistics));\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar Model = __webpack_require__(38);\n\nvar _model = __webpack_require__(10);\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(13);\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nvar _symbol = __webpack_require__(147);\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = __webpack_require__(9);\n\nvar _listComponent = __webpack_require__(415);\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = __webpack_require__(41);\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.SupplyTypesTRXPieChart=exports.RepresentativesRingPieReact=exports.RingPieReact=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=__webpack_require__(0);var _react2=_interopRequireDefault(_react);var _reactRedux=__webpack_require__(11);var _reactIntl=__webpack_require__(12);var _chartConfig=__webpack_require__(223);var _chartConfig2=_interopRequireDefault(_chartConfig);var _echarts=__webpack_require__(6);var _echarts2=_interopRequireDefault(_echarts);__webpack_require__(414);__webpack_require__(224);__webpack_require__(225);__webpack_require__(1179);__webpack_require__(1182);__webpack_require__(1183);__webpack_require__(1184);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RingPieReact=exports.RingPieReact=function(_React$Component){_inherits(RingPieReact,_React$Component);function RingPieReact(props){_classCallCheck(this,RingPieReact);var _this=_possibleConstructorReturn(this,(RingPieReact.__proto__||Object.getPrototypeOf(RingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this.state={pieId:'ringPie'+id};return _this;}_createClass(RingPieReact,[{key:\"initPie\",value:function initPie(id){var _props=this.props,intl=_props.intl,data=_props.data,message=_props.message;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.ringPieChart.title.text=intl.formatMessage({id:message.id})+' Top 10';_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=[];function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var sortObj=data.sort(compare(\"name\"));var pairData=[];var exchanges=[];var temp=[];for(var index in sortObj){pairData.push({name:sortObj[index].pair,value:sortObj[index].volume});if(temp.indexOf(sortObj[index].name)<0){temp.push(sortObj[index].name);exchanges.push({name:sortObj[index].name,value:0,subCount:[]});}}for(var _index in exchanges){for(var idx in sortObj){if(sortObj[idx].name===exchanges[_index].name){exchanges[_index].value=exchanges[_index].value+sortObj[idx].volume;exchanges[_index].subCount.push({name:sortObj[idx].pair,value:sortObj[idx].volume});}}}exchanges.sort(compare(\"value\"));var finalExchanges=exchanges.slice(exchanges.length-10,exchanges.length);var finalPairData=[];for(var _index2 in finalExchanges){finalPairData.push.apply(finalPairData,_toConsumableArray(finalExchanges[_index2].subCount));}_chartConfig2.default.ringPieChart.series[0].data=[];_chartConfig2.default.ringPieChart.series[1].data=[];_chartConfig2.default.ringPieChart.legend.data=temp;_chartConfig2.default.ringPieChart.series[0].data=finalExchanges;_chartConfig2.default.ringPieChart.series[1].data=finalPairData;}if(data&&data.length===0){_chartConfig2.default.ringPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.ringPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RingPieReact;}(_react2.default.Component);var RepresentativesRingPieReact=exports.RepresentativesRingPieReact=function(_React$Component2){_inherits(RepresentativesRingPieReact,_React$Component2);function RepresentativesRingPieReact(props){_classCallCheck(this,RepresentativesRingPieReact);var _this2=_possibleConstructorReturn(this,(RepresentativesRingPieReact.__proto__||Object.getPrototypeOf(RepresentativesRingPieReact)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this2.state={pieId:'ringPie'+id};return _this2;}_createClass(RepresentativesRingPieReact,[{key:\"initPie\",value:function initPie(id){var _props2=this.props,intl=_props2.intl,data=_props2.data,message=_props2.message,source=_props2.source;if(data.length){for(var index in data){if(data[index].name.indexOf(\"http://\")>-1){data[index].name=data[index].name.substring(7).split('.com')[0];}}}var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.representPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=[];_chartConfig2.default.representPieChart.title.link='#/blockchain/stats/pieChart';_chartConfig2.default.representPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:'witness'})+' : '+datas.name+'<br/>'+intl.formatMessage({id:'produced_blocks'})+' : '+datas.value+'<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){_chartConfig2.default.representPieChart.legend.show=true;_chartConfig2.default.representPieChart.toolbox.feature={restore:{title:'restore'},saveAsImage:{show:true,title:'save'}};}else{_chartConfig2.default.representPieChart.legend.show=false;_chartConfig2.default.representPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var _index3 in data){if(temp.indexOf(data[_index3].name)<0){temp.push(data[_index3].name);exchanges.push({name:data[_index3].name,value:data[_index3].volumeValue});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.representPieChart.series[0].data=[];_chartConfig2.default.representPieChart.legend.data=temp;_chartConfig2.default.representPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.representPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.representPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return RepresentativesRingPieReact;}(_react2.default.Component);var SupplyTypesTRXPieChart=exports.SupplyTypesTRXPieChart=function(_React$Component3){_inherits(SupplyTypesTRXPieChart,_React$Component3);function SupplyTypesTRXPieChart(props){_classCallCheck(this,SupplyTypesTRXPieChart);var _this3=_possibleConstructorReturn(this,(SupplyTypesTRXPieChart.__proto__||Object.getPrototypeOf(SupplyTypesTRXPieChart)).call(this,props));var id=('_'+Math.random()).replace('.','_');_this3.state={pieId:'ringPie'+id};return _this3;}_createClass(SupplyTypesTRXPieChart,[{key:\"initPie\",value:function initPie(id){var _props3=this.props,intl=_props3.intl,data=_props3.data,message=_props3.message,source=_props3.source;var myChart=_echarts2.default.getInstanceByDom(document.getElementById(id));if(myChart===undefined){myChart=_echarts2.default.init(document.getElementById(id));}_chartConfig2.default.supplyTypesTRXPieChart.title.text=intl.formatMessage({id:message.id});_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=[];_chartConfig2.default.supplyTypesTRXPieChart.legend.data=[];_chartConfig2.default.supplyTypesTRXPieChart.title.link='#/blockchain/stats/supply';_chartConfig2.default.supplyTypesTRXPieChart.tooltip.formatter=function(datas){return intl.formatMessage({id:datas.name})+' ('+intl.formatNumber(datas.value)+' TRX'+')<br/>'+intl.formatMessage({id:'_percentage'})+' : '+datas.percent+'%';};if(source==='singleChart'){var seriesCenter=['50%','50%'];_chartConfig2.default.supplyTypesTRXPieChart.legend.show=true;_chartConfig2.default.supplyTypesTRXPieChart.series[0].center=seriesCenter;_chartConfig2.default.supplyTypesTRXPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}else{var _seriesCenter=['50%','60%'];_chartConfig2.default.supplyTypesTRXPieChart.legend.show=false;_chartConfig2.default.supplyTypesTRXPieChart.series[0].center=_seriesCenter;_chartConfig2.default.supplyTypesTRXPieChart.toolbox.feature={restore:{show:false,title:'restore'},saveAsImage:{show:false,title:'save'}};}function compare(property){return function(obj1,obj2){if(obj1[property]>obj2[property]){return 1;}else if(obj1[property]<obj2[property]){return-1;}else{return 0;}};}if(data&&data.length>0){var exchanges=[];var temp=[];for(var index in data){if(temp.indexOf(data[index].name)<0){temp.push(intl.formatMessage({id:data[index].name}));exchanges.push({name:intl.formatMessage({id:data[index].name}),value:data[index].value,selected:data[index].selected});}}exchanges.sort(compare(\"value\")).reverse();_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=[];_chartConfig2.default.supplyTypesTRXPieChart.legend.data=temp;_chartConfig2.default.supplyTypesTRXPieChart.series[0].data=exchanges;}if(data&&data.length===0){_chartConfig2.default.supplyTypesTRXPieChart.title.text=\"No data\";}myChart.setOption(_chartConfig2.default.supplyTypesTRXPieChart);}},{key:\"componentDidMount\",value:function componentDidMount(){this.initPie(this.state.pieId);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.initPie(this.state.pieId);}},{key:\"render\",value:function render(){return _react2.default.createElement(\"div\",null,_react2.default.createElement(\"div\",{id:this.state.pieId,style:this.props.style}));}}]);return SupplyTypesTRXPieChart;}(_react2.default.Component);// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n__webpack_require__(1148);\n\n__webpack_require__(1180);\n\n__webpack_require__(1149);\n\nvar legendFilter = __webpack_require__(1181);\n\nvar Component = __webpack_require__(50);\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\nvar zrUtil = __webpack_require__(1);\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n/***/ }),\n\n/***/ 1181:\n/***/ (function(module, exports) {\n\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LegendModel = __webpack_require__(1148);\n\nvar _layout = __webpack_require__(41);\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1183:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(1);\n\nvar graphic = __webpack_require__(9);\n\nvar layoutUtil = __webpack_require__(41);\n\nvar LegendView = __webpack_require__(1149);\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar echarts = __webpack_require__(6);\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n/***/ }),\n\n/***/ 1280:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var tronAddresses=exports.tronAddresses=['27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS','27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj','27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx','27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/Stats.fefd6f10.chunk.js","import React from \"react\";\nimport xhr from \"axios/index\";\nimport {tu} from \"../../../utils/i18n\";\nimport {Client} from \"../../../services/api\";\nimport {ONE_TRX} from \"../../../constants\";\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\nimport {filter, includes} from \"lodash\";\nimport {tronAddresses} from \"../../../utils/tron\";\nimport {TronLoader} from \"../../common/loaders\";\n\nimport {\n  LineReactAdd,\n  LineReactBlockSize,\n  LineReactBlockchainSize,\n  LineReactTx,\n  LineReactPrice,\n  LineReactVolumeUsd\n} from \"../../common/LineCharts\";\nimport {\n  RepresentativesRingPieReact,\n  SupplyTypesTRXPieChart\n} from \"../../common/RingPieChart\";\nimport {loadPriceData} from \"../../../actions/markets\";\n\nclass Statistics extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accounts: null,\n      transactionStats: null,\n      blockStats: null,\n      transactionValueStats: null,\n      txOverviewStats: null,\n      addressesStats: null,\n      blockSizeStats: null,\n      blockchainSizeStats: null,\n      priceStats: null,\n      volume:null,\n      pieChart:null,\n      supplyTypesChart:null\n    };\n  }\n\n  componentDidMount() {\n    this.loadAccounts();\n    this.loadStats();\n    this.loadTxOverviewStats();\n  }\n\n  async loadAccounts() {\n\n    let {accounts} = await Client.getAccounts({\n      limit: 35,\n      sort: '-balance',\n    });\n\n    this.setState({\n      accounts: filter(accounts, account => !includes(tronAddresses, account.address))\n          .slice(0, 10)\n          .map(account => ({\n            name: account.address,\n            value: account.balance / ONE_TRX,\n          }))\n    });\n  }\n\n\n  async loadStats() {\n\n    let {intl} = this.props;\n\n    let {stats} = await Client.getTransferStats({\n      groupby: 'timestamp',\n      interval: 'hour',\n    });\n\n    let {stats: blockStats} = await Client.getBlockStats({\n      info: `avg-block-size`,\n    });\n\n    let transactionTotalStats = stats.total.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    let valueStats = stats.value.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value / ONE_TRX,\n    }));\n\n    blockStats = blockStats.map(row => ({\n      timestamp: row.timestamp,\n      value: row.value,\n    }));\n\n    this.setState({\n      transactionStats: transactionTotalStats,\n      transactionValueStats: valueStats,\n      blockStats,\n    });\n  }\n\n  async loadTxOverviewStats() {\n    let {intl} = this.props;\n    let today = new Date();\n    let timerToday = today.getTime();\n\n    var birthday = new Date(\"2017/10/10\");\n    var timerBirthday = birthday.getTime();\n    var dayNum = Math.floor((timerToday - timerBirthday) / 1000 / 3600 / 24);\n\n\n    let {data} = await xhr.get(\"https://min-api.cryptocompare.com/data/histoday?fsym=TRX&tsym=USD&limit=\" + dayNum);\n\n    let priceStatsTemp = data['Data'];\n\n    let volumeData = await xhr.get(\"https://cors.io/?https://graphs2.coinmarketcap.com/currencies/tron/\",);\n    let volumeUSD = volumeData.data.volume_usd\n    let volume = volumeUSD.map(function (v,i) {\n        return {\n            time:v[0],\n            volume_billion:v[1]/Math.pow(10,9),\n            volume_usd:intl.formatNumber(v[1]) + ' USD'\n        }\n    })\n\n    let {statisticData} = await Client.getStatisticData()\n    let pieChartData = [];\n    if (statisticData.length > 0) {\n        statisticData.map((val,i) => {\n            pieChartData.push({\n                key: i+1,\n                name: val.name?val.name:val.url,\n                volumeValue: intl.formatNumber(val.blockProduced),\n                volumePercentage: intl.formatNumber(val.percentage*100, {\n                    maximumFractionDigits: 2,\n                    minimumFractionDigits: 2\n                }) + '%',\n            });\n\n        })\n    }\n    let random=Math.random();\n    let balanceData = await xhr.get(\"https://tron.network/api/v2/node/balance_info?random=\"+random);\n    let TRONFoundationTotal = balanceData.data.total;\n    let {blocks} = await Client.getBlocks({\n        limit: 1,\n        sort: '-number',\n    });\n    let blockHeight = blocks[0] ? blocks[0].number : 0;\n    let nodeRewardsNum =  blockHeight*16;\n    let blockProduceRewardsNum = blockHeight*32;\n    let address = await Client.getAddress('TLsV52sRDL79HXGGm9yzwKibb6BeruhUzy');\n    let startFeeBurnedNum = Math.abs(-9223372036854.775808)\n    let feeBurnedNum = (startFeeBurnedNum - Math.abs(address.balance / ONE_TRX)).toFixed(2);\n    let genesisNum =  100000000000;\n    let independenceDayBurned = 1000000000;\n    let currentTotalSupply = genesisNum + blockProduceRewardsNum + nodeRewardsNum - independenceDayBurned - feeBurnedNum;\n    let circulatingNum = (currentTotalSupply  - TRONFoundationTotal).toFixed(2);\n    let supplyTypesChartData = [\n        {value:TRONFoundationTotal, name:'foundation_freeze', selected:true},\n        {value:circulatingNum, name:'circulating_supply',selected:true},\n    ]\n\n\n    let {txOverviewStats} = await Client.getTxOverviewStats();\n    let temp = [];\n    let addressesTemp = [];\n    let blockSizeStatsTemp = [];\n    let blockchainSizeStatsTemp = [];\n    for (let txs in txOverviewStats) {\n      let tx = parseInt(txs);\n      if (tx === 0) {\n        temp.push(txOverviewStats[tx]);\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      else {\n        temp.push({\n          date: txOverviewStats[tx].date,\n          totalTransaction: (txOverviewStats[tx].totalTransaction - txOverviewStats[tx - 1].totalTransaction),\n          avgBlockTime: txOverviewStats[tx].avgBlockTime,\n          avgBlockSize: txOverviewStats[tx].avgBlockSize,\n          totalBlockCount: (txOverviewStats[tx].totalBlockCount - txOverviewStats[tx - 1].totalBlockCount),\n          newAddressSeen: txOverviewStats[tx].newAddressSeen\n        });\n        addressesTemp.push({\n          date: txOverviewStats[tx].date,\n          total: txOverviewStats[tx].newAddressSeen + addressesTemp[tx - 1].total,\n          increment: txOverviewStats[tx].newAddressSeen\n        });\n      }\n      blockSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        avgBlockSize: txOverviewStats[tx].avgBlockSize\n      });\n      blockchainSizeStatsTemp.push({\n        date: txOverviewStats[tx].date,\n        blockchainSize: txOverviewStats[tx].blockchainSize\n      });\n    }\n\n    this.setState({\n      txOverviewStats: temp,\n      addressesStats: addressesTemp,\n      blockSizeStats: blockSizeStatsTemp,\n      blockchainSizeStats: blockchainSizeStatsTemp,\n      priceStats: priceStatsTemp,\n      volume:volume,\n      pieChart: pieChartData,\n      supplyTypesChart:supplyTypesChartData\n    });\n  }\n\n  render() {\n\n    let {txOverviewStats, addressesStats, transactionStats, transactionValueStats, blockStats, accounts, blockSizeStats, blockchainSizeStats, priceStats,volume,pieChart,supplyTypesChart} = this.state;\n    let {intl} = this.props;\n\n    return (\n        <main className=\"container header-overlap\">\n          <div className=\"text-center alert alert-light alert-dismissible fade show\" role=\"alert\">\n            {tu(\"click_the_chart_title_to_find_more\")}\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 350}}>\n                    {\n                      txOverviewStats === null ?\n                          <TronLoader/> :\n                          <LineReactTx style={{height: 350}} data={txOverviewStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-6 mt-3 mt-md-0\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 350}}>\n                    {\n                      addressesStats === null ?\n                          <TronLoader/> :\n                          <LineReactAdd style={{height: 350}} data={addressesStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n\n                  <div style={{height: 350}}>\n                    {\n                      blockSizeStats === null ?\n                          <TronLoader/> :\n                          <LineReactBlockSize style={{height: 350}} data={blockSizeStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div style={{height: 350}}>\n                    {\n                      blockchainSizeStats === null ?\n                          <TronLoader/> :\n                          <LineReactBlockchainSize style={{height: 350}} data={blockchainSizeStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div style={{height: 350}}>\n                    {\n                      priceStats === null ?\n                          <TronLoader/> :\n                          <LineReactPrice style={{height: 350}} data={priceStats} intl={intl}/>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-6 mt-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div style={{height: 350}}>\n                      {\n                          volume === null ?\n                              <TronLoader/> :\n                              <LineReactVolumeUsd style={{height: 350}} data={volume} intl={intl}/>\n                      }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {\n\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-3\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div style={{height: 350}}>\n                        {\n                            pieChart === null ?\n                                <TronLoader/> :\n                                <RepresentativesRingPieReact message={{id: 'produce_distribution'}} intl={intl}\n                                                             data={pieChart} style={{height: 300}}/>\n                        }\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-md-6 mt-3\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div style={{height: 350}}>\n                        {\n                            supplyTypesChart === null ?\n                                <TronLoader/> :\n                                <SupplyTypesTRXPieChart message={{id: 'total_TRX_supply'}} intl={intl}\n                                                             data={supplyTypesChart} style={{height: 300}}/>\n                        }\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n        </main>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    priceGraph: state.markets.price\n  };\n}\n\nconst mapDispatchToProps = {\n  loadPriceData,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Statistics))\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blockchain/Statistics/index.js","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        var names = data.mapArray(data.getName);\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendModel.js\n// module id = 1148\n// module chunks = 1 8 9 10","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/LegendView.js\n// module id = 1149\n// module chunks = 1 8 9 10","import React from 'react'\nimport {connect} from \"react-redux\";\nimport {injectIntl} from \"react-intl\";\n\nimport config from './chart.config.js'\n\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/pie'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/legend/ScrollableLegendModel.js'\nimport 'echarts/lib/component/legend/ScrollableLegendView.js'\nimport 'echarts/lib/component/legend/scrollableLegendAction.js'\n\n\nexport class RingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message} = this.props;\n\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.ringPieChart.title.text = intl.formatMessage({id: message.id}) + ' Top 10';\n\n    config.ringPieChart.series[0].data = [];\n    config.ringPieChart.series[1].data = [];\n    config.ringPieChart.legend.data = [];\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let sortObj = data.sort(compare(\"name\"));\n      let pairData = [];\n      let exchanges = []\n      let temp = [];\n      for (let index in sortObj) {\n        pairData.push({name: sortObj[index].pair, value: sortObj[index].volume});\n        if (temp.indexOf(sortObj[index].name) < 0) {\n          temp.push(sortObj[index].name)\n          exchanges.push({name: sortObj[index].name, value: 0, subCount: []});\n        }\n      }\n\n      for (let index in exchanges) {\n        for (let idx in sortObj) {\n          if (sortObj[idx].name === exchanges[index].name) {\n            exchanges[index].value = exchanges[index].value + sortObj[idx].volume;\n            exchanges[index].subCount.push({name: sortObj[idx].pair, value: sortObj[idx].volume});\n          }\n        }\n      }\n\n      exchanges.sort(compare(\"value\"));\n      let finalExchanges = exchanges.slice(exchanges.length - 10, exchanges.length);\n      let finalPairData = []\n      for (let index in finalExchanges) {\n        finalPairData.push(...finalExchanges[index].subCount);\n      }\n      config.ringPieChart.series[0].data = [];\n      config.ringPieChart.series[1].data = [];\n\n      config.ringPieChart.legend.data = temp;\n      config.ringPieChart.series[0].data = finalExchanges;\n      config.ringPieChart.series[1].data = finalPairData;\n\n    }\n    if (data && data.length === 0) {\n      config.ringPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.ringPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\nexport class RepresentativesRingPieReact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    let id = ('_' + Math.random()).replace('.', '_');\n    this.state = {\n      pieId: 'ringPie' + id\n    }\n  }\n\n  initPie(id) {\n    let {intl, data, message, source} = this.props;\n    if (data.length) {\n      for (let index in data) {\n        if (data[index].name.indexOf(\"http://\") > -1) {\n          data[index].name = data[index].name.substring(7).split('.com')[0];\n        }\n      }\n    }\n    let myChart = echarts.getInstanceByDom(document.getElementById(id));\n    if (myChart === undefined) {\n      myChart = echarts.init(document.getElementById(id));\n    }\n    config.representPieChart.title.text = intl.formatMessage({id: message.id});\n    config.representPieChart.series[0].data = [];\n    config.representPieChart.legend.data = [];\n    config.representPieChart.title.link = '#/blockchain/stats/pieChart';\n    config.representPieChart.tooltip.formatter = function (datas) {\n      return (\n          intl.formatMessage({id: 'witness'}) + ' : ' + datas.name + '<br/>' +\n          intl.formatMessage({id: 'produced_blocks'}) + ' : ' + datas.value + '<br/>' +\n          intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n      )\n\n    }\n    if (source === 'singleChart') {\n      config.representPieChart.legend.show = true;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: true,\n          title: 'save'\n        }\n      }\n    } else {\n      config.representPieChart.legend.show = false;\n      config.representPieChart.toolbox.feature = {\n        restore: {\n          show: false,\n          title: 'restore'\n        },\n        saveAsImage: {\n          show: false,\n          title: 'save'\n        }\n      }\n    }\n\n    function compare(property) {\n      return function (obj1, obj2) {\n\n        if (obj1[property] > obj2[property]) {\n          return 1;\n        } else if (obj1[property] < obj2[property]) {\n          return -1;\n        } else {\n          return 0;\n        }\n\n      }\n    }\n\n    if (data && data.length > 0) {\n      let exchanges = []\n      let temp = [];\n      for (let index in data) {\n        if (temp.indexOf(data[index].name) < 0) {\n          temp.push(data[index].name)\n          exchanges.push({name: data[index].name, value: data[index].volumeValue});\n        }\n      }\n\n      exchanges.sort(compare(\"value\")).reverse();\n\n      config.representPieChart.series[0].data = [];\n      config.representPieChart.legend.data = temp;\n      config.representPieChart.series[0].data = exchanges;\n\n    }\n    if (data && data.length === 0) {\n      config.representPieChart.title.text = \"No data\";\n    }\n    myChart.setOption(config.representPieChart);\n  }\n\n\n  componentDidMount() {\n    this.initPie(this.state.pieId);\n  }\n\n  componentDidUpdate() {\n    this.initPie(this.state.pieId);\n  }\n\n  render() {\n    return (\n        <div>\n          <div id={this.state.pieId} style={this.props.style}></div>\n        </div>\n    )\n  }\n}\n\n\n\nexport class SupplyTypesTRXPieChart extends React.Component {\n\n    constructor(props) {\n        super(props)\n        let id = ('_' + Math.random()).replace('.', '_');\n        this.state = {\n            pieId: 'ringPie' + id\n        }\n    }\n\n    initPie(id) {\n        let {intl, data,message,source} = this.props;\n        let myChart = echarts.getInstanceByDom(document.getElementById(id));\n        if (myChart === undefined) {\n            myChart = echarts.init(document.getElementById(id));\n        }\n        config.supplyTypesTRXPieChart.title.text=intl.formatMessage({id:message.id});\n        config.supplyTypesTRXPieChart.series[0].data = [];\n        config.supplyTypesTRXPieChart.legend.data = [];\n        config.supplyTypesTRXPieChart.title.link = '#/blockchain/stats/supply';\n        config.supplyTypesTRXPieChart.tooltip.formatter = function (datas) {\n            return (\n                intl.formatMessage({id: datas.name}) + ' (' + intl.formatNumber(datas.value) + ' TRX' + ')<br/>' +\n                intl.formatMessage({id: '_percentage'}) + ' : ' + datas.percent + '%'\n            )\n        }\n        if(source==='singleChart'){\n            let seriesCenter = ['50%', '50%'];\n            config.supplyTypesTRXPieChart.legend.show = true;\n            config.supplyTypesTRXPieChart.series[0].center = seriesCenter;\n            config.supplyTypesTRXPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }else{\n            let seriesCenter = ['50%', '60%'];\n            config.supplyTypesTRXPieChart.legend.show = false;\n            config.supplyTypesTRXPieChart.series[0].center = seriesCenter;\n            config.supplyTypesTRXPieChart.toolbox.feature = {\n                restore: {\n                    show: false,\n                    title: 'restore'\n                },\n                saveAsImage: {\n                    show: false,\n                    title: 'save'\n                }\n            }\n        }\n\n        function compare(property) {\n            return function (obj1, obj2) {\n\n                if (obj1[property] > obj2[property]) {\n                    return 1;\n                } else if (obj1[property] < obj2[property]) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n\n            }\n        }\n\n        if (data && data.length > 0) {\n            let exchanges = []\n            let temp = [];\n            for (let index in data) {\n                if (temp.indexOf(data[index].name) < 0) {\n                    temp.push(intl.formatMessage({id: data[index].name}) )\n                    exchanges.push({name: intl.formatMessage({id: data[index].name}), value: data[index].value,selected:data[index].selected});\n                }\n            }\n\n            exchanges.sort(compare(\"value\")).reverse();\n            config.supplyTypesTRXPieChart.series[0].data = [];\n            config.supplyTypesTRXPieChart.legend.data = temp;\n            config.supplyTypesTRXPieChart.series[0].data = exchanges;\n\n        }\n        if(data && data.length===0){\n            config.supplyTypesTRXPieChart.title.text=\"No data\";\n        }\n        myChart.setOption(config.supplyTypesTRXPieChart);\n    }\n\n\n    componentDidMount() {\n        this.initPie(this.state.pieId);\n    }\n\n    componentDidUpdate() {\n        this.initPie(this.state.pieId);\n    }\n\n    render() {\n        return (\n            <div>\n                <div id={this.state.pieId} style={this.props.style}></div>\n            </div>\n        )\n    }\n}\n\n// function mapStateToProps(state) {\n//   return {}\n// }\n//\n// const mapDispatchToProps = {};\n\n// export default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(injectIntl(RingPieReact));\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/common/RingPieChart.js","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend.js\n// module id = 1179\n// module chunks = 1 8 9 10","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendAction.js\n// module id = 1180\n// module chunks = 1 8 9 10","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/legendFilter.js\n// module id = 1181\n// module chunks = 1 8 9 10","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendModel.js\n// module id = 1182\n// module chunks = 1 8 9 10","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/ScrollableLegendView.js\n// module id = 1183\n// module chunks = 1 8 9 10","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/echarts/lib/component/legend/scrollableLegendAction.js\n// module id = 1184\n// module chunks = 1 8 9 10","\n\nexport const tronAddresses = [\n  '27d3byPxZXKQWfXX7sJvemJJuv5M65F3vjS',\n  '27fXgQ46DcjEsZ444tjZPKULcxiUfDrDjqj',\n  '27SWXcHuQgFf9uv49FknBBBYBaH3DUk4JPx',\n  '27WtBq2KoSy5v8VnVZBZHHJcDuWNiSgjbE3',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/tron.js"],"sourceRoot":""}